// Compiled by ClojureScript 0.0-2719 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2719";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$65,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$66,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$67,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$68,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$69,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__29533__delegate = function (args){
return console.log.apply(console,(function (){var G__29532 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__29532) : cljs.core.into_array.call(null,G__29532));
})());
};
var G__29533 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29534__i = 0, G__29534__a = new Array(arguments.length -  0);
while (G__29534__i < G__29534__a.length) {G__29534__a[G__29534__i] = arguments[G__29534__i + 0]; ++G__29534__i;}
  args = new cljs.core.IndexedSeq(G__29534__a,0);
} 
return G__29533__delegate.call(this,args);};
G__29533.cljs$lang$maxFixedArity = 0;
G__29533.cljs$lang$applyTo = (function (arglist__29535){
var args = cljs.core.seq(arglist__29535);
return G__29533__delegate(args);
});
G__29533.cljs$core$IFn$_invoke$arity$variadic = G__29533__delegate;
return G__29533;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__29537 = x;
return goog.isString(G__29537);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__29539 = x__$1;
return goog.typeOf(G__29539);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3799__auto__ = ty;
if(cljs.core.truth_(and__3799__auto__)){
return ty.cljs$lang$type;
} else {
return and__3799__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__29541 = obj;
return goog.typeOf(G__29541);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__29543 = Symbol;
return goog.typeOf(G__29543);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4698__auto___29545 = len;
var i_29546 = (0);
while(true){
if((i_29546 < n__4698__auto___29545)){
(new_arr[i_29546] = (arr[i_29546]));

var G__29547 = (i_29546 + (1));
i_29546 = G__29547;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__29548 = (i + (1));
i = G__29548;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__29557__delegate = function (array,i,idxs){
var G__29554 = aget;
var G__29555 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__29556 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__29554,G__29555,G__29556) : cljs.core.apply.call(null,G__29554,G__29555,G__29556));
};
var G__29557 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__29558__i = 0, G__29558__a = new Array(arguments.length -  2);
while (G__29558__i < G__29558__a.length) {G__29558__a[G__29558__i] = arguments[G__29558__i + 2]; ++G__29558__i;}
  idxs = new cljs.core.IndexedSeq(G__29558__a,0);
} 
return G__29557__delegate.call(this,array,i,idxs);};
G__29557.cljs$lang$maxFixedArity = 2;
G__29557.cljs$lang$applyTo = (function (arglist__29559){
var array = cljs.core.first(arglist__29559);
arglist__29559 = cljs.core.next(arglist__29559);
var i = cljs.core.first(arglist__29559);
var idxs = cljs.core.rest(arglist__29559);
return G__29557__delegate(array,i,idxs);
});
G__29557.cljs$core$IFn$_invoke$arity$variadic = G__29557__delegate;
return G__29557;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__29560 = null;
if (arguments.length > 2) {
var G__29561__i = 0, G__29561__a = new Array(arguments.length -  2);
while (G__29561__i < G__29561__a.length) {G__29561__a[G__29561__i] = arguments[G__29561__i + 2]; ++G__29561__i;}
G__29560 = new cljs.core.IndexedSeq(G__29561__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__29560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__29570__delegate = function (array,idx,idx2,idxv){
var G__29566 = aset;
var G__29567 = (array[idx]);
var G__29568 = idx2;
var G__29569 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__29566,G__29567,G__29568,G__29569) : cljs.core.apply.call(null,G__29566,G__29567,G__29568,G__29569));
};
var G__29570 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__29571__i = 0, G__29571__a = new Array(arguments.length -  3);
while (G__29571__i < G__29571__a.length) {G__29571__a[G__29571__i] = arguments[G__29571__i + 3]; ++G__29571__i;}
  idxv = new cljs.core.IndexedSeq(G__29571__a,0);
} 
return G__29570__delegate.call(this,array,idx,idx2,idxv);};
G__29570.cljs$lang$maxFixedArity = 3;
G__29570.cljs$lang$applyTo = (function (arglist__29572){
var array = cljs.core.first(arglist__29572);
arglist__29572 = cljs.core.next(arglist__29572);
var idx = cljs.core.first(arglist__29572);
arglist__29572 = cljs.core.next(arglist__29572);
var idx2 = cljs.core.first(arglist__29572);
var idxv = cljs.core.rest(arglist__29572);
return G__29570__delegate(array,idx,idx2,idxv);
});
G__29570.cljs$core$IFn$_invoke$arity$variadic = G__29570__delegate;
return G__29570;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__29573 = null;
if (arguments.length > 3) {
var G__29574__i = 0, G__29574__a = new Array(arguments.length -  3);
while (G__29574__i < G__29574__a.length) {G__29574__a[G__29574__i] = arguments[G__29574__i + 3]; ++G__29574__i;}
G__29573 = new cljs.core.IndexedSeq(G__29574__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__29573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__29580 = (function (a,x){
a.push(x);

return a;
});
var G__29581 = [];
var G__29582 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__29580,G__29581,G__29582) : cljs.core.reduce.call(null,G__29580,G__29581,G__29582));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__29583__i = 0, G__29583__a = new Array(arguments.length -  2);
while (G__29583__i < G__29583__a.length) {G__29583__a[G__29583__i] = arguments[G__29583__i + 2]; ++G__29583__i;}
  args = new cljs.core.IndexedSeq(G__29583__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__29584){
var obj = cljs.core.first(arglist__29584);
arglist__29584 = cljs.core.next(arglist__29584);
var s = cljs.core.first(arglist__29584);
var args = cljs.core.rest(arglist__29584);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj29586 = {};
return obj29586;
})();


cljs.core.IFn = (function (){var obj29588 = {};
return obj29588;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29634 = x__4455__auto__;
return goog.typeOf(G__29634);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29636 = x__4455__auto__;
return goog.typeOf(G__29636);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29638 = x__4455__auto__;
return goog.typeOf(G__29638);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29640 = x__4455__auto__;
return goog.typeOf(G__29640);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29642 = x__4455__auto__;
return goog.typeOf(G__29642);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29644 = x__4455__auto__;
return goog.typeOf(G__29644);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29646 = x__4455__auto__;
return goog.typeOf(G__29646);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29648 = x__4455__auto__;
return goog.typeOf(G__29648);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29650 = x__4455__auto__;
return goog.typeOf(G__29650);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29652 = x__4455__auto__;
return goog.typeOf(G__29652);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29654 = x__4455__auto__;
return goog.typeOf(G__29654);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29656 = x__4455__auto__;
return goog.typeOf(G__29656);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29658 = x__4455__auto__;
return goog.typeOf(G__29658);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29660 = x__4455__auto__;
return goog.typeOf(G__29660);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29662 = x__4455__auto__;
return goog.typeOf(G__29662);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29664 = x__4455__auto__;
return goog.typeOf(G__29664);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29666 = x__4455__auto__;
return goog.typeOf(G__29666);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29668 = x__4455__auto__;
return goog.typeOf(G__29668);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29670 = x__4455__auto__;
return goog.typeOf(G__29670);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29672 = x__4455__auto__;
return goog.typeOf(G__29672);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29674 = x__4455__auto__;
return goog.typeOf(G__29674);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__29676 = x__4455__auto__;
return goog.typeOf(G__29676);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj29678 = {};
return obj29678;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3799__auto__ = value;
if(and__3799__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3799__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4455__auto__ = (((value == null))?null:value);
return (function (){var or__3811__auto__ = (cljs.core._clone[(function (){var G__29682 = x__4455__auto__;
return goog.typeOf(G__29682);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clone["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj29684 = {};
return obj29684;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._count[(function (){var G__29688 = x__4455__auto__;
return goog.typeOf(G__29688);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._count["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj29690 = {};
return obj29690;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._empty[(function (){var G__29694 = x__4455__auto__;
return goog.typeOf(G__29694);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._empty["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj29696 = {};
return obj29696;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._conj[(function (){var G__29700 = x__4455__auto__;
return goog.typeOf(G__29700);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj29702 = {};
return obj29702;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__29708 = x__4455__auto__;
return goog.typeOf(G__29708);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__29710 = x__4455__auto__;
return goog.typeOf(G__29710);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj29712 = {};
return obj29712;
})();


cljs.core.ISeq = (function (){var obj29714 = {};
return obj29714;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._first[(function (){var G__29718 = x__4455__auto__;
return goog.typeOf(G__29718);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rest[(function (){var G__29722 = x__4455__auto__;
return goog.typeOf(G__29722);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj29724 = {};
return obj29724;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._next[(function (){var G__29728 = x__4455__auto__;
return goog.typeOf(G__29728);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj29730 = {};
return obj29730;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__29736 = x__4455__auto__;
return goog.typeOf(G__29736);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__29738 = x__4455__auto__;
return goog.typeOf(G__29738);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj29740 = {};
return obj29740;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__29744 = x__4455__auto__;
return goog.typeOf(G__29744);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc[(function (){var G__29748 = x__4455__auto__;
return goog.typeOf(G__29748);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj29750 = {};
return obj29750;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc[(function (){var G__29754 = x__4455__auto__;
return goog.typeOf(G__29754);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj29756 = {};
return obj29756;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._key[(function (){var G__29760 = x__4455__auto__;
return goog.typeOf(G__29760);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._val[(function (){var G__29764 = x__4455__auto__;
return goog.typeOf(G__29764);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._val["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj29766 = {};
return obj29766;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin[(function (){var G__29770 = x__4455__auto__;
return goog.typeOf(G__29770);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj29772 = {};
return obj29772;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._peek[(function (){var G__29776 = x__4455__auto__;
return goog.typeOf(G__29776);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._peek["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._pop[(function (){var G__29780 = x__4455__auto__;
return goog.typeOf(G__29780);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj29782 = {};
return obj29782;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n[(function (){var G__29786 = x__4455__auto__;
return goog.typeOf(G__29786);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj29788 = {};
return obj29788;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref[(function (){var G__29792 = x__4455__auto__;
return goog.typeOf(G__29792);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj29794 = {};
return obj29794;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref_with_timeout[(function (){var G__29798 = x__4455__auto__;
return goog.typeOf(G__29798);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj29800 = {};
return obj29800;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._meta[(function (){var G__29804 = x__4455__auto__;
return goog.typeOf(G__29804);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj29806 = {};
return obj29806;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._with_meta[(function (){var G__29810 = x__4455__auto__;
return goog.typeOf(G__29810);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj29812 = {};
return obj29812;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__29818 = x__4455__auto__;
return goog.typeOf(G__29818);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__29820 = x__4455__auto__;
return goog.typeOf(G__29820);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj29822 = {};
return obj29822;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._kv_reduce[(function (){var G__29826 = x__4455__auto__;
return goog.typeOf(G__29826);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj29828 = {};
return obj29828;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._equiv[(function (){var G__29832 = x__4455__auto__;
return goog.typeOf(G__29832);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._equiv["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj29834 = {};
return obj29834;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._hash[(function (){var G__29838 = x__4455__auto__;
return goog.typeOf(G__29838);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._hash["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj29840 = {};
return obj29840;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._seq[(function (){var G__29844 = x__4455__auto__;
return goog.typeOf(G__29844);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj29846 = {};
return obj29846;
})();


cljs.core.IList = (function (){var obj29848 = {};
return obj29848;
})();


cljs.core.IRecord = (function (){var obj29850 = {};
return obj29850;
})();


cljs.core.IReversible = (function (){var obj29852 = {};
return obj29852;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rseq[(function (){var G__29856 = x__4455__auto__;
return goog.typeOf(G__29856);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rseq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj29858 = {};
return obj29858;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq[(function (){var G__29862 = x__4455__auto__;
return goog.typeOf(G__29862);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq_from[(function (){var G__29866 = x__4455__auto__;
return goog.typeOf(G__29866);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._entry_key[(function (){var G__29870 = x__4455__auto__;
return goog.typeOf(G__29870);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._comparator[(function (){var G__29874 = x__4455__auto__;
return goog.typeOf(G__29874);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._comparator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj29876 = {};
return obj29876;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._write[(function (){var G__29880 = x__4455__auto__;
return goog.typeOf(G__29880);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._write["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._flush[(function (){var G__29884 = x__4455__auto__;
return goog.typeOf(G__29884);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._flush["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj29886 = {};
return obj29886;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._pr_writer[(function (){var G__29890 = x__4455__auto__;
return goog.typeOf(G__29890);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj29892 = {};
return obj29892;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3799__auto__ = d;
if(and__3799__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4455__auto__ = (((d == null))?null:d);
return (function (){var or__3811__auto__ = (cljs.core._realized_QMARK_[(function (){var G__29896 = x__4455__auto__;
return goog.typeOf(G__29896);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj29898 = {};
return obj29898;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._notify_watches[(function (){var G__29902 = x__4455__auto__;
return goog.typeOf(G__29902);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._add_watch[(function (){var G__29906 = x__4455__auto__;
return goog.typeOf(G__29906);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._remove_watch[(function (){var G__29910 = x__4455__auto__;
return goog.typeOf(G__29910);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj29912 = {};
return obj29912;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._as_transient[(function (){var G__29916 = x__4455__auto__;
return goog.typeOf(G__29916);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj29918 = {};
return obj29918;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._conj_BANG_[(function (){var G__29922 = x__4455__auto__;
return goog.typeOf(G__29922);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._persistent_BANG_[(function (){var G__29926 = x__4455__auto__;
return goog.typeOf(G__29926);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj29928 = {};
return obj29928;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_BANG_[(function (){var G__29932 = x__4455__auto__;
return goog.typeOf(G__29932);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj29934 = {};
return obj29934;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__29938 = x__4455__auto__;
return goog.typeOf(G__29938);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj29940 = {};
return obj29940;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__29944 = x__4455__auto__;
return goog.typeOf(G__29944);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._pop_BANG_[(function (){var G__29948 = x__4455__auto__;
return goog.typeOf(G__29948);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj29950 = {};
return obj29950;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__29954 = x__4455__auto__;
return goog.typeOf(G__29954);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj29956 = {};
return obj29956;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._compare[(function (){var G__29960 = x__4455__auto__;
return goog.typeOf(G__29960);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._compare["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj29962 = {};
return obj29962;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._drop_first[(function (){var G__29966 = x__4455__auto__;
return goog.typeOf(G__29966);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj29968 = {};
return obj29968;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_first[(function (){var G__29972 = x__4455__auto__;
return goog.typeOf(G__29972);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_rest[(function (){var G__29976 = x__4455__auto__;
return goog.typeOf(G__29976);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj29978 = {};
return obj29978;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_next[(function (){var G__29982 = x__4455__auto__;
return goog.typeOf(G__29982);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj29984 = {};
return obj29984;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._name[(function (){var G__29988 = x__4455__auto__;
return goog.typeOf(G__29988);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._name["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._namespace[(function (){var G__29992 = x__4455__auto__;
return goog.typeOf(G__29992);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._namespace["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj29994 = {};
return obj29994;
})();


cljs.core.IReset = (function (){var obj29996 = {};
return obj29996;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._reset_BANG_[(function (){var G__30000 = x__4455__auto__;
return goog.typeOf(G__30000);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj30002 = {};
return obj30002;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__30012 = x__4455__auto__;
return goog.typeOf(G__30012);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__30014 = x__4455__auto__;
return goog.typeOf(G__30014);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__30016 = x__4455__auto__;
return goog.typeOf(G__30016);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__30018 = x__4455__auto__;
return goog.typeOf(G__30018);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj30020 = {};
return obj30020;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._vreset_BANG_[(function (){var G__30024 = x__4455__auto__;
return goog.typeOf(G__30024);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj30026 = {};
return obj30026;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._iterator[(function (){var G__30030 = x__4455__auto__;
return goog.typeOf(G__30030);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._iterator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__30033 = (4294967295);
var G__30034 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30033,G__30034) : Math.imul.call(null,G__30033,G__30034));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__30037 = a;
var G__30038 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30037,G__30038) : Math.imul.call(null,G__30037,G__30038));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__30039 = (i + (2));
var G__30040 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__30039;
h1 = G__30040;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj30042 = {};
return obj30042;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__30043 = (i + (1));
var G__30044 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__30043;
hash = G__30044;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj30048 = {};
return obj30048;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__30051 = o;
if(G__30051){
var bit__4485__auto__ = (G__30051.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4485__auto__) || (G__30051.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__30052 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30052) : Math.floor.call(null,G__30052));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__30059 = a.ns;
var G__30060 = b.ns;
return goog.array.defaultCompare(G__30059,G__30060);
})();
if(((0) === nsc)){
var G__30061 = a.name;
var G__30062 = b.name;
return goog.array.defaultCompare(G__30061,G__30062);
} else {
return nsc;
}
}
} else {
var G__30063 = a.name;
var G__30064 = b.name;
return goog.array.defaultCompare(G__30063,G__30064);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__30066 = null;
var G__30066__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__30066__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__30066 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__30066__2.call(this,self__,coll);
case 3:
return G__30066__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30066.cljs$core$IFn$_invoke$arity$2 = G__30066__2;
G__30066.cljs$core$IFn$_invoke$arity$3 = G__30066__3;
return G__30066;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args30065){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30065)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__30114 = null;
var G__30114__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__30114__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__30114__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__30114__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__30114__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__30114__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__30114__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__30114__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__30114__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__30114__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__30114__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__30114__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__30114__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__30114__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__30114__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__30114__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__30114__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__30114__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__30114__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__30114__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__30114__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__30114__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30070 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30071 = a;
var G__30072 = b;
var G__30073 = c;
var G__30074 = d;
var G__30075 = e;
var G__30076 = f;
var G__30077 = g;
var G__30078 = h;
var G__30079 = i;
var G__30080 = j;
var G__30081 = k;
var G__30082 = l;
var G__30083 = m;
var G__30084 = n;
var G__30085 = o;
var G__30086 = p;
var G__30087 = q;
var G__30088 = r;
var G__30089 = s;
var G__30090 = t;
var G__30091 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091) : cljs.core.apply.call(null,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091));
});
G__30114 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30114__1.call(this,self__);
case 2:
return G__30114__2.call(this,self__,a);
case 3:
return G__30114__3.call(this,self__,a,b);
case 4:
return G__30114__4.call(this,self__,a,b,c);
case 5:
return G__30114__5.call(this,self__,a,b,c,d);
case 6:
return G__30114__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30114__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30114__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30114__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30114__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30114__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30114__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30114__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30114__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30114__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30114__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30114__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30114__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30114__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30114__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30114__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30114__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30114.cljs$core$IFn$_invoke$arity$1 = G__30114__1;
G__30114.cljs$core$IFn$_invoke$arity$2 = G__30114__2;
G__30114.cljs$core$IFn$_invoke$arity$3 = G__30114__3;
G__30114.cljs$core$IFn$_invoke$arity$4 = G__30114__4;
G__30114.cljs$core$IFn$_invoke$arity$5 = G__30114__5;
G__30114.cljs$core$IFn$_invoke$arity$6 = G__30114__6;
G__30114.cljs$core$IFn$_invoke$arity$7 = G__30114__7;
G__30114.cljs$core$IFn$_invoke$arity$8 = G__30114__8;
G__30114.cljs$core$IFn$_invoke$arity$9 = G__30114__9;
G__30114.cljs$core$IFn$_invoke$arity$10 = G__30114__10;
G__30114.cljs$core$IFn$_invoke$arity$11 = G__30114__11;
G__30114.cljs$core$IFn$_invoke$arity$12 = G__30114__12;
G__30114.cljs$core$IFn$_invoke$arity$13 = G__30114__13;
G__30114.cljs$core$IFn$_invoke$arity$14 = G__30114__14;
G__30114.cljs$core$IFn$_invoke$arity$15 = G__30114__15;
G__30114.cljs$core$IFn$_invoke$arity$16 = G__30114__16;
G__30114.cljs$core$IFn$_invoke$arity$17 = G__30114__17;
G__30114.cljs$core$IFn$_invoke$arity$18 = G__30114__18;
G__30114.cljs$core$IFn$_invoke$arity$19 = G__30114__19;
G__30114.cljs$core$IFn$_invoke$arity$20 = G__30114__20;
G__30114.cljs$core$IFn$_invoke$arity$21 = G__30114__21;
G__30114.cljs$core$IFn$_invoke$arity$22 = G__30114__22;
return G__30114;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args30069){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30069)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30092 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30093 = a;
var G__30094 = b;
var G__30095 = c;
var G__30096 = d;
var G__30097 = e;
var G__30098 = f;
var G__30099 = g;
var G__30100 = h;
var G__30101 = i;
var G__30102 = j;
var G__30103 = k;
var G__30104 = l;
var G__30105 = m;
var G__30106 = n;
var G__30107 = o;
var G__30108 = p;
var G__30109 = q;
var G__30110 = r;
var G__30111 = s;
var G__30112 = t;
var G__30113 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113) : cljs.core.apply.call(null,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__30116 = x;
if(G__30116){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__30116.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__30116.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30116);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30116);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__30118 = value;
if(G__30118){
var bit__4492__auto__ = (G__30118.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4492__auto__) || (G__30118.cljs$core$ICloneable$)){
return true;
} else {
if((!G__30118.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30118);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30118);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30120 = coll;
if(G__30120){
var bit__4485__auto__ = (G__30120.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4485__auto__) || (G__30120.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30122 = coll;
if(G__30122){
var bit__4485__auto__ = (G__30122.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__30122.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__30124 = coll;
if(G__30124){
var bit__4485__auto__ = (G__30124.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__30124.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30126 = coll;
if(G__30126){
var bit__4485__auto__ = (G__30126.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4485__auto__) || (G__30126.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__30131__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__30132 = y;
var G__30133 = cljs.core.first(more);
var G__30134 = cljs.core.next(more);
x = G__30132;
y = G__30133;
more = G__30134;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30131 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30135__i = 0, G__30135__a = new Array(arguments.length -  2);
while (G__30135__i < G__30135__a.length) {G__30135__a[G__30135__i] = arguments[G__30135__i + 2]; ++G__30135__i;}
  more = new cljs.core.IndexedSeq(G__30135__a,0);
} 
return G__30131__delegate.call(this,x,y,more);};
G__30131.cljs$lang$maxFixedArity = 2;
G__30131.cljs$lang$applyTo = (function (arglist__30136){
var x = cljs.core.first(arglist__30136);
arglist__30136 = cljs.core.next(arglist__30136);
var y = cljs.core.first(arglist__30136);
var more = cljs.core.rest(arglist__30136);
return G__30131__delegate(x,y,more);
});
G__30131.cljs$core$IFn$_invoke$arity$variadic = G__30131__delegate;
return G__30131;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__30137 = null;
if (arguments.length > 2) {
var G__30138__i = 0, G__30138__a = new Array(arguments.length -  2);
while (G__30138__i < G__30138__a.length) {G__30138__a[G__30138__i] = arguments[G__30138__i + 2]; ++G__30138__i;}
G__30137 = new cljs.core.IndexedSeq(G__30138__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__30139 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__30139) : cljs.core.es6_iterator_seq.call(null,G__30139));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30140 = (n + (1));
var G__30141 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30142 = cljs.core.next(coll__$1);
n = G__30140;
hash_code = G__30141;
coll__$1 = G__30142;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30143 = (n + (1));
var G__30144 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30145 = cljs.core.next(coll__$1);
n = G__30143;
hash_code = G__30144;
coll__$1 = G__30145;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__30146 = o;
return goog.getUid(G__30146);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__30148 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30148) : cljs.core.deref.call(null,G__30148));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30155 = val;
var G__30156 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30155,G__30156) : f.call(null,G__30155,G__30156));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30161 = nval;
var G__30162 = (n + (1));
val = G__30161;
n = G__30162;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30157 = val__$1;
var G__30158 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30157,G__30158) : f.call(null,G__30157,G__30158));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30163 = nval;
var G__30164 = (n + (1));
val__$1 = G__30163;
n = G__30164;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30159 = val__$1;
var G__30160 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30159,G__30160) : f.call(null,G__30159,G__30160));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30165 = nval;
var G__30166 = (n + (1));
val__$1 = G__30165;
n = G__30166;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30173 = val;
var G__30174 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30173,G__30174) : f.call(null,G__30173,G__30174));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30179 = nval;
var G__30180 = (n + (1));
val = G__30179;
n = G__30180;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30175 = val__$1;
var G__30176 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30175,G__30176) : f.call(null,G__30175,G__30176));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30181 = nval;
var G__30182 = (n + (1));
val__$1 = G__30181;
n = G__30182;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30177 = val__$1;
var G__30178 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30177,G__30178) : f.call(null,G__30177,G__30178));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30183 = nval;
var G__30184 = (n + (1));
val__$1 = G__30183;
n = G__30184;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__30186 = x;
if(G__30186){
var bit__4492__auto__ = (G__30186.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4492__auto__) || (G__30186.cljs$core$ICounted$)){
return true;
} else {
if((!G__30186.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30186);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30186);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__30188 = x;
if(G__30188){
var bit__4492__auto__ = (G__30188.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4492__auto__) || (G__30188.cljs$core$IIndexed$)){
return true;
} else {
if((!G__30188.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30188);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30188);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30189 = coll__$1;
var G__30190 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30189,G__30190) : cljs.core.equiv_sequential.call(null,G__30189,G__30190));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30191 = o;
var G__30192 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30191,G__30192) : cljs.core.cons.call(null,G__30191,G__30192));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30195 = coll__$1;
var G__30196 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30195,G__30196) : cljs.core.equiv_sequential.call(null,G__30195,G__30196));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__30197 = cljs.core.List.EMPTY;
var G__30198 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__30197,G__30198) : cljs.core.with_meta.call(null,G__30197,G__30198));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__30199 = f;
var G__30200 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__30199,G__30200) : cljs.core.seq_reduce.call(null,G__30199,G__30200));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__30201 = f;
var G__30202 = start;
var G__30203 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__30201,G__30202,G__30203) : cljs.core.seq_reduce.call(null,G__30201,G__30202,G__30203));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30204 = o;
var G__30205 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30204,G__30205) : cljs.core.cons.call(null,G__30204,G__30205));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__30206 = sn;
s = G__30206;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__30211__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__30212 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__30213 = cljs.core.first(xs);
var G__30214 = cljs.core.next(xs);
coll = G__30212;
x = G__30213;
xs = G__30214;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__30211 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__30215__i = 0, G__30215__a = new Array(arguments.length -  2);
while (G__30215__i < G__30215__a.length) {G__30215__a[G__30215__i] = arguments[G__30215__i + 2]; ++G__30215__i;}
  xs = new cljs.core.IndexedSeq(G__30215__a,0);
} 
return G__30211__delegate.call(this,coll,x,xs);};
G__30211.cljs$lang$maxFixedArity = 2;
G__30211.cljs$lang$applyTo = (function (arglist__30216){
var coll = cljs.core.first(arglist__30216);
arglist__30216 = cljs.core.next(arglist__30216);
var x = cljs.core.first(arglist__30216);
var xs = cljs.core.rest(arglist__30216);
return G__30211__delegate(coll,x,xs);
});
G__30211.cljs$core$IFn$_invoke$arity$variadic = G__30211__delegate;
return G__30211;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__30217 = null;
if (arguments.length > 2) {
var G__30218__i = 0, G__30218__a = new Array(arguments.length -  2);
while (G__30218__i < G__30218__a.length) {G__30218__a[G__30218__i] = arguments[G__30218__i + 2]; ++G__30218__i;}
G__30217 = new cljs.core.IndexedSeq(G__30218__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__30217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__30219 = cljs.core.next(s);
var G__30220 = (acc + (1));
s = G__30219;
acc = G__30220;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__30222 = coll;
if(G__30222){
var bit__4485__auto__ = (G__30222.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4485__auto__) || (G__30222.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__30223 = cljs.core.next(coll);
var G__30224 = (n - (1));
coll = G__30223;
n = G__30224;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__30225 = cljs.core.next(coll);
var G__30226 = (n - (1));
var G__30227 = not_found;
coll = G__30225;
n = G__30226;
not_found = G__30227;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__30232 = coll;
if(G__30232){
var bit__4485__auto__ = (G__30232.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__30232.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30233 = coll;
if(G__30233){
var bit__4492__auto__ = (G__30233.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__30233.cljs$core$ISeq$)){
return true;
} else {
if((!G__30233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30233);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__30234 = coll;
if(G__30234){
var bit__4485__auto__ = (G__30234.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__30234.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30235 = coll;
if(G__30235){
var bit__4492__auto__ = (G__30235.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__30235.cljs$core$ISeq$)){
return true;
} else {
if((!G__30235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30235);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__30236 = (n__$1 - (1));
var G__30237 = cljs.core.rest(xs);
n__$1 = G__30236;
xs = G__30237;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__30240 = o;
if(G__30240){
var bit__4485__auto__ = (G__30240.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__30240.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__30241 = o;
if(G__30241){
var bit__4485__auto__ = (G__30241.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__30241.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__30245__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__30246 = ret;
var G__30247 = cljs.core.first(kvs);
var G__30248 = cljs.core.second(kvs);
var G__30249 = cljs.core.nnext(kvs);
coll = G__30246;
k = G__30247;
v = G__30248;
kvs = G__30249;
continue;
} else {
return ret;
}
break;
}
};
var G__30245 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__30250__i = 0, G__30250__a = new Array(arguments.length -  3);
while (G__30250__i < G__30250__a.length) {G__30250__a[G__30250__i] = arguments[G__30250__i + 3]; ++G__30250__i;}
  kvs = new cljs.core.IndexedSeq(G__30250__a,0);
} 
return G__30245__delegate.call(this,coll,k,v,kvs);};
G__30245.cljs$lang$maxFixedArity = 3;
G__30245.cljs$lang$applyTo = (function (arglist__30251){
var coll = cljs.core.first(arglist__30251);
arglist__30251 = cljs.core.next(arglist__30251);
var k = cljs.core.first(arglist__30251);
arglist__30251 = cljs.core.next(arglist__30251);
var v = cljs.core.first(arglist__30251);
var kvs = cljs.core.rest(arglist__30251);
return G__30245__delegate(coll,k,v,kvs);
});
G__30245.cljs$core$IFn$_invoke$arity$variadic = G__30245__delegate;
return G__30245;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__30252 = null;
if (arguments.length > 3) {
var G__30253__i = 0, G__30253__a = new Array(arguments.length -  3);
while (G__30253__i < G__30253__a.length) {G__30253__a[G__30253__i] = arguments[G__30253__i + 3]; ++G__30253__i;}
G__30252 = new cljs.core.IndexedSeq(G__30253__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__30252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__30256__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30257 = ret;
var G__30258 = cljs.core.first(ks);
var G__30259 = cljs.core.next(ks);
coll = G__30257;
k = G__30258;
ks = G__30259;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30256 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30260__i = 0, G__30260__a = new Array(arguments.length -  2);
while (G__30260__i < G__30260__a.length) {G__30260__a[G__30260__i] = arguments[G__30260__i + 2]; ++G__30260__i;}
  ks = new cljs.core.IndexedSeq(G__30260__a,0);
} 
return G__30256__delegate.call(this,coll,k,ks);};
G__30256.cljs$lang$maxFixedArity = 2;
G__30256.cljs$lang$applyTo = (function (arglist__30261){
var coll = cljs.core.first(arglist__30261);
arglist__30261 = cljs.core.next(arglist__30261);
var k = cljs.core.first(arglist__30261);
var ks = cljs.core.rest(arglist__30261);
return G__30256__delegate(coll,k,ks);
});
G__30256.cljs$core$IFn$_invoke$arity$variadic = G__30256__delegate;
return G__30256;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__30262 = null;
if (arguments.length > 2) {
var G__30263__i = 0, G__30263__a = new Array(arguments.length -  2);
while (G__30263__i < G__30263__a.length) {G__30263__a[G__30263__i] = arguments[G__30263__i + 2]; ++G__30263__i;}
G__30262 = new cljs.core.IndexedSeq(G__30263__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3811__auto__ = (function (){var G__30268 = f;
return goog.isFunction(G__30268);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__30269 = f;
if(G__30269){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto____$1 = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
return G__30269.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__30269.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30269);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__30735 = null;
var G__30735__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__30735__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30271 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30271) : self__.afn.call(null,G__30271));
});
var G__30735__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30272 = a;
var G__30273 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30272,G__30273) : self__.afn.call(null,G__30272,G__30273));
});
var G__30735__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30274 = a;
var G__30275 = b;
var G__30276 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30274,G__30275,G__30276) : self__.afn.call(null,G__30274,G__30275,G__30276));
});
var G__30735__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30277 = a;
var G__30278 = b;
var G__30279 = c;
var G__30280 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30277,G__30278,G__30279,G__30280) : self__.afn.call(null,G__30277,G__30278,G__30279,G__30280));
});
var G__30735__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30281 = a;
var G__30282 = b;
var G__30283 = c;
var G__30284 = d;
var G__30285 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30281,G__30282,G__30283,G__30284,G__30285) : self__.afn.call(null,G__30281,G__30282,G__30283,G__30284,G__30285));
});
var G__30735__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30286 = a;
var G__30287 = b;
var G__30288 = c;
var G__30289 = d;
var G__30290 = e;
var G__30291 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30286,G__30287,G__30288,G__30289,G__30290,G__30291) : self__.afn.call(null,G__30286,G__30287,G__30288,G__30289,G__30290,G__30291));
});
var G__30735__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30292 = a;
var G__30293 = b;
var G__30294 = c;
var G__30295 = d;
var G__30296 = e;
var G__30297 = f;
var G__30298 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30292,G__30293,G__30294,G__30295,G__30296,G__30297,G__30298) : self__.afn.call(null,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297,G__30298));
});
var G__30735__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30299 = a;
var G__30300 = b;
var G__30301 = c;
var G__30302 = d;
var G__30303 = e;
var G__30304 = f;
var G__30305 = g;
var G__30306 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306) : self__.afn.call(null,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306));
});
var G__30735__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30307 = a;
var G__30308 = b;
var G__30309 = c;
var G__30310 = d;
var G__30311 = e;
var G__30312 = f;
var G__30313 = g;
var G__30314 = h;
var G__30315 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__30307,G__30308,G__30309,G__30310,G__30311,G__30312,G__30313,G__30314,G__30315) : self__.afn.call(null,G__30307,G__30308,G__30309,G__30310,G__30311,G__30312,G__30313,G__30314,G__30315));
});
var G__30735__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30316 = a;
var G__30317 = b;
var G__30318 = c;
var G__30319 = d;
var G__30320 = e;
var G__30321 = f;
var G__30322 = g;
var G__30323 = h;
var G__30324 = i;
var G__30325 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__30316,G__30317,G__30318,G__30319,G__30320,G__30321,G__30322,G__30323,G__30324,G__30325) : self__.afn.call(null,G__30316,G__30317,G__30318,G__30319,G__30320,G__30321,G__30322,G__30323,G__30324,G__30325));
});
var G__30735__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30326 = a;
var G__30327 = b;
var G__30328 = c;
var G__30329 = d;
var G__30330 = e;
var G__30331 = f;
var G__30332 = g;
var G__30333 = h;
var G__30334 = i;
var G__30335 = j;
var G__30336 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335,G__30336) : self__.afn.call(null,G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335,G__30336));
});
var G__30735__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30337 = a;
var G__30338 = b;
var G__30339 = c;
var G__30340 = d;
var G__30341 = e;
var G__30342 = f;
var G__30343 = g;
var G__30344 = h;
var G__30345 = i;
var G__30346 = j;
var G__30347 = k;
var G__30348 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__30337,G__30338,G__30339,G__30340,G__30341,G__30342,G__30343,G__30344,G__30345,G__30346,G__30347,G__30348) : self__.afn.call(null,G__30337,G__30338,G__30339,G__30340,G__30341,G__30342,G__30343,G__30344,G__30345,G__30346,G__30347,G__30348));
});
var G__30735__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30349 = a;
var G__30350 = b;
var G__30351 = c;
var G__30352 = d;
var G__30353 = e;
var G__30354 = f;
var G__30355 = g;
var G__30356 = h;
var G__30357 = i;
var G__30358 = j;
var G__30359 = k;
var G__30360 = l;
var G__30361 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__30349,G__30350,G__30351,G__30352,G__30353,G__30354,G__30355,G__30356,G__30357,G__30358,G__30359,G__30360,G__30361) : self__.afn.call(null,G__30349,G__30350,G__30351,G__30352,G__30353,G__30354,G__30355,G__30356,G__30357,G__30358,G__30359,G__30360,G__30361));
});
var G__30735__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30362 = a;
var G__30363 = b;
var G__30364 = c;
var G__30365 = d;
var G__30366 = e;
var G__30367 = f;
var G__30368 = g;
var G__30369 = h;
var G__30370 = i;
var G__30371 = j;
var G__30372 = k;
var G__30373 = l;
var G__30374 = m;
var G__30375 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__30362,G__30363,G__30364,G__30365,G__30366,G__30367,G__30368,G__30369,G__30370,G__30371,G__30372,G__30373,G__30374,G__30375) : self__.afn.call(null,G__30362,G__30363,G__30364,G__30365,G__30366,G__30367,G__30368,G__30369,G__30370,G__30371,G__30372,G__30373,G__30374,G__30375));
});
var G__30735__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30376 = a;
var G__30377 = b;
var G__30378 = c;
var G__30379 = d;
var G__30380 = e;
var G__30381 = f;
var G__30382 = g;
var G__30383 = h;
var G__30384 = i;
var G__30385 = j;
var G__30386 = k;
var G__30387 = l;
var G__30388 = m;
var G__30389 = n;
var G__30390 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__30376,G__30377,G__30378,G__30379,G__30380,G__30381,G__30382,G__30383,G__30384,G__30385,G__30386,G__30387,G__30388,G__30389,G__30390) : self__.afn.call(null,G__30376,G__30377,G__30378,G__30379,G__30380,G__30381,G__30382,G__30383,G__30384,G__30385,G__30386,G__30387,G__30388,G__30389,G__30390));
});
var G__30735__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30391 = a;
var G__30392 = b;
var G__30393 = c;
var G__30394 = d;
var G__30395 = e;
var G__30396 = f;
var G__30397 = g;
var G__30398 = h;
var G__30399 = i;
var G__30400 = j;
var G__30401 = k;
var G__30402 = l;
var G__30403 = m;
var G__30404 = n;
var G__30405 = o;
var G__30406 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__30391,G__30392,G__30393,G__30394,G__30395,G__30396,G__30397,G__30398,G__30399,G__30400,G__30401,G__30402,G__30403,G__30404,G__30405,G__30406) : self__.afn.call(null,G__30391,G__30392,G__30393,G__30394,G__30395,G__30396,G__30397,G__30398,G__30399,G__30400,G__30401,G__30402,G__30403,G__30404,G__30405,G__30406));
});
var G__30735__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30407 = a;
var G__30408 = b;
var G__30409 = c;
var G__30410 = d;
var G__30411 = e;
var G__30412 = f;
var G__30413 = g;
var G__30414 = h;
var G__30415 = i;
var G__30416 = j;
var G__30417 = k;
var G__30418 = l;
var G__30419 = m;
var G__30420 = n;
var G__30421 = o;
var G__30422 = p;
var G__30423 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__30407,G__30408,G__30409,G__30410,G__30411,G__30412,G__30413,G__30414,G__30415,G__30416,G__30417,G__30418,G__30419,G__30420,G__30421,G__30422,G__30423) : self__.afn.call(null,G__30407,G__30408,G__30409,G__30410,G__30411,G__30412,G__30413,G__30414,G__30415,G__30416,G__30417,G__30418,G__30419,G__30420,G__30421,G__30422,G__30423));
});
var G__30735__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30424 = a;
var G__30425 = b;
var G__30426 = c;
var G__30427 = d;
var G__30428 = e;
var G__30429 = f;
var G__30430 = g;
var G__30431 = h;
var G__30432 = i;
var G__30433 = j;
var G__30434 = k;
var G__30435 = l;
var G__30436 = m;
var G__30437 = n;
var G__30438 = o;
var G__30439 = p;
var G__30440 = q;
var G__30441 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__30424,G__30425,G__30426,G__30427,G__30428,G__30429,G__30430,G__30431,G__30432,G__30433,G__30434,G__30435,G__30436,G__30437,G__30438,G__30439,G__30440,G__30441) : self__.afn.call(null,G__30424,G__30425,G__30426,G__30427,G__30428,G__30429,G__30430,G__30431,G__30432,G__30433,G__30434,G__30435,G__30436,G__30437,G__30438,G__30439,G__30440,G__30441));
});
var G__30735__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30442 = a;
var G__30443 = b;
var G__30444 = c;
var G__30445 = d;
var G__30446 = e;
var G__30447 = f;
var G__30448 = g;
var G__30449 = h;
var G__30450 = i;
var G__30451 = j;
var G__30452 = k;
var G__30453 = l;
var G__30454 = m;
var G__30455 = n;
var G__30456 = o;
var G__30457 = p;
var G__30458 = q;
var G__30459 = r;
var G__30460 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__30442,G__30443,G__30444,G__30445,G__30446,G__30447,G__30448,G__30449,G__30450,G__30451,G__30452,G__30453,G__30454,G__30455,G__30456,G__30457,G__30458,G__30459,G__30460) : self__.afn.call(null,G__30442,G__30443,G__30444,G__30445,G__30446,G__30447,G__30448,G__30449,G__30450,G__30451,G__30452,G__30453,G__30454,G__30455,G__30456,G__30457,G__30458,G__30459,G__30460));
});
var G__30735__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30461 = a;
var G__30462 = b;
var G__30463 = c;
var G__30464 = d;
var G__30465 = e;
var G__30466 = f;
var G__30467 = g;
var G__30468 = h;
var G__30469 = i;
var G__30470 = j;
var G__30471 = k;
var G__30472 = l;
var G__30473 = m;
var G__30474 = n;
var G__30475 = o;
var G__30476 = p;
var G__30477 = q;
var G__30478 = r;
var G__30479 = s;
var G__30480 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__30461,G__30462,G__30463,G__30464,G__30465,G__30466,G__30467,G__30468,G__30469,G__30470,G__30471,G__30472,G__30473,G__30474,G__30475,G__30476,G__30477,G__30478,G__30479,G__30480) : self__.afn.call(null,G__30461,G__30462,G__30463,G__30464,G__30465,G__30466,G__30467,G__30468,G__30469,G__30470,G__30471,G__30472,G__30473,G__30474,G__30475,G__30476,G__30477,G__30478,G__30479,G__30480));
});
var G__30735__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30481 = self__.afn;
var G__30482 = a;
var G__30483 = b;
var G__30484 = c;
var G__30485 = d;
var G__30486 = e;
var G__30487 = f;
var G__30488 = g;
var G__30489 = h;
var G__30490 = i;
var G__30491 = j;
var G__30492 = k;
var G__30493 = l;
var G__30494 = m;
var G__30495 = n;
var G__30496 = o;
var G__30497 = p;
var G__30498 = q;
var G__30499 = r;
var G__30500 = s;
var G__30501 = t;
var G__30502 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30481,G__30482,G__30483,G__30484,G__30485,G__30486,G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493,G__30494,G__30495,G__30496,G__30497,G__30498,G__30499,G__30500,G__30501,G__30502) : cljs.core.apply.call(null,G__30481,G__30482,G__30483,G__30484,G__30485,G__30486,G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493,G__30494,G__30495,G__30496,G__30497,G__30498,G__30499,G__30500,G__30501,G__30502));
});
G__30735 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30735__1.call(this,self__);
case 2:
return G__30735__2.call(this,self__,a);
case 3:
return G__30735__3.call(this,self__,a,b);
case 4:
return G__30735__4.call(this,self__,a,b,c);
case 5:
return G__30735__5.call(this,self__,a,b,c,d);
case 6:
return G__30735__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30735__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30735__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30735__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30735__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30735__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30735__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30735__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30735__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30735__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30735__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30735__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30735__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30735__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30735__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30735__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30735__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30735.cljs$core$IFn$_invoke$arity$1 = G__30735__1;
G__30735.cljs$core$IFn$_invoke$arity$2 = G__30735__2;
G__30735.cljs$core$IFn$_invoke$arity$3 = G__30735__3;
G__30735.cljs$core$IFn$_invoke$arity$4 = G__30735__4;
G__30735.cljs$core$IFn$_invoke$arity$5 = G__30735__5;
G__30735.cljs$core$IFn$_invoke$arity$6 = G__30735__6;
G__30735.cljs$core$IFn$_invoke$arity$7 = G__30735__7;
G__30735.cljs$core$IFn$_invoke$arity$8 = G__30735__8;
G__30735.cljs$core$IFn$_invoke$arity$9 = G__30735__9;
G__30735.cljs$core$IFn$_invoke$arity$10 = G__30735__10;
G__30735.cljs$core$IFn$_invoke$arity$11 = G__30735__11;
G__30735.cljs$core$IFn$_invoke$arity$12 = G__30735__12;
G__30735.cljs$core$IFn$_invoke$arity$13 = G__30735__13;
G__30735.cljs$core$IFn$_invoke$arity$14 = G__30735__14;
G__30735.cljs$core$IFn$_invoke$arity$15 = G__30735__15;
G__30735.cljs$core$IFn$_invoke$arity$16 = G__30735__16;
G__30735.cljs$core$IFn$_invoke$arity$17 = G__30735__17;
G__30735.cljs$core$IFn$_invoke$arity$18 = G__30735__18;
G__30735.cljs$core$IFn$_invoke$arity$19 = G__30735__19;
G__30735.cljs$core$IFn$_invoke$arity$20 = G__30735__20;
G__30735.cljs$core$IFn$_invoke$arity$21 = G__30735__21;
G__30735.cljs$core$IFn$_invoke$arity$22 = G__30735__22;
return G__30735;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args30270){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30270)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__30503 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30503) : self__.afn.call(null,G__30503));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__30504 = a;
var G__30505 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30504,G__30505) : self__.afn.call(null,G__30504,G__30505));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__30506 = a;
var G__30507 = b;
var G__30508 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30506,G__30507,G__30508) : self__.afn.call(null,G__30506,G__30507,G__30508));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__30509 = a;
var G__30510 = b;
var G__30511 = c;
var G__30512 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30509,G__30510,G__30511,G__30512) : self__.afn.call(null,G__30509,G__30510,G__30511,G__30512));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__30513 = a;
var G__30514 = b;
var G__30515 = c;
var G__30516 = d;
var G__30517 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30513,G__30514,G__30515,G__30516,G__30517) : self__.afn.call(null,G__30513,G__30514,G__30515,G__30516,G__30517));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__30518 = a;
var G__30519 = b;
var G__30520 = c;
var G__30521 = d;
var G__30522 = e;
var G__30523 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30518,G__30519,G__30520,G__30521,G__30522,G__30523) : self__.afn.call(null,G__30518,G__30519,G__30520,G__30521,G__30522,G__30523));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__30524 = a;
var G__30525 = b;
var G__30526 = c;
var G__30527 = d;
var G__30528 = e;
var G__30529 = f;
var G__30530 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530) : self__.afn.call(null,G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__30531 = a;
var G__30532 = b;
var G__30533 = c;
var G__30534 = d;
var G__30535 = e;
var G__30536 = f;
var G__30537 = g;
var G__30538 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__30531,G__30532,G__30533,G__30534,G__30535,G__30536,G__30537,G__30538) : self__.afn.call(null,G__30531,G__30532,G__30533,G__30534,G__30535,G__30536,G__30537,G__30538));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__30539 = a;
var G__30540 = b;
var G__30541 = c;
var G__30542 = d;
var G__30543 = e;
var G__30544 = f;
var G__30545 = g;
var G__30546 = h;
var G__30547 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__30539,G__30540,G__30541,G__30542,G__30543,G__30544,G__30545,G__30546,G__30547) : self__.afn.call(null,G__30539,G__30540,G__30541,G__30542,G__30543,G__30544,G__30545,G__30546,G__30547));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__30548 = a;
var G__30549 = b;
var G__30550 = c;
var G__30551 = d;
var G__30552 = e;
var G__30553 = f;
var G__30554 = g;
var G__30555 = h;
var G__30556 = i;
var G__30557 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__30548,G__30549,G__30550,G__30551,G__30552,G__30553,G__30554,G__30555,G__30556,G__30557) : self__.afn.call(null,G__30548,G__30549,G__30550,G__30551,G__30552,G__30553,G__30554,G__30555,G__30556,G__30557));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__30558 = a;
var G__30559 = b;
var G__30560 = c;
var G__30561 = d;
var G__30562 = e;
var G__30563 = f;
var G__30564 = g;
var G__30565 = h;
var G__30566 = i;
var G__30567 = j;
var G__30568 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568) : self__.afn.call(null,G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__30569 = a;
var G__30570 = b;
var G__30571 = c;
var G__30572 = d;
var G__30573 = e;
var G__30574 = f;
var G__30575 = g;
var G__30576 = h;
var G__30577 = i;
var G__30578 = j;
var G__30579 = k;
var G__30580 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__30569,G__30570,G__30571,G__30572,G__30573,G__30574,G__30575,G__30576,G__30577,G__30578,G__30579,G__30580) : self__.afn.call(null,G__30569,G__30570,G__30571,G__30572,G__30573,G__30574,G__30575,G__30576,G__30577,G__30578,G__30579,G__30580));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__30581 = a;
var G__30582 = b;
var G__30583 = c;
var G__30584 = d;
var G__30585 = e;
var G__30586 = f;
var G__30587 = g;
var G__30588 = h;
var G__30589 = i;
var G__30590 = j;
var G__30591 = k;
var G__30592 = l;
var G__30593 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__30581,G__30582,G__30583,G__30584,G__30585,G__30586,G__30587,G__30588,G__30589,G__30590,G__30591,G__30592,G__30593) : self__.afn.call(null,G__30581,G__30582,G__30583,G__30584,G__30585,G__30586,G__30587,G__30588,G__30589,G__30590,G__30591,G__30592,G__30593));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__30594 = a;
var G__30595 = b;
var G__30596 = c;
var G__30597 = d;
var G__30598 = e;
var G__30599 = f;
var G__30600 = g;
var G__30601 = h;
var G__30602 = i;
var G__30603 = j;
var G__30604 = k;
var G__30605 = l;
var G__30606 = m;
var G__30607 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__30594,G__30595,G__30596,G__30597,G__30598,G__30599,G__30600,G__30601,G__30602,G__30603,G__30604,G__30605,G__30606,G__30607) : self__.afn.call(null,G__30594,G__30595,G__30596,G__30597,G__30598,G__30599,G__30600,G__30601,G__30602,G__30603,G__30604,G__30605,G__30606,G__30607));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__30608 = a;
var G__30609 = b;
var G__30610 = c;
var G__30611 = d;
var G__30612 = e;
var G__30613 = f;
var G__30614 = g;
var G__30615 = h;
var G__30616 = i;
var G__30617 = j;
var G__30618 = k;
var G__30619 = l;
var G__30620 = m;
var G__30621 = n;
var G__30622 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__30608,G__30609,G__30610,G__30611,G__30612,G__30613,G__30614,G__30615,G__30616,G__30617,G__30618,G__30619,G__30620,G__30621,G__30622) : self__.afn.call(null,G__30608,G__30609,G__30610,G__30611,G__30612,G__30613,G__30614,G__30615,G__30616,G__30617,G__30618,G__30619,G__30620,G__30621,G__30622));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__30623 = a;
var G__30624 = b;
var G__30625 = c;
var G__30626 = d;
var G__30627 = e;
var G__30628 = f;
var G__30629 = g;
var G__30630 = h;
var G__30631 = i;
var G__30632 = j;
var G__30633 = k;
var G__30634 = l;
var G__30635 = m;
var G__30636 = n;
var G__30637 = o;
var G__30638 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__30623,G__30624,G__30625,G__30626,G__30627,G__30628,G__30629,G__30630,G__30631,G__30632,G__30633,G__30634,G__30635,G__30636,G__30637,G__30638) : self__.afn.call(null,G__30623,G__30624,G__30625,G__30626,G__30627,G__30628,G__30629,G__30630,G__30631,G__30632,G__30633,G__30634,G__30635,G__30636,G__30637,G__30638));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__30639 = a;
var G__30640 = b;
var G__30641 = c;
var G__30642 = d;
var G__30643 = e;
var G__30644 = f;
var G__30645 = g;
var G__30646 = h;
var G__30647 = i;
var G__30648 = j;
var G__30649 = k;
var G__30650 = l;
var G__30651 = m;
var G__30652 = n;
var G__30653 = o;
var G__30654 = p;
var G__30655 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__30639,G__30640,G__30641,G__30642,G__30643,G__30644,G__30645,G__30646,G__30647,G__30648,G__30649,G__30650,G__30651,G__30652,G__30653,G__30654,G__30655) : self__.afn.call(null,G__30639,G__30640,G__30641,G__30642,G__30643,G__30644,G__30645,G__30646,G__30647,G__30648,G__30649,G__30650,G__30651,G__30652,G__30653,G__30654,G__30655));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__30656 = a;
var G__30657 = b;
var G__30658 = c;
var G__30659 = d;
var G__30660 = e;
var G__30661 = f;
var G__30662 = g;
var G__30663 = h;
var G__30664 = i;
var G__30665 = j;
var G__30666 = k;
var G__30667 = l;
var G__30668 = m;
var G__30669 = n;
var G__30670 = o;
var G__30671 = p;
var G__30672 = q;
var G__30673 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__30656,G__30657,G__30658,G__30659,G__30660,G__30661,G__30662,G__30663,G__30664,G__30665,G__30666,G__30667,G__30668,G__30669,G__30670,G__30671,G__30672,G__30673) : self__.afn.call(null,G__30656,G__30657,G__30658,G__30659,G__30660,G__30661,G__30662,G__30663,G__30664,G__30665,G__30666,G__30667,G__30668,G__30669,G__30670,G__30671,G__30672,G__30673));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__30674 = a;
var G__30675 = b;
var G__30676 = c;
var G__30677 = d;
var G__30678 = e;
var G__30679 = f;
var G__30680 = g;
var G__30681 = h;
var G__30682 = i;
var G__30683 = j;
var G__30684 = k;
var G__30685 = l;
var G__30686 = m;
var G__30687 = n;
var G__30688 = o;
var G__30689 = p;
var G__30690 = q;
var G__30691 = r;
var G__30692 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__30674,G__30675,G__30676,G__30677,G__30678,G__30679,G__30680,G__30681,G__30682,G__30683,G__30684,G__30685,G__30686,G__30687,G__30688,G__30689,G__30690,G__30691,G__30692) : self__.afn.call(null,G__30674,G__30675,G__30676,G__30677,G__30678,G__30679,G__30680,G__30681,G__30682,G__30683,G__30684,G__30685,G__30686,G__30687,G__30688,G__30689,G__30690,G__30691,G__30692));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__30693 = a;
var G__30694 = b;
var G__30695 = c;
var G__30696 = d;
var G__30697 = e;
var G__30698 = f;
var G__30699 = g;
var G__30700 = h;
var G__30701 = i;
var G__30702 = j;
var G__30703 = k;
var G__30704 = l;
var G__30705 = m;
var G__30706 = n;
var G__30707 = o;
var G__30708 = p;
var G__30709 = q;
var G__30710 = r;
var G__30711 = s;
var G__30712 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__30693,G__30694,G__30695,G__30696,G__30697,G__30698,G__30699,G__30700,G__30701,G__30702,G__30703,G__30704,G__30705,G__30706,G__30707,G__30708,G__30709,G__30710,G__30711,G__30712) : self__.afn.call(null,G__30693,G__30694,G__30695,G__30696,G__30697,G__30698,G__30699,G__30700,G__30701,G__30702,G__30703,G__30704,G__30705,G__30706,G__30707,G__30708,G__30709,G__30710,G__30711,G__30712));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30713 = self__.afn;
var G__30714 = a;
var G__30715 = b;
var G__30716 = c;
var G__30717 = d;
var G__30718 = e;
var G__30719 = f;
var G__30720 = g;
var G__30721 = h;
var G__30722 = i;
var G__30723 = j;
var G__30724 = k;
var G__30725 = l;
var G__30726 = m;
var G__30727 = n;
var G__30728 = o;
var G__30729 = p;
var G__30730 = q;
var G__30731 = r;
var G__30732 = s;
var G__30733 = t;
var G__30734 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30713,G__30714,G__30715,G__30716,G__30717,G__30718,G__30719,G__30720,G__30721,G__30722,G__30723,G__30724,G__30725,G__30726,G__30727,G__30728,G__30729,G__30730,G__30731,G__30732,G__30733,G__30734) : cljs.core.apply.call(null,G__30713,G__30714,G__30715,G__30716,G__30717,G__30718,G__30719,G__30720,G__30721,G__30722,G__30723,G__30724,G__30725,G__30726,G__30727,G__30728,G__30729,G__30730,G__30731,G__30732,G__30733,G__30734));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__30739 = o;
if(G__30739){
var bit__4492__auto__ = (G__30739.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4492__auto__) || (G__30739.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__30739.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30739);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30739);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3799__auto__ = !((o == null));
if(and__3799__auto__){
var G__30743 = o;
if(G__30743){
var bit__4492__auto__ = (G__30743.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__30743.cljs$core$IMeta$)){
return true;
} else {
if((!G__30743.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30743);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30743);
}
} else {
return and__3799__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__30746__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30747 = ret;
var G__30748 = cljs.core.first(ks);
var G__30749 = cljs.core.next(ks);
coll = G__30747;
k = G__30748;
ks = G__30749;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30746 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30750__i = 0, G__30750__a = new Array(arguments.length -  2);
while (G__30750__i < G__30750__a.length) {G__30750__a[G__30750__i] = arguments[G__30750__i + 2]; ++G__30750__i;}
  ks = new cljs.core.IndexedSeq(G__30750__a,0);
} 
return G__30746__delegate.call(this,coll,k,ks);};
G__30746.cljs$lang$maxFixedArity = 2;
G__30746.cljs$lang$applyTo = (function (arglist__30751){
var coll = cljs.core.first(arglist__30751);
arglist__30751 = cljs.core.next(arglist__30751);
var k = cljs.core.first(arglist__30751);
var ks = cljs.core.rest(arglist__30751);
return G__30746__delegate(coll,k,ks);
});
G__30746.cljs$core$IFn$_invoke$arity$variadic = G__30746__delegate;
return G__30746;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__30752 = null;
if (arguments.length > 2) {
var G__30753__i = 0, G__30753__a = new Array(arguments.length -  2);
while (G__30753__i < G__30753__a.length) {G__30753__a[G__30753__i] = arguments[G__30753__i + 2]; ++G__30753__i;}
G__30752 = new cljs.core.IndexedSeq(G__30753__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30755 = x;
if(G__30755){
var bit__4492__auto__ = (G__30755.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4492__auto__) || (G__30755.cljs$core$ICollection$)){
return true;
} else {
if((!G__30755.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30755);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30755);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30757 = x;
if(G__30757){
var bit__4492__auto__ = (G__30757.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4492__auto__) || (G__30757.cljs$core$ISet$)){
return true;
} else {
if((!G__30757.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30757);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30757);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__30759 = x;
if(G__30759){
var bit__4492__auto__ = (G__30759.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4492__auto__) || (G__30759.cljs$core$IAssociative$)){
return true;
} else {
if((!G__30759.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30759);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30759);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__30761 = x;
if(G__30761){
var bit__4492__auto__ = (G__30761.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4492__auto__) || (G__30761.cljs$core$ISequential$)){
return true;
} else {
if((!G__30761.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30761);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30761);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__30763 = x;
if(G__30763){
var bit__4492__auto__ = (G__30763.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4492__auto__) || (G__30763.cljs$core$ISorted$)){
return true;
} else {
if((!G__30763.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30763);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30763);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__30765 = x;
if(G__30765){
var bit__4492__auto__ = (G__30765.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4492__auto__) || (G__30765.cljs$core$IReduce$)){
return true;
} else {
if((!G__30765.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30765);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30765);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30767 = x;
if(G__30767){
var bit__4492__auto__ = (G__30767.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4492__auto__) || (G__30767.cljs$core$IMap$)){
return true;
} else {
if((!G__30767.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30767);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30767);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__30769 = x;
if(G__30769){
var bit__4492__auto__ = (G__30769.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4492__auto__) || (G__30769.cljs$core$IVector$)){
return true;
} else {
if((!G__30769.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30769);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30769);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__30771 = x;
if(G__30771){
var bit__4485__auto__ = (G__30771.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4485__auto__) || (G__30771.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj30777 = {};
return obj30777;
});
var js_obj__1 = (function() { 
var G__30780__delegate = function (keyvals){
var G__30778 = goog.object.create;
var G__30779 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__30778,G__30779) : cljs.core.apply.call(null,G__30778,G__30779));
};
var G__30780 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30781__i = 0, G__30781__a = new Array(arguments.length -  0);
while (G__30781__i < G__30781__a.length) {G__30781__a[G__30781__i] = arguments[G__30781__i + 0]; ++G__30781__i;}
  keyvals = new cljs.core.IndexedSeq(G__30781__a,0);
} 
return G__30780__delegate.call(this,keyvals);};
G__30780.cljs$lang$maxFixedArity = 0;
G__30780.cljs$lang$applyTo = (function (arglist__30782){
var keyvals = cljs.core.seq(arglist__30782);
return G__30780__delegate(keyvals);
});
G__30780.cljs$core$IFn$_invoke$arity$variadic = G__30780__delegate;
return G__30780;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__30783 = null;
if (arguments.length > 0) {
var G__30784__i = 0, G__30784__a = new Array(arguments.length -  0);
while (G__30784__i < G__30784__a.length) {G__30784__a[G__30784__i] = arguments[G__30784__i + 0]; ++G__30784__i;}
G__30783 = new cljs.core.IndexedSeq(G__30784__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__30783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__30787_30789 = obj;
var G__30788_30790 = ((function (G__30787_30789,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__30787_30789,keys))
;
goog.object.forEach(G__30787_30789,G__30788_30790);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30791 = (i__$1 + (1));
var G__30792 = (j__$1 + (1));
var G__30793 = (len__$1 - (1));
i__$1 = G__30791;
j__$1 = G__30792;
len__$1 = G__30793;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30794 = (i__$1 - (1));
var G__30795 = (j__$1 - (1));
var G__30796 = (len__$1 - (1));
i__$1 = G__30794;
j__$1 = G__30795;
len__$1 = G__30796;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj30798 = {};
return obj30798;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__30800 = s;
if(G__30800){
var bit__4492__auto__ = (G__30800.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__30800.cljs$core$ISeq$)){
return true;
} else {
if((!G__30800.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30800);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30800);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__30802 = s;
if(G__30802){
var bit__4492__auto__ = (G__30802.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4492__auto__) || (G__30802.cljs$core$ISeqable$)){
return true;
} else {
if((!G__30802.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30802);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30802);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3811__auto__ = cljs.core.fn_QMARK_(f);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__30806 = f;
if(G__30806){
var bit__4492__auto__ = (G__30806.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4492__auto__) || (G__30806.cljs$core$IFn$)){
return true;
} else {
if((!G__30806.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__30806);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__30806);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__30819 = n;
return isNaN(G__30819);
})())) && (!((n === Infinity))) && (((function (){var G__30820 = n;
return parseFloat(G__30820);
})() === (function (){var G__30821 = n;
var G__30822 = (10);
return parseInt(G__30821,G__30822);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__30823__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__30824 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__30825 = etc;
s = G__30824;
xs = G__30825;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__30823 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30826__i = 0, G__30826__a = new Array(arguments.length -  2);
while (G__30826__i < G__30826__a.length) {G__30826__a[G__30826__i] = arguments[G__30826__i + 2]; ++G__30826__i;}
  more = new cljs.core.IndexedSeq(G__30826__a,0);
} 
return G__30823__delegate.call(this,x,y,more);};
G__30823.cljs$lang$maxFixedArity = 2;
G__30823.cljs$lang$applyTo = (function (arglist__30827){
var x = cljs.core.first(arglist__30827);
arglist__30827 = cljs.core.next(arglist__30827);
var y = cljs.core.first(arglist__30827);
var more = cljs.core.rest(arglist__30827);
return G__30823__delegate(x,y,more);
});
G__30823.cljs$core$IFn$_invoke$arity$variadic = G__30823__delegate;
return G__30823;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__30828 = null;
if (arguments.length > 2) {
var G__30829__i = 0, G__30829__a = new Array(arguments.length -  2);
while (G__30829__i < G__30829__a.length) {G__30829__a[G__30829__i] = arguments[G__30829__i + 2]; ++G__30829__i;}
G__30828 = new cljs.core.IndexedSeq(G__30829__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30828);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__30833 = x;
if(G__30833){
var bit__4485__auto__ = (G__30833.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4485__auto__) || (G__30833.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__30834 = x;
var G__30835 = y;
return goog.array.defaultCompare(G__30834,G__30835);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__30840 = xs;
var G__30841 = ys;
var G__30842 = len;
var G__30843 = (n + (1));
xs = G__30840;
ys = G__30841;
len = G__30842;
n = G__30843;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__30848 = x;
var G__30849 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30848,G__30849) : f.call(null,G__30848,G__30849));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__30850 = y;
var G__30851 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30850,G__30851) : f.call(null,G__30850,G__30851));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__30857 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__30857) : cljs.core.to_array.call(null,G__30857));
})();
var G__30858_30860 = a;
var G__30859_30861 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__30858_30860,G__30859_30861);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__30867 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30867) : keyfn.call(null,G__30867));
})(),(function (){var G__30868 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30868) : keyfn.call(null,G__30868));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__30874 = f;
var G__30875 = cljs.core.first(s);
var G__30876 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30874,G__30875,G__30876) : cljs.core.reduce.call(null,G__30874,G__30875,G__30876));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__30877 = val__$1;
var G__30878 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30877,G__30878) : f.call(null,G__30877,G__30878));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30879 = nval;
var G__30880 = cljs.core.next(coll__$1);
val__$1 = G__30879;
coll__$1 = G__30880;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__30884 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__30884) : cljs.core.to_array.call(null,G__30884));
})();
var G__30885_30887 = a;
goog.array.shuffle(G__30885_30887);

var G__30886 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__30886) : cljs.core.vec.call(null,G__30886));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__30890 = coll;
if(G__30890){
var bit__4485__auto__ = (G__30890.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__30890.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__30891 = coll;
if(G__30891){
var bit__4485__auto__ = (G__30891.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__30891.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__30900 = null;
var G__30900__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__30900__1 = (function (x){
var G__30897 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__30897) : cf.call(null,G__30897));
});
var G__30900__2 = (function (x,y){
var G__30898 = x;
var G__30899 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30898,G__30899) : f.call(null,G__30898,G__30899));
});
G__30900 = function(x,y){
switch(arguments.length){
case 0:
return G__30900__0.call(this);
case 1:
return G__30900__1.call(this,x);
case 2:
return G__30900__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30900.cljs$core$IFn$_invoke$arity$0 = G__30900__0;
G__30900.cljs$core$IFn$_invoke$arity$1 = G__30900__1;
G__30900.cljs$core$IFn$_invoke$arity$2 = G__30900__2;
return G__30900;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__30907 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__30907) : xform.call(null,G__30907));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__30908 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__30908) : f__$1.call(null,G__30908));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__30909__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__30909 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30910__i = 0, G__30910__a = new Array(arguments.length -  2);
while (G__30910__i < G__30910__a.length) {G__30910__a[G__30910__i] = arguments[G__30910__i + 2]; ++G__30910__i;}
  more = new cljs.core.IndexedSeq(G__30910__a,0);
} 
return G__30909__delegate.call(this,x,y,more);};
G__30909.cljs$lang$maxFixedArity = 2;
G__30909.cljs$lang$applyTo = (function (arglist__30911){
var x = cljs.core.first(arglist__30911);
arglist__30911 = cljs.core.next(arglist__30911);
var y = cljs.core.first(arglist__30911);
var more = cljs.core.rest(arglist__30911);
return G__30909__delegate(x,y,more);
});
G__30909.cljs$core$IFn$_invoke$arity$variadic = G__30909__delegate;
return G__30909;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__30912 = null;
if (arguments.length > 2) {
var G__30913__i = 0, G__30913__a = new Array(arguments.length -  2);
while (G__30913__i < G__30913__a.length) {G__30913__a[G__30913__i] = arguments[G__30913__i + 2]; ++G__30913__i;}
G__30912 = new cljs.core.IndexedSeq(G__30913__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__30914__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__30914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30915__i = 0, G__30915__a = new Array(arguments.length -  2);
while (G__30915__i < G__30915__a.length) {G__30915__a[G__30915__i] = arguments[G__30915__i + 2]; ++G__30915__i;}
  more = new cljs.core.IndexedSeq(G__30915__a,0);
} 
return G__30914__delegate.call(this,x,y,more);};
G__30914.cljs$lang$maxFixedArity = 2;
G__30914.cljs$lang$applyTo = (function (arglist__30916){
var x = cljs.core.first(arglist__30916);
arglist__30916 = cljs.core.next(arglist__30916);
var y = cljs.core.first(arglist__30916);
var more = cljs.core.rest(arglist__30916);
return G__30914__delegate(x,y,more);
});
G__30914.cljs$core$IFn$_invoke$arity$variadic = G__30914__delegate;
return G__30914;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__30917 = null;
if (arguments.length > 2) {
var G__30918__i = 0, G__30918__a = new Array(arguments.length -  2);
while (G__30918__i < G__30918__a.length) {G__30918__a[G__30918__i] = arguments[G__30918__i + 2]; ++G__30918__i;}
G__30917 = new cljs.core.IndexedSeq(G__30918__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__30919__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__30919 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30920__i = 0, G__30920__a = new Array(arguments.length -  2);
while (G__30920__i < G__30920__a.length) {G__30920__a[G__30920__i] = arguments[G__30920__i + 2]; ++G__30920__i;}
  more = new cljs.core.IndexedSeq(G__30920__a,0);
} 
return G__30919__delegate.call(this,x,y,more);};
G__30919.cljs$lang$maxFixedArity = 2;
G__30919.cljs$lang$applyTo = (function (arglist__30921){
var x = cljs.core.first(arglist__30921);
arglist__30921 = cljs.core.next(arglist__30921);
var y = cljs.core.first(arglist__30921);
var more = cljs.core.rest(arglist__30921);
return G__30919__delegate(x,y,more);
});
G__30919.cljs$core$IFn$_invoke$arity$variadic = G__30919__delegate;
return G__30919;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__30922 = null;
if (arguments.length > 2) {
var G__30923__i = 0, G__30923__a = new Array(arguments.length -  2);
while (G__30923__i < G__30923__a.length) {G__30923__a[G__30923__i] = arguments[G__30923__i + 2]; ++G__30923__i;}
G__30922 = new cljs.core.IndexedSeq(G__30923__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__30928__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__30928 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30929__i = 0, G__30929__a = new Array(arguments.length -  2);
while (G__30929__i < G__30929__a.length) {G__30929__a[G__30929__i] = arguments[G__30929__i + 2]; ++G__30929__i;}
  more = new cljs.core.IndexedSeq(G__30929__a,0);
} 
return G__30928__delegate.call(this,x,y,more);};
G__30928.cljs$lang$maxFixedArity = 2;
G__30928.cljs$lang$applyTo = (function (arglist__30930){
var x = cljs.core.first(arglist__30930);
arglist__30930 = cljs.core.next(arglist__30930);
var y = cljs.core.first(arglist__30930);
var more = cljs.core.rest(arglist__30930);
return G__30928__delegate(x,y,more);
});
G__30928.cljs$core$IFn$_invoke$arity$variadic = G__30928__delegate;
return G__30928;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__30931 = null;
if (arguments.length > 2) {
var G__30932__i = 0, G__30932__a = new Array(arguments.length -  2);
while (G__30932__i < G__30932__a.length) {G__30932__a[G__30932__i] = arguments[G__30932__i + 2]; ++G__30932__i;}
G__30931 = new cljs.core.IndexedSeq(G__30932__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__30933__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__30934 = y;
var G__30935 = cljs.core.first(more);
var G__30936 = cljs.core.next(more);
x = G__30934;
y = G__30935;
more = G__30936;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30933 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30937__i = 0, G__30937__a = new Array(arguments.length -  2);
while (G__30937__i < G__30937__a.length) {G__30937__a[G__30937__i] = arguments[G__30937__i + 2]; ++G__30937__i;}
  more = new cljs.core.IndexedSeq(G__30937__a,0);
} 
return G__30933__delegate.call(this,x,y,more);};
G__30933.cljs$lang$maxFixedArity = 2;
G__30933.cljs$lang$applyTo = (function (arglist__30938){
var x = cljs.core.first(arglist__30938);
arglist__30938 = cljs.core.next(arglist__30938);
var y = cljs.core.first(arglist__30938);
var more = cljs.core.rest(arglist__30938);
return G__30933__delegate(x,y,more);
});
G__30933.cljs$core$IFn$_invoke$arity$variadic = G__30933__delegate;
return G__30933;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__30939 = null;
if (arguments.length > 2) {
var G__30940__i = 0, G__30940__a = new Array(arguments.length -  2);
while (G__30940__i < G__30940__a.length) {G__30940__a[G__30940__i] = arguments[G__30940__i + 2]; ++G__30940__i;}
G__30939 = new cljs.core.IndexedSeq(G__30940__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__30941__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__30942 = y;
var G__30943 = cljs.core.first(more);
var G__30944 = cljs.core.next(more);
x = G__30942;
y = G__30943;
more = G__30944;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30941 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30945__i = 0, G__30945__a = new Array(arguments.length -  2);
while (G__30945__i < G__30945__a.length) {G__30945__a[G__30945__i] = arguments[G__30945__i + 2]; ++G__30945__i;}
  more = new cljs.core.IndexedSeq(G__30945__a,0);
} 
return G__30941__delegate.call(this,x,y,more);};
G__30941.cljs$lang$maxFixedArity = 2;
G__30941.cljs$lang$applyTo = (function (arglist__30946){
var x = cljs.core.first(arglist__30946);
arglist__30946 = cljs.core.next(arglist__30946);
var y = cljs.core.first(arglist__30946);
var more = cljs.core.rest(arglist__30946);
return G__30941__delegate(x,y,more);
});
G__30941.cljs$core$IFn$_invoke$arity$variadic = G__30941__delegate;
return G__30941;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__30947 = null;
if (arguments.length > 2) {
var G__30948__i = 0, G__30948__a = new Array(arguments.length -  2);
while (G__30948__i < G__30948__a.length) {G__30948__a[G__30948__i] = arguments[G__30948__i + 2]; ++G__30948__i;}
G__30947 = new cljs.core.IndexedSeq(G__30948__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__30949__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__30950 = y;
var G__30951 = cljs.core.first(more);
var G__30952 = cljs.core.next(more);
x = G__30950;
y = G__30951;
more = G__30952;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30949 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30953__i = 0, G__30953__a = new Array(arguments.length -  2);
while (G__30953__i < G__30953__a.length) {G__30953__a[G__30953__i] = arguments[G__30953__i + 2]; ++G__30953__i;}
  more = new cljs.core.IndexedSeq(G__30953__a,0);
} 
return G__30949__delegate.call(this,x,y,more);};
G__30949.cljs$lang$maxFixedArity = 2;
G__30949.cljs$lang$applyTo = (function (arglist__30954){
var x = cljs.core.first(arglist__30954);
arglist__30954 = cljs.core.next(arglist__30954);
var y = cljs.core.first(arglist__30954);
var more = cljs.core.rest(arglist__30954);
return G__30949__delegate(x,y,more);
});
G__30949.cljs$core$IFn$_invoke$arity$variadic = G__30949__delegate;
return G__30949;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__30955 = null;
if (arguments.length > 2) {
var G__30956__i = 0, G__30956__a = new Array(arguments.length -  2);
while (G__30956__i < G__30956__a.length) {G__30956__a[G__30956__i] = arguments[G__30956__i + 2]; ++G__30956__i;}
G__30955 = new cljs.core.IndexedSeq(G__30956__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__30957__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__30958 = y;
var G__30959 = cljs.core.first(more);
var G__30960 = cljs.core.next(more);
x = G__30958;
y = G__30959;
more = G__30960;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30957 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30961__i = 0, G__30961__a = new Array(arguments.length -  2);
while (G__30961__i < G__30961__a.length) {G__30961__a[G__30961__i] = arguments[G__30961__i + 2]; ++G__30961__i;}
  more = new cljs.core.IndexedSeq(G__30961__a,0);
} 
return G__30957__delegate.call(this,x,y,more);};
G__30957.cljs$lang$maxFixedArity = 2;
G__30957.cljs$lang$applyTo = (function (arglist__30962){
var x = cljs.core.first(arglist__30962);
arglist__30962 = cljs.core.next(arglist__30962);
var y = cljs.core.first(arglist__30962);
var more = cljs.core.rest(arglist__30962);
return G__30957__delegate(x,y,more);
});
G__30957.cljs$core$IFn$_invoke$arity$variadic = G__30957__delegate;
return G__30957;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__30963 = null;
if (arguments.length > 2) {
var G__30964__i = 0, G__30964__a = new Array(arguments.length -  2);
while (G__30964__i < G__30964__a.length) {G__30964__a[G__30964__i] = arguments[G__30964__i + 2]; ++G__30964__i;}
G__30963 = new cljs.core.IndexedSeq(G__30964__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30963);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
});
var max__3 = (function() { 
var G__30965__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})(),more);
};
var G__30965 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30966__i = 0, G__30966__a = new Array(arguments.length -  2);
while (G__30966__i < G__30966__a.length) {G__30966__a[G__30966__i] = arguments[G__30966__i + 2]; ++G__30966__i;}
  more = new cljs.core.IndexedSeq(G__30966__a,0);
} 
return G__30965__delegate.call(this,x,y,more);};
G__30965.cljs$lang$maxFixedArity = 2;
G__30965.cljs$lang$applyTo = (function (arglist__30967){
var x = cljs.core.first(arglist__30967);
arglist__30967 = cljs.core.next(arglist__30967);
var y = cljs.core.first(arglist__30967);
var more = cljs.core.rest(arglist__30967);
return G__30965__delegate(x,y,more);
});
G__30965.cljs$core$IFn$_invoke$arity$variadic = G__30965__delegate;
return G__30965;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__30968 = null;
if (arguments.length > 2) {
var G__30969__i = 0, G__30969__a = new Array(arguments.length -  2);
while (G__30969__i < G__30969__a.length) {G__30969__a[G__30969__i] = arguments[G__30969__i + 2]; ++G__30969__i;}
G__30968 = new cljs.core.IndexedSeq(G__30969__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
});
var min__3 = (function() { 
var G__30970__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
})(),more);
};
var G__30970 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30971__i = 0, G__30971__a = new Array(arguments.length -  2);
while (G__30971__i < G__30971__a.length) {G__30971__a[G__30971__i] = arguments[G__30971__i + 2]; ++G__30971__i;}
  more = new cljs.core.IndexedSeq(G__30971__a,0);
} 
return G__30970__delegate.call(this,x,y,more);};
G__30970.cljs$lang$maxFixedArity = 2;
G__30970.cljs$lang$applyTo = (function (arglist__30972){
var x = cljs.core.first(arglist__30972);
arglist__30972 = cljs.core.next(arglist__30972);
var y = cljs.core.first(arglist__30972);
var more = cljs.core.rest(arglist__30972);
return G__30970__delegate(x,y,more);
});
G__30970.cljs$core$IFn$_invoke$arity$variadic = G__30970__delegate;
return G__30970;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__30973 = null;
if (arguments.length > 2) {
var G__30974__i = 0, G__30974__a = new Array(arguments.length -  2);
while (G__30974__i < G__30974__a.length) {G__30974__a[G__30974__i] = arguments[G__30974__i + 2]; ++G__30974__i;}
G__30973 = new cljs.core.IndexedSeq(G__30974__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__30975__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__30975 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30976__i = 0, G__30976__a = new Array(arguments.length -  2);
while (G__30976__i < G__30976__a.length) {G__30976__a[G__30976__i] = arguments[G__30976__i + 2]; ++G__30976__i;}
  more = new cljs.core.IndexedSeq(G__30976__a,0);
} 
return G__30975__delegate.call(this,x,y,more);};
G__30975.cljs$lang$maxFixedArity = 2;
G__30975.cljs$lang$applyTo = (function (arglist__30977){
var x = cljs.core.first(arglist__30977);
arglist__30977 = cljs.core.next(arglist__30977);
var y = cljs.core.first(arglist__30977);
var more = cljs.core.rest(arglist__30977);
return G__30975__delegate(x,y,more);
});
G__30975.cljs$core$IFn$_invoke$arity$variadic = G__30975__delegate;
return G__30975;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__30978 = null;
if (arguments.length > 2) {
var G__30979__i = 0, G__30979__a = new Array(arguments.length -  2);
while (G__30979__i < G__30979__a.length) {G__30979__a[G__30979__i] = arguments[G__30979__i + 2]; ++G__30979__i;}
G__30978 = new cljs.core.IndexedSeq(G__30979__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__30980__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__30980 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30981__i = 0, G__30981__a = new Array(arguments.length -  2);
while (G__30981__i < G__30981__a.length) {G__30981__a[G__30981__i] = arguments[G__30981__i + 2]; ++G__30981__i;}
  more = new cljs.core.IndexedSeq(G__30981__a,0);
} 
return G__30980__delegate.call(this,x,y,more);};
G__30980.cljs$lang$maxFixedArity = 2;
G__30980.cljs$lang$applyTo = (function (arglist__30982){
var x = cljs.core.first(arglist__30982);
arglist__30982 = cljs.core.next(arglist__30982);
var y = cljs.core.first(arglist__30982);
var more = cljs.core.rest(arglist__30982);
return G__30980__delegate(x,y,more);
});
G__30980.cljs$core$IFn$_invoke$arity$variadic = G__30980__delegate;
return G__30980;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__30983 = null;
if (arguments.length > 2) {
var G__30984__i = 0, G__30984__a = new Array(arguments.length -  2);
while (G__30984__i < G__30984__a.length) {G__30984__a[G__30984__i] = arguments[G__30984__i + 2]; ++G__30984__i;}
G__30983 = new cljs.core.IndexedSeq(G__30984__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__30989__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__30989 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30990__i = 0, G__30990__a = new Array(arguments.length -  2);
while (G__30990__i < G__30990__a.length) {G__30990__a[G__30990__i] = arguments[G__30990__i + 2]; ++G__30990__i;}
  more = new cljs.core.IndexedSeq(G__30990__a,0);
} 
return G__30989__delegate.call(this,x,y,more);};
G__30989.cljs$lang$maxFixedArity = 2;
G__30989.cljs$lang$applyTo = (function (arglist__30991){
var x = cljs.core.first(arglist__30991);
arglist__30991 = cljs.core.next(arglist__30991);
var y = cljs.core.first(arglist__30991);
var more = cljs.core.rest(arglist__30991);
return G__30989__delegate(x,y,more);
});
G__30989.cljs$core$IFn$_invoke$arity$variadic = G__30989__delegate;
return G__30989;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__30992 = null;
if (arguments.length > 2) {
var G__30993__i = 0, G__30993__a = new Array(arguments.length -  2);
while (G__30993__i < G__30993__a.length) {G__30993__a[G__30993__i] = arguments[G__30993__i + 2]; ++G__30993__i;}
G__30992 = new cljs.core.IndexedSeq(G__30993__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__30994__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__30994 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30995__i = 0, G__30995__a = new Array(arguments.length -  2);
while (G__30995__i < G__30995__a.length) {G__30995__a[G__30995__i] = arguments[G__30995__i + 2]; ++G__30995__i;}
  more = new cljs.core.IndexedSeq(G__30995__a,0);
} 
return G__30994__delegate.call(this,x,y,more);};
G__30994.cljs$lang$maxFixedArity = 2;
G__30994.cljs$lang$applyTo = (function (arglist__30996){
var x = cljs.core.first(arglist__30996);
arglist__30996 = cljs.core.next(arglist__30996);
var y = cljs.core.first(arglist__30996);
var more = cljs.core.rest(arglist__30996);
return G__30994__delegate(x,y,more);
});
G__30994.cljs$core$IFn$_invoke$arity$variadic = G__30994__delegate;
return G__30994;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__30997 = null;
if (arguments.length > 2) {
var G__30998__i = 0, G__30998__a = new Array(arguments.length -  2);
while (G__30998__i < G__30998__a.length) {G__30998__a[G__30998__i] = arguments[G__30998__i + 2]; ++G__30998__i;}
G__30997 = new cljs.core.IndexedSeq(G__30998__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__30999__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__30999 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31000__i = 0, G__31000__a = new Array(arguments.length -  2);
while (G__31000__i < G__31000__a.length) {G__31000__a[G__31000__i] = arguments[G__31000__i + 2]; ++G__31000__i;}
  more = new cljs.core.IndexedSeq(G__31000__a,0);
} 
return G__30999__delegate.call(this,x,y,more);};
G__30999.cljs$lang$maxFixedArity = 2;
G__30999.cljs$lang$applyTo = (function (arglist__31001){
var x = cljs.core.first(arglist__31001);
arglist__31001 = cljs.core.next(arglist__31001);
var y = cljs.core.first(arglist__31001);
var more = cljs.core.rest(arglist__31001);
return G__30999__delegate(x,y,more);
});
G__30999.cljs$core$IFn$_invoke$arity$variadic = G__30999__delegate;
return G__30999;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__31002 = null;
if (arguments.length > 2) {
var G__31003__i = 0, G__31003__a = new Array(arguments.length -  2);
while (G__31003__i < G__31003__a.length) {G__31003__a[G__31003__i] = arguments[G__31003__i + 2]; ++G__31003__i;}
G__31002 = new cljs.core.IndexedSeq(G__31003__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__31006 = x;
var G__31007 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__31006,G__31007) : cljs.core.mod.call(null,G__31006,G__31007));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__31008__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__31008 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31009__i = 0, G__31009__a = new Array(arguments.length -  2);
while (G__31009__i < G__31009__a.length) {G__31009__a[G__31009__i] = arguments[G__31009__i + 2]; ++G__31009__i;}
  more = new cljs.core.IndexedSeq(G__31009__a,0);
} 
return G__31008__delegate.call(this,x,y,more);};
G__31008.cljs$lang$maxFixedArity = 2;
G__31008.cljs$lang$applyTo = (function (arglist__31010){
var x = cljs.core.first(arglist__31010);
arglist__31010 = cljs.core.next(arglist__31010);
var y = cljs.core.first(arglist__31010);
var more = cljs.core.rest(arglist__31010);
return G__31008__delegate(x,y,more);
});
G__31008.cljs$core$IFn$_invoke$arity$variadic = G__31008__delegate;
return G__31008;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__31011 = null;
if (arguments.length > 2) {
var G__31012__i = 0, G__31012__a = new Array(arguments.length -  2);
while (G__31012__i < G__31012__a.length) {G__31012__a[G__31012__i] = arguments[G__31012__i + 2]; ++G__31012__i;}
G__31011 = new cljs.core.IndexedSeq(G__31012__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__31013__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__31013 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31014__i = 0, G__31014__a = new Array(arguments.length -  2);
while (G__31014__i < G__31014__a.length) {G__31014__a[G__31014__i] = arguments[G__31014__i + 2]; ++G__31014__i;}
  more = new cljs.core.IndexedSeq(G__31014__a,0);
} 
return G__31013__delegate.call(this,x,y,more);};
G__31013.cljs$lang$maxFixedArity = 2;
G__31013.cljs$lang$applyTo = (function (arglist__31015){
var x = cljs.core.first(arglist__31015);
arglist__31015 = cljs.core.next(arglist__31015);
var y = cljs.core.first(arglist__31015);
var more = cljs.core.rest(arglist__31015);
return G__31013__delegate(x,y,more);
});
G__31013.cljs$core$IFn$_invoke$arity$variadic = G__31013__delegate;
return G__31013;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__31016 = null;
if (arguments.length > 2) {
var G__31017__i = 0, G__31017__a = new Array(arguments.length -  2);
while (G__31017__i < G__31017__a.length) {G__31017__a[G__31017__i] = arguments[G__31017__i + 2]; ++G__31017__i;}
G__31016 = new cljs.core.IndexedSeq(G__31017__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__31020 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31020) : Math.floor.call(null,G__31020));
} else {
var G__31021 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31021) : Math.ceil.call(null,G__31021));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__31022__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__31022 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31023__i = 0, G__31023__a = new Array(arguments.length -  2);
while (G__31023__i < G__31023__a.length) {G__31023__a[G__31023__i] = arguments[G__31023__i + 2]; ++G__31023__i;}
  more = new cljs.core.IndexedSeq(G__31023__a,0);
} 
return G__31022__delegate.call(this,x,y,more);};
G__31022.cljs$lang$maxFixedArity = 2;
G__31022.cljs$lang$applyTo = (function (arglist__31024){
var x = cljs.core.first(arglist__31024);
arglist__31024 = cljs.core.next(arglist__31024);
var y = cljs.core.first(arglist__31024);
var more = cljs.core.rest(arglist__31024);
return G__31022__delegate(x,y,more);
});
G__31022.cljs$core$IFn$_invoke$arity$variadic = G__31022__delegate;
return G__31022;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__31025 = null;
if (arguments.length > 2) {
var G__31026__i = 0, G__31026__a = new Array(arguments.length -  2);
while (G__31026__i < G__31026__a.length) {G__31026__a[G__31026__i] = arguments[G__31026__i + 2]; ++G__31026__i;}
G__31025 = new cljs.core.IndexedSeq(G__31026__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31025);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__31027__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__31027 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31028__i = 0, G__31028__a = new Array(arguments.length -  2);
while (G__31028__i < G__31028__a.length) {G__31028__a[G__31028__i] = arguments[G__31028__i + 2]; ++G__31028__i;}
  more = new cljs.core.IndexedSeq(G__31028__a,0);
} 
return G__31027__delegate.call(this,x,y,more);};
G__31027.cljs$lang$maxFixedArity = 2;
G__31027.cljs$lang$applyTo = (function (arglist__31029){
var x = cljs.core.first(arglist__31029);
arglist__31029 = cljs.core.next(arglist__31029);
var y = cljs.core.first(arglist__31029);
var more = cljs.core.rest(arglist__31029);
return G__31027__delegate(x,y,more);
});
G__31027.cljs$core$IFn$_invoke$arity$variadic = G__31027__delegate;
return G__31027;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__31030 = null;
if (arguments.length > 2) {
var G__31031__i = 0, G__31031__a = new Array(arguments.length -  2);
while (G__31031__i < G__31031__a.length) {G__31031__a[G__31031__i] = arguments[G__31031__i + 2]; ++G__31031__i;}
G__31030 = new cljs.core.IndexedSeq(G__31031__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31030);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__31032__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__31032 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31033__i = 0, G__31033__a = new Array(arguments.length -  2);
while (G__31033__i < G__31033__a.length) {G__31033__a[G__31033__i] = arguments[G__31033__i + 2]; ++G__31033__i;}
  more = new cljs.core.IndexedSeq(G__31033__a,0);
} 
return G__31032__delegate.call(this,x,y,more);};
G__31032.cljs$lang$maxFixedArity = 2;
G__31032.cljs$lang$applyTo = (function (arglist__31034){
var x = cljs.core.first(arglist__31034);
arglist__31034 = cljs.core.next(arglist__31034);
var y = cljs.core.first(arglist__31034);
var more = cljs.core.rest(arglist__31034);
return G__31032__delegate(x,y,more);
});
G__31032.cljs$core$IFn$_invoke$arity$variadic = G__31032__delegate;
return G__31032;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__31035 = null;
if (arguments.length > 2) {
var G__31036__i = 0, G__31036__a = new Array(arguments.length -  2);
while (G__31036__i < G__31036__a.length) {G__31036__a[G__31036__i] = arguments[G__31036__i + 2]; ++G__31036__i;}
G__31035 = new cljs.core.IndexedSeq(G__31036__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__31037__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__31037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31038__i = 0, G__31038__a = new Array(arguments.length -  2);
while (G__31038__i < G__31038__a.length) {G__31038__a[G__31038__i] = arguments[G__31038__i + 2]; ++G__31038__i;}
  more = new cljs.core.IndexedSeq(G__31038__a,0);
} 
return G__31037__delegate.call(this,x,y,more);};
G__31037.cljs$lang$maxFixedArity = 2;
G__31037.cljs$lang$applyTo = (function (arglist__31039){
var x = cljs.core.first(arglist__31039);
arglist__31039 = cljs.core.next(arglist__31039);
var y = cljs.core.first(arglist__31039);
var more = cljs.core.rest(arglist__31039);
return G__31037__delegate(x,y,more);
});
G__31037.cljs$core$IFn$_invoke$arity$variadic = G__31037__delegate;
return G__31037;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__31040 = null;
if (arguments.length > 2) {
var G__31041__i = 0, G__31041__a = new Array(arguments.length -  2);
while (G__31041__i < G__31041__a.length) {G__31041__a[G__31041__i] = arguments[G__31041__i + 2]; ++G__31041__i;}
G__31040 = new cljs.core.IndexedSeq(G__31041__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__31046__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31047 = y;
var G__31048 = cljs.core.first(more);
var G__31049 = cljs.core.next(more);
x = G__31047;
y = G__31048;
more = G__31049;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31046 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31050__i = 0, G__31050__a = new Array(arguments.length -  2);
while (G__31050__i < G__31050__a.length) {G__31050__a[G__31050__i] = arguments[G__31050__i + 2]; ++G__31050__i;}
  more = new cljs.core.IndexedSeq(G__31050__a,0);
} 
return G__31046__delegate.call(this,x,y,more);};
G__31046.cljs$lang$maxFixedArity = 2;
G__31046.cljs$lang$applyTo = (function (arglist__31051){
var x = cljs.core.first(arglist__31051);
arglist__31051 = cljs.core.next(arglist__31051);
var y = cljs.core.first(arglist__31051);
var more = cljs.core.rest(arglist__31051);
return G__31046__delegate(x,y,more);
});
G__31046.cljs$core$IFn$_invoke$arity$variadic = G__31046__delegate;
return G__31046;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__31052 = null;
if (arguments.length > 2) {
var G__31053__i = 0, G__31053__a = new Array(arguments.length -  2);
while (G__31053__i < G__31053__a.length) {G__31053__a[G__31053__i] = arguments[G__31053__i + 2]; ++G__31053__i;}
G__31052 = new cljs.core.IndexedSeq(G__31053__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__31054 = (n__$1 - (1));
var G__31055 = cljs.core.next(xs);
n__$1 = G__31054;
xs = G__31055;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__31059 = x;
return goog.string.buildString(G__31059);
}
});
var str__2 = (function() { 
var G__31060__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__31061 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__31062 = cljs.core.next(more);
sb = G__31061;
more = G__31062;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__31060 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__31063__i = 0, G__31063__a = new Array(arguments.length -  1);
while (G__31063__i < G__31063__a.length) {G__31063__a[G__31063__i] = arguments[G__31063__i + 1]; ++G__31063__i;}
  ys = new cljs.core.IndexedSeq(G__31063__a,0);
} 
return G__31060__delegate.call(this,x,ys);};
G__31060.cljs$lang$maxFixedArity = 1;
G__31060.cljs$lang$applyTo = (function (arglist__31064){
var x = cljs.core.first(arglist__31064);
var ys = cljs.core.rest(arglist__31064);
return G__31060__delegate(x,ys);
});
G__31060.cljs$core$IFn$_invoke$arity$variadic = G__31060__delegate;
return G__31060;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__31065 = null;
if (arguments.length > 1) {
var G__31066__i = 0, G__31066__a = new Array(arguments.length -  1);
while (G__31066__i < G__31066__a.length) {G__31066__a[G__31066__i] = arguments[G__31066__i + 1]; ++G__31066__i;}
G__31065 = new cljs.core.IndexedSeq(G__31066__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__31065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__31067 = cljs.core.next(xs);
var G__31068 = cljs.core.next(ys);
xs = G__31067;
ys = G__31068;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__31069 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__31070 = cljs.core.next(s);
res = G__31069;
s = G__31070;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__31075 = ((h + (cljs.core.hash((function (){var G__31073 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31073) : cljs.core.key.call(null,G__31073));
})()) ^ cljs.core.hash((function (){var G__31074 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31074) : cljs.core.val.call(null,G__31074));
})()))) % (4503599627370496));
var G__31076 = cljs.core.next(s);
h = G__31075;
s = G__31076;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__31077 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__31078 = cljs.core.next(s__$1);
h = G__31077;
s__$1 = G__31078;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__31089_31099 = cljs.core.seq(fn_map);
var chunk__31090_31100 = null;
var count__31091_31101 = (0);
var i__31092_31102 = (0);
while(true){
if((i__31092_31102 < count__31091_31101)){
var vec__31093_31103 = chunk__31090_31100.cljs$core$IIndexed$_nth$arity$2(null,i__31092_31102);
var key_name_31104 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31093_31103,(0),null);
var f_31105 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31093_31103,(1),null);
var str_name_31106 = (function (){var G__31094 = key_name_31104;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31094) : cljs.core.name.call(null,G__31094));
})();
(obj[str_name_31106] = f_31105);

var G__31107 = seq__31089_31099;
var G__31108 = chunk__31090_31100;
var G__31109 = count__31091_31101;
var G__31110 = (i__31092_31102 + (1));
seq__31089_31099 = G__31107;
chunk__31090_31100 = G__31108;
count__31091_31101 = G__31109;
i__31092_31102 = G__31110;
continue;
} else {
var temp__4126__auto___31111 = cljs.core.seq(seq__31089_31099);
if(temp__4126__auto___31111){
var seq__31089_31112__$1 = temp__4126__auto___31111;
if(cljs.core.chunked_seq_QMARK_(seq__31089_31112__$1)){
var c__4598__auto___31113 = (function (){var G__31095 = seq__31089_31112__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__31095) : cljs.core.chunk_first.call(null,G__31095));
})();
var G__31114 = (function (){var G__31096 = seq__31089_31112__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__31096) : cljs.core.chunk_rest.call(null,G__31096));
})();
var G__31115 = c__4598__auto___31113;
var G__31116 = cljs.core.count(c__4598__auto___31113);
var G__31117 = (0);
seq__31089_31099 = G__31114;
chunk__31090_31100 = G__31115;
count__31091_31101 = G__31116;
i__31092_31102 = G__31117;
continue;
} else {
var vec__31097_31118 = cljs.core.first(seq__31089_31112__$1);
var key_name_31119 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31097_31118,(0),null);
var f_31120 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31097_31118,(1),null);
var str_name_31121 = (function (){var G__31098 = key_name_31119;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31098) : cljs.core.name.call(null,G__31098));
})();
(obj[str_name_31121] = f_31120);

var G__31122 = cljs.core.next(seq__31089_31112__$1);
var G__31123 = null;
var G__31124 = (0);
var G__31125 = (0);
seq__31089_31099 = G__31122;
chunk__31090_31100 = G__31123;
count__31091_31101 = G__31124;
i__31092_31102 = G__31125;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__31127 = coll;
if(G__31127){
var bit__4492__auto__ = (G__31127.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4492__auto__) || (G__31127.cljs$core$IReversible$)){
return true;
} else {
if((!G__31127.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31127);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__31128 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__31128;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__31129 = (i - (1));
var G__31130 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__31129;
r = G__31130;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__31131__i = 0, G__31131__a = new Array(arguments.length -  0);
while (G__31131__i < G__31131__a.length) {G__31131__a[G__31131__i] = arguments[G__31131__i + 0]; ++G__31131__i;}
  xs = new cljs.core.IndexedSeq(G__31131__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__31132){
var xs = cljs.core.seq(arglist__31132);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3811__auto__ = (coll == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__31136 = coll;
if(G__31136){
var bit__4485__auto__ = (G__31136.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__31136.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__31138 = x;
if(G__31138){
var bit__4492__auto__ = (G__31138.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4492__auto__) || (G__31138.cljs$core$IList$)){
return true;
} else {
if((!G__31138.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31138);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31138);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31145 = a.ns;
var G__31146 = b.ns;
return goog.array.defaultCompare(G__31145,G__31146);
})();
if(((0) === nsc)){
var G__31147 = a.name;
var G__31148 = b.name;
return goog.array.defaultCompare(G__31147,G__31148);
} else {
return nsc;
}
}
} else {
var G__31149 = a.name;
var G__31150 = b.name;
return goog.array.defaultCompare(G__31149,G__31150);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__31152 = null;
var G__31152__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__31152__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__31152 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31152__2.call(this,self__,coll);
case 3:
return G__31152__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31152.cljs$core$IFn$_invoke$arity$2 = G__31152__2;
G__31152.cljs$core$IFn$_invoke$arity$3 = G__31152__3;
return G__31152;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args31151){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31151)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__31154 = x;
if(G__31154){
var bit__4485__auto__ = (G__31154.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__31154.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__31156 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31156) : cljs.core.name.call(null,G__31156));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__31157 = ls.sval();
ls = G__31157;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__31159 = s;
if(G__31159){
var bit__4485__auto__ = (G__31159.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4485__auto__) || (G__31159.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__31160 = cljs.core.next(s__$1);
s__$1 = G__31160;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_31161 = (0);
var xs_31162 = cljs.core.seq(coll);
while(true){
if(xs_31162){
(ret[i_31161] = cljs.core.to_array(cljs.core.first(xs_31162)));

var G__31163 = (i_31161 + (1));
var G__31164 = cljs.core.next(xs_31162);
i_31161 = G__31163;
xs_31162 = G__31164;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31167 = (i + (1));
var G__31168 = cljs.core.next(s__$1);
i = G__31167;
s__$1 = G__31168;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___31169 = size;
var i_31170 = (0);
while(true){
if((i_31170 < n__4698__auto___31169)){
(a[i_31170] = init_val_or_seq);

var G__31171 = (i_31170 + (1));
i_31170 = G__31171;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31174 = (i + (1));
var G__31175 = cljs.core.next(s__$1);
i = G__31174;
s__$1 = G__31175;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___31176 = size;
var i_31177 = (0);
while(true){
if((i_31177 < n__4698__auto___31176)){
(a[i_31177] = init_val_or_seq);

var G__31178 = (i_31177 + (1));
i_31177 = G__31178;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31181 = (i + (1));
var G__31182 = cljs.core.next(s__$1);
i = G__31181;
s__$1 = G__31182;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___31183 = size;
var i_31184 = (0);
while(true){
if((i_31184 < n__4698__auto___31183)){
(a[i_31184] = init_val_or_seq);

var G__31185 = (i_31184 + (1));
i_31184 = G__31185;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31188 = (i + (1));
var G__31189 = cljs.core.next(s__$1);
i = G__31188;
s__$1 = G__31189;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___31190 = size;
var i_31191 = (0);
while(true){
if((i_31191 < n__4698__auto___31190)){
(a[i_31191] = init_val_or_seq);

var G__31192 = (i_31191 + (1));
i_31191 = G__31192;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__31193 = cljs.core.next(s__$1);
var G__31194 = (i - (1));
var G__31195 = (sum + (1));
s__$1 = G__31193;
i = G__31194;
sum = G__31195;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__31215__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__31215 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31216__i = 0, G__31216__a = new Array(arguments.length -  2);
while (G__31216__i < G__31216__a.length) {G__31216__a[G__31216__i] = arguments[G__31216__i + 2]; ++G__31216__i;}
  zs = new cljs.core.IndexedSeq(G__31216__a,0);
} 
return G__31215__delegate.call(this,x,y,zs);};
G__31215.cljs$lang$maxFixedArity = 2;
G__31215.cljs$lang$applyTo = (function (arglist__31217){
var x = cljs.core.first(arglist__31217);
arglist__31217 = cljs.core.next(arglist__31217);
var y = cljs.core.first(arglist__31217);
var zs = cljs.core.rest(arglist__31217);
return G__31215__delegate(x,y,zs);
});
G__31215.cljs$core$IFn$_invoke$arity$variadic = G__31215__delegate;
return G__31215;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__31218 = null;
if (arguments.length > 2) {
var G__31219__i = 0, G__31219__a = new Array(arguments.length -  2);
while (G__31219__i < G__31219__a.length) {G__31219__a[G__31219__i] = arguments[G__31219__i + 2]; ++G__31219__i;}
G__31218 = new cljs.core.IndexedSeq(G__31219__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__31220__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__31220 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__31221__i = 0, G__31221__a = new Array(arguments.length -  4);
while (G__31221__i < G__31221__a.length) {G__31221__a[G__31221__i] = arguments[G__31221__i + 4]; ++G__31221__i;}
  more = new cljs.core.IndexedSeq(G__31221__a,0);
} 
return G__31220__delegate.call(this,a,b,c,d,more);};
G__31220.cljs$lang$maxFixedArity = 4;
G__31220.cljs$lang$applyTo = (function (arglist__31222){
var a = cljs.core.first(arglist__31222);
arglist__31222 = cljs.core.next(arglist__31222);
var b = cljs.core.first(arglist__31222);
arglist__31222 = cljs.core.next(arglist__31222);
var c = cljs.core.first(arglist__31222);
arglist__31222 = cljs.core.next(arglist__31222);
var d = cljs.core.first(arglist__31222);
var more = cljs.core.rest(arglist__31222);
return G__31220__delegate(a,b,c,d,more);
});
G__31220.cljs$core$IFn$_invoke$arity$variadic = G__31220__delegate;
return G__31220;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__31223 = null;
if (arguments.length > 4) {
var G__31224__i = 0, G__31224__a = new Array(arguments.length -  4);
while (G__31224__i < G__31224__a.length) {G__31224__a[G__31224__i] = arguments[G__31224__i + 4]; ++G__31224__i;}
G__31223 = new cljs.core.IndexedSeq(G__31224__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__31223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__31225__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31226 = ntcoll;
var G__31227 = cljs.core.first(vals);
var G__31228 = cljs.core.next(vals);
tcoll = G__31226;
val = G__31227;
vals = G__31228;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31225 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31229__i = 0, G__31229__a = new Array(arguments.length -  2);
while (G__31229__i < G__31229__a.length) {G__31229__a[G__31229__i] = arguments[G__31229__i + 2]; ++G__31229__i;}
  vals = new cljs.core.IndexedSeq(G__31229__a,0);
} 
return G__31225__delegate.call(this,tcoll,val,vals);};
G__31225.cljs$lang$maxFixedArity = 2;
G__31225.cljs$lang$applyTo = (function (arglist__31230){
var tcoll = cljs.core.first(arglist__31230);
arglist__31230 = cljs.core.next(arglist__31230);
var val = cljs.core.first(arglist__31230);
var vals = cljs.core.rest(arglist__31230);
return G__31225__delegate(tcoll,val,vals);
});
G__31225.cljs$core$IFn$_invoke$arity$variadic = G__31225__delegate;
return G__31225;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__31231 = null;
if (arguments.length > 2) {
var G__31232__i = 0, G__31232__a = new Array(arguments.length -  2);
while (G__31232__i < G__31232__a.length) {G__31232__a[G__31232__i] = arguments[G__31232__i + 2]; ++G__31232__i;}
G__31231 = new cljs.core.IndexedSeq(G__31232__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__31233__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__31234 = ntcoll;
var G__31235 = cljs.core.first(kvs);
var G__31236 = cljs.core.second(kvs);
var G__31237 = cljs.core.nnext(kvs);
tcoll = G__31234;
key = G__31235;
val = G__31236;
kvs = G__31237;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31233 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31238__i = 0, G__31238__a = new Array(arguments.length -  3);
while (G__31238__i < G__31238__a.length) {G__31238__a[G__31238__i] = arguments[G__31238__i + 3]; ++G__31238__i;}
  kvs = new cljs.core.IndexedSeq(G__31238__a,0);
} 
return G__31233__delegate.call(this,tcoll,key,val,kvs);};
G__31233.cljs$lang$maxFixedArity = 3;
G__31233.cljs$lang$applyTo = (function (arglist__31239){
var tcoll = cljs.core.first(arglist__31239);
arglist__31239 = cljs.core.next(arglist__31239);
var key = cljs.core.first(arglist__31239);
arglist__31239 = cljs.core.next(arglist__31239);
var val = cljs.core.first(arglist__31239);
var kvs = cljs.core.rest(arglist__31239);
return G__31233__delegate(tcoll,key,val,kvs);
});
G__31233.cljs$core$IFn$_invoke$arity$variadic = G__31233__delegate;
return G__31233;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__31240 = null;
if (arguments.length > 3) {
var G__31241__i = 0, G__31241__a = new Array(arguments.length -  3);
while (G__31241__i < G__31241__a.length) {G__31241__a[G__31241__i] = arguments[G__31241__i + 3]; ++G__31241__i;}
G__31240 = new cljs.core.IndexedSeq(G__31241__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__31240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__31242__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__31243 = ntcoll;
var G__31244 = cljs.core.first(ks);
var G__31245 = cljs.core.next(ks);
tcoll = G__31243;
key = G__31244;
ks = G__31245;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31242 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31246__i = 0, G__31246__a = new Array(arguments.length -  2);
while (G__31246__i < G__31246__a.length) {G__31246__a[G__31246__i] = arguments[G__31246__i + 2]; ++G__31246__i;}
  ks = new cljs.core.IndexedSeq(G__31246__a,0);
} 
return G__31242__delegate.call(this,tcoll,key,ks);};
G__31242.cljs$lang$maxFixedArity = 2;
G__31242.cljs$lang$applyTo = (function (arglist__31247){
var tcoll = cljs.core.first(arglist__31247);
arglist__31247 = cljs.core.next(arglist__31247);
var key = cljs.core.first(arglist__31247);
var ks = cljs.core.rest(arglist__31247);
return G__31242__delegate(tcoll,key,ks);
});
G__31242.cljs$core$IFn$_invoke$arity$variadic = G__31242__delegate;
return G__31242;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__31248 = null;
if (arguments.length > 2) {
var G__31249__i = 0, G__31249__a = new Array(arguments.length -  2);
while (G__31249__i < G__31249__a.length) {G__31249__a[G__31249__i] = arguments[G__31249__i + 2]; ++G__31249__i;}
G__31248 = new cljs.core.IndexedSeq(G__31249__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__31248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__31250__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31251 = ntcoll;
var G__31252 = cljs.core.first(vals);
var G__31253 = cljs.core.next(vals);
tcoll = G__31251;
val = G__31252;
vals = G__31253;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31250 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31254__i = 0, G__31254__a = new Array(arguments.length -  2);
while (G__31254__i < G__31254__a.length) {G__31254__a[G__31254__i] = arguments[G__31254__i + 2]; ++G__31254__i;}
  vals = new cljs.core.IndexedSeq(G__31254__a,0);
} 
return G__31250__delegate.call(this,tcoll,val,vals);};
G__31250.cljs$lang$maxFixedArity = 2;
G__31250.cljs$lang$applyTo = (function (arglist__31255){
var tcoll = cljs.core.first(arglist__31255);
arglist__31255 = cljs.core.next(arglist__31255);
var val = cljs.core.first(arglist__31255);
var vals = cljs.core.rest(arglist__31255);
return G__31250__delegate(tcoll,val,vals);
});
G__31250.cljs$core$IFn$_invoke$arity$variadic = G__31250__delegate;
return G__31250;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__31256 = null;
if (arguments.length > 2) {
var G__31257__i = 0, G__31257__a = new Array(arguments.length -  2);
while (G__31257__i < G__31257__a.length) {G__31257__a[G__31257__i] = arguments[G__31257__i + 2]; ++G__31257__i;}
G__31256 = new cljs.core.IndexedSeq(G__31257__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4742 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4742);
} else {
var G__31468 = a4742;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31468) : f.call(null,G__31468));
}
} else {
var b4743 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4742,b4743);
} else {
var G__31469 = a4742;
var G__31470 = b4743;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31469,G__31470) : f.call(null,G__31469,G__31470));
}
} else {
var c4744 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4742,b4743,c4744);
} else {
var G__31471 = a4742;
var G__31472 = b4743;
var G__31473 = c4744;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31471,G__31472,G__31473) : f.call(null,G__31471,G__31472,G__31473));
}
} else {
var d4745 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4742,b4743,c4744,d4745);
} else {
var G__31474 = a4742;
var G__31475 = b4743;
var G__31476 = c4744;
var G__31477 = d4745;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31474,G__31475,G__31476,G__31477) : f.call(null,G__31474,G__31475,G__31476,G__31477));
}
} else {
var e4746 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4742,b4743,c4744,d4745,e4746);
} else {
var G__31478 = a4742;
var G__31479 = b4743;
var G__31480 = c4744;
var G__31481 = d4745;
var G__31482 = e4746;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31478,G__31479,G__31480,G__31481,G__31482) : f.call(null,G__31478,G__31479,G__31480,G__31481,G__31482));
}
} else {
var f4747 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4742,b4743,c4744,d4745,e4746,f4747);
} else {
var G__31483 = a4742;
var G__31484 = b4743;
var G__31485 = c4744;
var G__31486 = d4745;
var G__31487 = e4746;
var G__31488 = f4747;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__31483,G__31484,G__31485,G__31486,G__31487,G__31488) : f.call(null,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488));
}
} else {
var g4748 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4742,b4743,c4744,d4745,e4746,f4747,g4748);
} else {
var G__31489 = a4742;
var G__31490 = b4743;
var G__31491 = c4744;
var G__31492 = d4745;
var G__31493 = e4746;
var G__31494 = f4747;
var G__31495 = g4748;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__31489,G__31490,G__31491,G__31492,G__31493,G__31494,G__31495) : f.call(null,G__31489,G__31490,G__31491,G__31492,G__31493,G__31494,G__31495));
}
} else {
var h4749 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749);
} else {
var G__31496 = a4742;
var G__31497 = b4743;
var G__31498 = c4744;
var G__31499 = d4745;
var G__31500 = e4746;
var G__31501 = f4747;
var G__31502 = g4748;
var G__31503 = h4749;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503) : f.call(null,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503));
}
} else {
var i4750 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750);
} else {
var G__31504 = a4742;
var G__31505 = b4743;
var G__31506 = c4744;
var G__31507 = d4745;
var G__31508 = e4746;
var G__31509 = f4747;
var G__31510 = g4748;
var G__31511 = h4749;
var G__31512 = i4750;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512) : f.call(null,G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512));
}
} else {
var j4751 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751);
} else {
var G__31513 = a4742;
var G__31514 = b4743;
var G__31515 = c4744;
var G__31516 = d4745;
var G__31517 = e4746;
var G__31518 = f4747;
var G__31519 = g4748;
var G__31520 = h4749;
var G__31521 = i4750;
var G__31522 = j4751;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__31513,G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520,G__31521,G__31522) : f.call(null,G__31513,G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520,G__31521,G__31522));
}
} else {
var k4752 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752);
} else {
var G__31523 = a4742;
var G__31524 = b4743;
var G__31525 = c4744;
var G__31526 = d4745;
var G__31527 = e4746;
var G__31528 = f4747;
var G__31529 = g4748;
var G__31530 = h4749;
var G__31531 = i4750;
var G__31532 = j4751;
var G__31533 = k4752;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__31523,G__31524,G__31525,G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533) : f.call(null,G__31523,G__31524,G__31525,G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533));
}
} else {
var l4753 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753);
} else {
var G__31534 = a4742;
var G__31535 = b4743;
var G__31536 = c4744;
var G__31537 = d4745;
var G__31538 = e4746;
var G__31539 = f4747;
var G__31540 = g4748;
var G__31541 = h4749;
var G__31542 = i4750;
var G__31543 = j4751;
var G__31544 = k4752;
var G__31545 = l4753;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__31534,G__31535,G__31536,G__31537,G__31538,G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545) : f.call(null,G__31534,G__31535,G__31536,G__31537,G__31538,G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545));
}
} else {
var m4754 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754);
} else {
var G__31546 = a4742;
var G__31547 = b4743;
var G__31548 = c4744;
var G__31549 = d4745;
var G__31550 = e4746;
var G__31551 = f4747;
var G__31552 = g4748;
var G__31553 = h4749;
var G__31554 = i4750;
var G__31555 = j4751;
var G__31556 = k4752;
var G__31557 = l4753;
var G__31558 = m4754;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__31546,G__31547,G__31548,G__31549,G__31550,G__31551,G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558) : f.call(null,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551,G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558));
}
} else {
var n4755 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755);
} else {
var G__31559 = a4742;
var G__31560 = b4743;
var G__31561 = c4744;
var G__31562 = d4745;
var G__31563 = e4746;
var G__31564 = f4747;
var G__31565 = g4748;
var G__31566 = h4749;
var G__31567 = i4750;
var G__31568 = j4751;
var G__31569 = k4752;
var G__31570 = l4753;
var G__31571 = m4754;
var G__31572 = n4755;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565,G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572) : f.call(null,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565,G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572));
}
} else {
var o4756 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756);
} else {
var G__31573 = a4742;
var G__31574 = b4743;
var G__31575 = c4744;
var G__31576 = d4745;
var G__31577 = e4746;
var G__31578 = f4747;
var G__31579 = g4748;
var G__31580 = h4749;
var G__31581 = i4750;
var G__31582 = j4751;
var G__31583 = k4752;
var G__31584 = l4753;
var G__31585 = m4754;
var G__31586 = n4755;
var G__31587 = o4756;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587) : f.call(null,G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587));
}
} else {
var p4757 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757);
} else {
var G__31588 = a4742;
var G__31589 = b4743;
var G__31590 = c4744;
var G__31591 = d4745;
var G__31592 = e4746;
var G__31593 = f4747;
var G__31594 = g4748;
var G__31595 = h4749;
var G__31596 = i4750;
var G__31597 = j4751;
var G__31598 = k4752;
var G__31599 = l4753;
var G__31600 = m4754;
var G__31601 = n4755;
var G__31602 = o4756;
var G__31603 = p4757;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603) : f.call(null,G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603));
}
} else {
var q4758 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758);
} else {
var G__31604 = a4742;
var G__31605 = b4743;
var G__31606 = c4744;
var G__31607 = d4745;
var G__31608 = e4746;
var G__31609 = f4747;
var G__31610 = g4748;
var G__31611 = h4749;
var G__31612 = i4750;
var G__31613 = j4751;
var G__31614 = k4752;
var G__31615 = l4753;
var G__31616 = m4754;
var G__31617 = n4755;
var G__31618 = o4756;
var G__31619 = p4757;
var G__31620 = q4758;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__31604,G__31605,G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620) : f.call(null,G__31604,G__31605,G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620));
}
} else {
var r4759 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759);
} else {
var G__31621 = a4742;
var G__31622 = b4743;
var G__31623 = c4744;
var G__31624 = d4745;
var G__31625 = e4746;
var G__31626 = f4747;
var G__31627 = g4748;
var G__31628 = h4749;
var G__31629 = i4750;
var G__31630 = j4751;
var G__31631 = k4752;
var G__31632 = l4753;
var G__31633 = m4754;
var G__31634 = n4755;
var G__31635 = o4756;
var G__31636 = p4757;
var G__31637 = q4758;
var G__31638 = r4759;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__31621,G__31622,G__31623,G__31624,G__31625,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638) : f.call(null,G__31621,G__31622,G__31623,G__31624,G__31625,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638));
}
} else {
var s4760 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760);
} else {
var G__31639 = a4742;
var G__31640 = b4743;
var G__31641 = c4744;
var G__31642 = d4745;
var G__31643 = e4746;
var G__31644 = f4747;
var G__31645 = g4748;
var G__31646 = h4749;
var G__31647 = i4750;
var G__31648 = j4751;
var G__31649 = k4752;
var G__31650 = l4753;
var G__31651 = m4754;
var G__31652 = n4755;
var G__31653 = o4756;
var G__31654 = p4757;
var G__31655 = q4758;
var G__31656 = r4759;
var G__31657 = s4760;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657) : f.call(null,G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657));
}
} else {
var t4761 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760,t4761);
} else {
var G__31658 = a4742;
var G__31659 = b4743;
var G__31660 = c4744;
var G__31661 = d4745;
var G__31662 = e4746;
var G__31663 = f4747;
var G__31664 = g4748;
var G__31665 = h4749;
var G__31666 = i4750;
var G__31667 = j4751;
var G__31668 = k4752;
var G__31669 = l4753;
var G__31670 = m4754;
var G__31671 = n4755;
var G__31672 = o4756;
var G__31673 = p4757;
var G__31674 = q4758;
var G__31675 = r4759;
var G__31676 = s4760;
var G__31677 = t4761;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675,G__31676,G__31677) : f.call(null,G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675,G__31676,G__31677));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__31678__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__31678 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__31679__i = 0, G__31679__a = new Array(arguments.length -  5);
while (G__31679__i < G__31679__a.length) {G__31679__a[G__31679__i] = arguments[G__31679__i + 5]; ++G__31679__i;}
  args = new cljs.core.IndexedSeq(G__31679__a,0);
} 
return G__31678__delegate.call(this,f,a,b,c,d,args);};
G__31678.cljs$lang$maxFixedArity = 5;
G__31678.cljs$lang$applyTo = (function (arglist__31680){
var f = cljs.core.first(arglist__31680);
arglist__31680 = cljs.core.next(arglist__31680);
var a = cljs.core.first(arglist__31680);
arglist__31680 = cljs.core.next(arglist__31680);
var b = cljs.core.first(arglist__31680);
arglist__31680 = cljs.core.next(arglist__31680);
var c = cljs.core.first(arglist__31680);
arglist__31680 = cljs.core.next(arglist__31680);
var d = cljs.core.first(arglist__31680);
var args = cljs.core.rest(arglist__31680);
return G__31678__delegate(f,a,b,c,d,args);
});
G__31678.cljs$core$IFn$_invoke$arity$variadic = G__31678__delegate;
return G__31678;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__31681 = null;
if (arguments.length > 5) {
var G__31682__i = 0, G__31682__a = new Array(arguments.length -  5);
while (G__31682__i < G__31682__a.length) {G__31682__a[G__31682__i] = arguments[G__31682__i + 5]; ++G__31682__i;}
G__31681 = new cljs.core.IndexedSeq(G__31682__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__31681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__31698 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31698) : f.call(null,G__31698));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__31699 = cljs.core.meta(obj);
var G__31700 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31699,G__31700) : f.call(null,G__31699,G__31700));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__31701 = cljs.core.meta(obj);
var G__31702 = a;
var G__31703 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31701,G__31702,G__31703) : f.call(null,G__31701,G__31702,G__31703));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__31704 = cljs.core.meta(obj);
var G__31705 = a;
var G__31706 = b;
var G__31707 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31704,G__31705,G__31706,G__31707) : f.call(null,G__31704,G__31705,G__31706,G__31707));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__31708 = cljs.core.meta(obj);
var G__31709 = a;
var G__31710 = b;
var G__31711 = c;
var G__31712 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31708,G__31709,G__31710,G__31711,G__31712) : f.call(null,G__31708,G__31709,G__31710,G__31711,G__31712));
})());
});
var vary_meta__7 = (function() { 
var G__31713__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__31713 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__31714__i = 0, G__31714__a = new Array(arguments.length -  6);
while (G__31714__i < G__31714__a.length) {G__31714__a[G__31714__i] = arguments[G__31714__i + 6]; ++G__31714__i;}
  args = new cljs.core.IndexedSeq(G__31714__a,0);
} 
return G__31713__delegate.call(this,obj,f,a,b,c,d,args);};
G__31713.cljs$lang$maxFixedArity = 6;
G__31713.cljs$lang$applyTo = (function (arglist__31715){
var obj = cljs.core.first(arglist__31715);
arglist__31715 = cljs.core.next(arglist__31715);
var f = cljs.core.first(arglist__31715);
arglist__31715 = cljs.core.next(arglist__31715);
var a = cljs.core.first(arglist__31715);
arglist__31715 = cljs.core.next(arglist__31715);
var b = cljs.core.first(arglist__31715);
arglist__31715 = cljs.core.next(arglist__31715);
var c = cljs.core.first(arglist__31715);
arglist__31715 = cljs.core.next(arglist__31715);
var d = cljs.core.first(arglist__31715);
var args = cljs.core.rest(arglist__31715);
return G__31713__delegate(obj,f,a,b,c,d,args);
});
G__31713.cljs$core$IFn$_invoke$arity$variadic = G__31713__delegate;
return G__31713;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__31716 = null;
if (arguments.length > 6) {
var G__31717__i = 0, G__31717__a = new Array(arguments.length -  6);
while (G__31717__i < G__31717__a.length) {G__31717__a[G__31717__i] = arguments[G__31717__i + 6]; ++G__31717__i;}
G__31716 = new cljs.core.IndexedSeq(G__31717__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__31716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__31718__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__31718 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31719__i = 0, G__31719__a = new Array(arguments.length -  2);
while (G__31719__i < G__31719__a.length) {G__31719__a[G__31719__i] = arguments[G__31719__i + 2]; ++G__31719__i;}
  more = new cljs.core.IndexedSeq(G__31719__a,0);
} 
return G__31718__delegate.call(this,x,y,more);};
G__31718.cljs$lang$maxFixedArity = 2;
G__31718.cljs$lang$applyTo = (function (arglist__31720){
var x = cljs.core.first(arglist__31720);
arglist__31720 = cljs.core.next(arglist__31720);
var y = cljs.core.first(arglist__31720);
var more = cljs.core.rest(arglist__31720);
return G__31718__delegate(x,y,more);
});
G__31718.cljs$core$IFn$_invoke$arity$variadic = G__31718__delegate;
return G__31718;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__31721 = null;
if (arguments.length > 2) {
var G__31722__i = 0, G__31722__a = new Array(arguments.length -  2);
while (G__31722__i < G__31722__a.length) {G__31722__a[G__31722__i] = arguments[G__31722__i + 2]; ++G__31722__i;}
G__31721 = new cljs.core.IndexedSeq(G__31722__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t31726 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t31726 = (function (nil_iter,meta31727){
this.nil_iter = nil_iter;
this.meta31727 = meta31727;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t31726.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t31726.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t31726.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t31726.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_31728){
var self__ = this;
var _31728__$1 = this;
return self__.meta31727;
});

cljs.core.t31726.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_31728,meta31727__$1){
var self__ = this;
var _31728__$1 = this;
return (new cljs.core.t31726(self__.nil_iter,meta31727__$1));
});

cljs.core.t31726.cljs$lang$type = true;

cljs.core.t31726.cljs$lang$ctorStr = "cljs.core/t31726";

cljs.core.t31726.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/t31726");
});

cljs.core.__GT_t31726 = (function __GT_t31726(nil_iter__$1,meta31727){
return (new cljs.core.t31726(nil_iter__$1,meta31727));
});

}

return (new cljs.core.t31726(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$72,54,cljs.core.constant$keyword$73,3063,cljs.core.constant$keyword$74,3,cljs.core.constant$keyword$75,3059,cljs.core.constant$keyword$76,"/Users/peter/personal/cljstemplate/release/scripts-adv/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return self__.iter.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__31729 = lt;
var G__31730 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__31729,G__31730) : self__.xform.call(null,G__31729,G__31730));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31731 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31731) : self__.xform.call(null,G__31731));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__31733 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31733) : xform.call(null,G__31733));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__31735 = cljs.core.next(iters__$1);
iters__$1 = G__31735;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4698__auto___31736 = self__.iters.length;
var i_31737 = (0);
while(true){
if((i_31737 < n__4698__auto___31736)){
(self__.nexts[i_31737] = (self__.iters[i_31737]).next());

var G__31738 = (i_31737 + (1));
i_31737 = G__31738;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return this$.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31734 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31734) : self__.xform.call(null,G__31734));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__31743 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31743) : xform.call(null,G__31743));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__31744_31748 = cljs.core.seq(colls);
var chunk__31745_31749 = null;
var count__31746_31750 = (0);
var i__31747_31751 = (0);
while(true){
if((i__31747_31751 < count__31746_31750)){
var coll_31752 = chunk__31745_31749.cljs$core$IIndexed$_nth$arity$2(null,i__31747_31751);
iters.push(cljs.core.iter(coll_31752));

var G__31753 = seq__31744_31748;
var G__31754 = chunk__31745_31749;
var G__31755 = count__31746_31750;
var G__31756 = (i__31747_31751 + (1));
seq__31744_31748 = G__31753;
chunk__31745_31749 = G__31754;
count__31746_31750 = G__31755;
i__31747_31751 = G__31756;
continue;
} else {
var temp__4126__auto___31757 = cljs.core.seq(seq__31744_31748);
if(temp__4126__auto___31757){
var seq__31744_31758__$1 = temp__4126__auto___31757;
if(cljs.core.chunked_seq_QMARK_(seq__31744_31758__$1)){
var c__4598__auto___31759 = cljs.core.chunk_first(seq__31744_31758__$1);
var G__31760 = cljs.core.chunk_rest(seq__31744_31758__$1);
var G__31761 = c__4598__auto___31759;
var G__31762 = cljs.core.count(c__4598__auto___31759);
var G__31763 = (0);
seq__31744_31748 = G__31760;
chunk__31745_31749 = G__31761;
count__31746_31750 = G__31762;
i__31747_31751 = G__31763;
continue;
} else {
var coll_31764 = cljs.core.first(seq__31744_31758__$1);
iters.push(cljs.core.iter(coll_31764));

var G__31765 = cljs.core.next(seq__31744_31758__$1);
var G__31766 = null;
var G__31767 = (0);
var G__31768 = (0);
seq__31744_31748 = G__31765;
chunk__31745_31749 = G__31766;
count__31746_31750 = G__31767;
i__31747_31751 = G__31768;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3811__auto__ = cljs.core.seq(coll);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__31769__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__31769 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__31770__i = 0, G__31770__a = new Array(arguments.length -  2);
while (G__31770__i < G__31770__a.length) {G__31770__a[G__31770__i] = arguments[G__31770__i + 2]; ++G__31770__i;}
  colls = new cljs.core.IndexedSeq(G__31770__a,0);
} 
return G__31769__delegate.call(this,xform,coll,colls);};
G__31769.cljs$lang$maxFixedArity = 2;
G__31769.cljs$lang$applyTo = (function (arglist__31771){
var xform = cljs.core.first(arglist__31771);
arglist__31771 = cljs.core.next(arglist__31771);
var coll = cljs.core.first(arglist__31771);
var colls = cljs.core.rest(arglist__31771);
return G__31769__delegate(xform,coll,colls);
});
G__31769.cljs$core$IFn$_invoke$arity$variadic = G__31769__delegate;
return G__31769;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__31772 = null;
if (arguments.length > 2) {
var G__31773__i = 0, G__31773__a = new Array(arguments.length -  2);
while (G__31773__i < G__31773__a.length) {G__31773__a[G__31773__i] = arguments[G__31773__i + 2]; ++G__31773__i;}
G__31772 = new cljs.core.IndexedSeq(G__31773__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__31772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__31775 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31775) : pred.call(null,G__31775));
})())){
var G__31776 = pred;
var G__31777 = cljs.core.next(coll);
pred = G__31776;
coll = G__31777;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3811__auto__ = (function (){var G__31781 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31781) : pred.call(null,G__31781));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__31782 = pred;
var G__31783 = cljs.core.next(coll);
pred = G__31782;
coll = G__31783;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__31790 = null;
var G__31790__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__31790__1 = (function (x){
return cljs.core.not((function (){var G__31787 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31787) : f.call(null,G__31787));
})());
});
var G__31790__2 = (function (x,y){
return cljs.core.not((function (){var G__31788 = x;
var G__31789 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31788,G__31789) : f.call(null,G__31788,G__31789));
})());
});
var G__31790__3 = (function() { 
var G__31791__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__31791 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31792__i = 0, G__31792__a = new Array(arguments.length -  2);
while (G__31792__i < G__31792__a.length) {G__31792__a[G__31792__i] = arguments[G__31792__i + 2]; ++G__31792__i;}
  zs = new cljs.core.IndexedSeq(G__31792__a,0);
} 
return G__31791__delegate.call(this,x,y,zs);};
G__31791.cljs$lang$maxFixedArity = 2;
G__31791.cljs$lang$applyTo = (function (arglist__31793){
var x = cljs.core.first(arglist__31793);
arglist__31793 = cljs.core.next(arglist__31793);
var y = cljs.core.first(arglist__31793);
var zs = cljs.core.rest(arglist__31793);
return G__31791__delegate(x,y,zs);
});
G__31791.cljs$core$IFn$_invoke$arity$variadic = G__31791__delegate;
return G__31791;
})()
;
G__31790 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__31790__0.call(this);
case 1:
return G__31790__1.call(this,x);
case 2:
return G__31790__2.call(this,x,y);
default:
var G__31794 = null;
if (arguments.length > 2) {
var G__31795__i = 0, G__31795__a = new Array(arguments.length -  2);
while (G__31795__i < G__31795__a.length) {G__31795__a[G__31795__i] = arguments[G__31795__i + 2]; ++G__31795__i;}
G__31794 = new cljs.core.IndexedSeq(G__31795__a,0);
}
return G__31790__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31790.cljs$lang$maxFixedArity = 2;
G__31790.cljs$lang$applyTo = G__31790__3.cljs$lang$applyTo;
G__31790.cljs$core$IFn$_invoke$arity$0 = G__31790__0;
G__31790.cljs$core$IFn$_invoke$arity$1 = G__31790__1;
G__31790.cljs$core$IFn$_invoke$arity$2 = G__31790__2;
G__31790.cljs$core$IFn$_invoke$arity$variadic = G__31790__3.cljs$core$IFn$_invoke$arity$variadic;
return G__31790;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__31796__delegate = function (args){
return x;
};
var G__31796 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31797__i = 0, G__31797__a = new Array(arguments.length -  0);
while (G__31797__i < G__31797__a.length) {G__31797__a[G__31797__i] = arguments[G__31797__i + 0]; ++G__31797__i;}
  args = new cljs.core.IndexedSeq(G__31797__a,0);
} 
return G__31796__delegate.call(this,args);};
G__31796.cljs$lang$maxFixedArity = 0;
G__31796.cljs$lang$applyTo = (function (arglist__31798){
var args = cljs.core.seq(arglist__31798);
return G__31796__delegate(args);
});
G__31796.cljs$core$IFn$_invoke$arity$variadic = G__31796__delegate;
return G__31796;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__31853 = null;
var G__31853__0 = (function (){
var G__31826 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31826) : f.call(null,G__31826));
});
var G__31853__1 = (function (x){
var G__31827 = (function (){var G__31828 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31828) : g.call(null,G__31828));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31827) : f.call(null,G__31827));
});
var G__31853__2 = (function (x,y){
var G__31829 = (function (){var G__31830 = x;
var G__31831 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31830,G__31831) : g.call(null,G__31830,G__31831));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31829) : f.call(null,G__31829));
});
var G__31853__3 = (function (x,y,z){
var G__31832 = (function (){var G__31833 = x;
var G__31834 = y;
var G__31835 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31833,G__31834,G__31835) : g.call(null,G__31833,G__31834,G__31835));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31832) : f.call(null,G__31832));
});
var G__31853__4 = (function() { 
var G__31854__delegate = function (x,y,z,args){
var G__31836 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31836) : f.call(null,G__31836));
};
var G__31854 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31855__i = 0, G__31855__a = new Array(arguments.length -  3);
while (G__31855__i < G__31855__a.length) {G__31855__a[G__31855__i] = arguments[G__31855__i + 3]; ++G__31855__i;}
  args = new cljs.core.IndexedSeq(G__31855__a,0);
} 
return G__31854__delegate.call(this,x,y,z,args);};
G__31854.cljs$lang$maxFixedArity = 3;
G__31854.cljs$lang$applyTo = (function (arglist__31856){
var x = cljs.core.first(arglist__31856);
arglist__31856 = cljs.core.next(arglist__31856);
var y = cljs.core.first(arglist__31856);
arglist__31856 = cljs.core.next(arglist__31856);
var z = cljs.core.first(arglist__31856);
var args = cljs.core.rest(arglist__31856);
return G__31854__delegate(x,y,z,args);
});
G__31854.cljs$core$IFn$_invoke$arity$variadic = G__31854__delegate;
return G__31854;
})()
;
G__31853 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31853__0.call(this);
case 1:
return G__31853__1.call(this,x);
case 2:
return G__31853__2.call(this,x,y);
case 3:
return G__31853__3.call(this,x,y,z);
default:
var G__31857 = null;
if (arguments.length > 3) {
var G__31858__i = 0, G__31858__a = new Array(arguments.length -  3);
while (G__31858__i < G__31858__a.length) {G__31858__a[G__31858__i] = arguments[G__31858__i + 3]; ++G__31858__i;}
G__31857 = new cljs.core.IndexedSeq(G__31858__a,0);
}
return G__31853__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31853.cljs$lang$maxFixedArity = 3;
G__31853.cljs$lang$applyTo = G__31853__4.cljs$lang$applyTo;
G__31853.cljs$core$IFn$_invoke$arity$0 = G__31853__0;
G__31853.cljs$core$IFn$_invoke$arity$1 = G__31853__1;
G__31853.cljs$core$IFn$_invoke$arity$2 = G__31853__2;
G__31853.cljs$core$IFn$_invoke$arity$3 = G__31853__3;
G__31853.cljs$core$IFn$_invoke$arity$variadic = G__31853__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31853;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__31859 = null;
var G__31859__0 = (function (){
var G__31837 = (function (){var G__31838 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31838) : g.call(null,G__31838));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31837) : f.call(null,G__31837));
});
var G__31859__1 = (function (x){
var G__31839 = (function (){var G__31840 = (function (){var G__31841 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__31841) : h.call(null,G__31841));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31840) : g.call(null,G__31840));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31839) : f.call(null,G__31839));
});
var G__31859__2 = (function (x,y){
var G__31842 = (function (){var G__31843 = (function (){var G__31844 = x;
var G__31845 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__31844,G__31845) : h.call(null,G__31844,G__31845));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31843) : g.call(null,G__31843));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31842) : f.call(null,G__31842));
});
var G__31859__3 = (function (x,y,z){
var G__31846 = (function (){var G__31847 = (function (){var G__31848 = x;
var G__31849 = y;
var G__31850 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__31848,G__31849,G__31850) : h.call(null,G__31848,G__31849,G__31850));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31847) : g.call(null,G__31847));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31846) : f.call(null,G__31846));
});
var G__31859__4 = (function() { 
var G__31860__delegate = function (x,y,z,args){
var G__31851 = (function (){var G__31852 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31852) : g.call(null,G__31852));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31851) : f.call(null,G__31851));
};
var G__31860 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31861__i = 0, G__31861__a = new Array(arguments.length -  3);
while (G__31861__i < G__31861__a.length) {G__31861__a[G__31861__i] = arguments[G__31861__i + 3]; ++G__31861__i;}
  args = new cljs.core.IndexedSeq(G__31861__a,0);
} 
return G__31860__delegate.call(this,x,y,z,args);};
G__31860.cljs$lang$maxFixedArity = 3;
G__31860.cljs$lang$applyTo = (function (arglist__31862){
var x = cljs.core.first(arglist__31862);
arglist__31862 = cljs.core.next(arglist__31862);
var y = cljs.core.first(arglist__31862);
arglist__31862 = cljs.core.next(arglist__31862);
var z = cljs.core.first(arglist__31862);
var args = cljs.core.rest(arglist__31862);
return G__31860__delegate(x,y,z,args);
});
G__31860.cljs$core$IFn$_invoke$arity$variadic = G__31860__delegate;
return G__31860;
})()
;
G__31859 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31859__0.call(this);
case 1:
return G__31859__1.call(this,x);
case 2:
return G__31859__2.call(this,x,y);
case 3:
return G__31859__3.call(this,x,y,z);
default:
var G__31863 = null;
if (arguments.length > 3) {
var G__31864__i = 0, G__31864__a = new Array(arguments.length -  3);
while (G__31864__i < G__31864__a.length) {G__31864__a[G__31864__i] = arguments[G__31864__i + 3]; ++G__31864__i;}
G__31863 = new cljs.core.IndexedSeq(G__31864__a,0);
}
return G__31859__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31859.cljs$lang$maxFixedArity = 3;
G__31859.cljs$lang$applyTo = G__31859__4.cljs$lang$applyTo;
G__31859.cljs$core$IFn$_invoke$arity$0 = G__31859__0;
G__31859.cljs$core$IFn$_invoke$arity$1 = G__31859__1;
G__31859.cljs$core$IFn$_invoke$arity$2 = G__31859__2;
G__31859.cljs$core$IFn$_invoke$arity$3 = G__31859__3;
G__31859.cljs$core$IFn$_invoke$arity$variadic = G__31859__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31859;
})()
});
var comp__4 = (function() { 
var G__31865__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__31866__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__31867 = cljs.core.first(fs__$2).call(null,ret);
var G__31868 = cljs.core.next(fs__$2);
ret = G__31867;
fs__$2 = G__31868;
continue;
} else {
return ret;
}
break;
}
};
var G__31866 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31869__i = 0, G__31869__a = new Array(arguments.length -  0);
while (G__31869__i < G__31869__a.length) {G__31869__a[G__31869__i] = arguments[G__31869__i + 0]; ++G__31869__i;}
  args = new cljs.core.IndexedSeq(G__31869__a,0);
} 
return G__31866__delegate.call(this,args);};
G__31866.cljs$lang$maxFixedArity = 0;
G__31866.cljs$lang$applyTo = (function (arglist__31870){
var args = cljs.core.seq(arglist__31870);
return G__31866__delegate(args);
});
G__31866.cljs$core$IFn$_invoke$arity$variadic = G__31866__delegate;
return G__31866;
})()
;
;})(fs__$1))
};
var G__31865 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__31871__i = 0, G__31871__a = new Array(arguments.length -  3);
while (G__31871__i < G__31871__a.length) {G__31871__a[G__31871__i] = arguments[G__31871__i + 3]; ++G__31871__i;}
  fs = new cljs.core.IndexedSeq(G__31871__a,0);
} 
return G__31865__delegate.call(this,f1,f2,f3,fs);};
G__31865.cljs$lang$maxFixedArity = 3;
G__31865.cljs$lang$applyTo = (function (arglist__31872){
var f1 = cljs.core.first(arglist__31872);
arglist__31872 = cljs.core.next(arglist__31872);
var f2 = cljs.core.first(arglist__31872);
arglist__31872 = cljs.core.next(arglist__31872);
var f3 = cljs.core.first(arglist__31872);
var fs = cljs.core.rest(arglist__31872);
return G__31865__delegate(f1,f2,f3,fs);
});
G__31865.cljs$core$IFn$_invoke$arity$variadic = G__31865__delegate;
return G__31865;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__31873 = null;
if (arguments.length > 3) {
var G__31874__i = 0, G__31874__a = new Array(arguments.length -  3);
while (G__31874__i < G__31874__a.length) {G__31874__a[G__31874__i] = arguments[G__31874__i + 3]; ++G__31874__i;}
G__31873 = new cljs.core.IndexedSeq(G__31874__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__31873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__31959 = null;
var G__31959__0 = (function (){
var G__31917 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31917) : f.call(null,G__31917));
});
var G__31959__1 = (function (x){
var G__31918 = arg1;
var G__31919 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31918,G__31919) : f.call(null,G__31918,G__31919));
});
var G__31959__2 = (function (x,y){
var G__31920 = arg1;
var G__31921 = x;
var G__31922 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31920,G__31921,G__31922) : f.call(null,G__31920,G__31921,G__31922));
});
var G__31959__3 = (function (x,y,z){
var G__31923 = arg1;
var G__31924 = x;
var G__31925 = y;
var G__31926 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31923,G__31924,G__31925,G__31926) : f.call(null,G__31923,G__31924,G__31925,G__31926));
});
var G__31959__4 = (function() { 
var G__31960__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__31960 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31961__i = 0, G__31961__a = new Array(arguments.length -  3);
while (G__31961__i < G__31961__a.length) {G__31961__a[G__31961__i] = arguments[G__31961__i + 3]; ++G__31961__i;}
  args = new cljs.core.IndexedSeq(G__31961__a,0);
} 
return G__31960__delegate.call(this,x,y,z,args);};
G__31960.cljs$lang$maxFixedArity = 3;
G__31960.cljs$lang$applyTo = (function (arglist__31962){
var x = cljs.core.first(arglist__31962);
arglist__31962 = cljs.core.next(arglist__31962);
var y = cljs.core.first(arglist__31962);
arglist__31962 = cljs.core.next(arglist__31962);
var z = cljs.core.first(arglist__31962);
var args = cljs.core.rest(arglist__31962);
return G__31960__delegate(x,y,z,args);
});
G__31960.cljs$core$IFn$_invoke$arity$variadic = G__31960__delegate;
return G__31960;
})()
;
G__31959 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31959__0.call(this);
case 1:
return G__31959__1.call(this,x);
case 2:
return G__31959__2.call(this,x,y);
case 3:
return G__31959__3.call(this,x,y,z);
default:
var G__31963 = null;
if (arguments.length > 3) {
var G__31964__i = 0, G__31964__a = new Array(arguments.length -  3);
while (G__31964__i < G__31964__a.length) {G__31964__a[G__31964__i] = arguments[G__31964__i + 3]; ++G__31964__i;}
G__31963 = new cljs.core.IndexedSeq(G__31964__a,0);
}
return G__31959__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31963);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31959.cljs$lang$maxFixedArity = 3;
G__31959.cljs$lang$applyTo = G__31959__4.cljs$lang$applyTo;
G__31959.cljs$core$IFn$_invoke$arity$0 = G__31959__0;
G__31959.cljs$core$IFn$_invoke$arity$1 = G__31959__1;
G__31959.cljs$core$IFn$_invoke$arity$2 = G__31959__2;
G__31959.cljs$core$IFn$_invoke$arity$3 = G__31959__3;
G__31959.cljs$core$IFn$_invoke$arity$variadic = G__31959__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31959;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__31965 = null;
var G__31965__0 = (function (){
var G__31927 = arg1;
var G__31928 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31927,G__31928) : f.call(null,G__31927,G__31928));
});
var G__31965__1 = (function (x){
var G__31929 = arg1;
var G__31930 = arg2;
var G__31931 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31929,G__31930,G__31931) : f.call(null,G__31929,G__31930,G__31931));
});
var G__31965__2 = (function (x,y){
var G__31932 = arg1;
var G__31933 = arg2;
var G__31934 = x;
var G__31935 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31932,G__31933,G__31934,G__31935) : f.call(null,G__31932,G__31933,G__31934,G__31935));
});
var G__31965__3 = (function (x,y,z){
var G__31936 = arg1;
var G__31937 = arg2;
var G__31938 = x;
var G__31939 = y;
var G__31940 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31936,G__31937,G__31938,G__31939,G__31940) : f.call(null,G__31936,G__31937,G__31938,G__31939,G__31940));
});
var G__31965__4 = (function() { 
var G__31966__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__31966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31967__i = 0, G__31967__a = new Array(arguments.length -  3);
while (G__31967__i < G__31967__a.length) {G__31967__a[G__31967__i] = arguments[G__31967__i + 3]; ++G__31967__i;}
  args = new cljs.core.IndexedSeq(G__31967__a,0);
} 
return G__31966__delegate.call(this,x,y,z,args);};
G__31966.cljs$lang$maxFixedArity = 3;
G__31966.cljs$lang$applyTo = (function (arglist__31968){
var x = cljs.core.first(arglist__31968);
arglist__31968 = cljs.core.next(arglist__31968);
var y = cljs.core.first(arglist__31968);
arglist__31968 = cljs.core.next(arglist__31968);
var z = cljs.core.first(arglist__31968);
var args = cljs.core.rest(arglist__31968);
return G__31966__delegate(x,y,z,args);
});
G__31966.cljs$core$IFn$_invoke$arity$variadic = G__31966__delegate;
return G__31966;
})()
;
G__31965 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31965__0.call(this);
case 1:
return G__31965__1.call(this,x);
case 2:
return G__31965__2.call(this,x,y);
case 3:
return G__31965__3.call(this,x,y,z);
default:
var G__31969 = null;
if (arguments.length > 3) {
var G__31970__i = 0, G__31970__a = new Array(arguments.length -  3);
while (G__31970__i < G__31970__a.length) {G__31970__a[G__31970__i] = arguments[G__31970__i + 3]; ++G__31970__i;}
G__31969 = new cljs.core.IndexedSeq(G__31970__a,0);
}
return G__31965__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31965.cljs$lang$maxFixedArity = 3;
G__31965.cljs$lang$applyTo = G__31965__4.cljs$lang$applyTo;
G__31965.cljs$core$IFn$_invoke$arity$0 = G__31965__0;
G__31965.cljs$core$IFn$_invoke$arity$1 = G__31965__1;
G__31965.cljs$core$IFn$_invoke$arity$2 = G__31965__2;
G__31965.cljs$core$IFn$_invoke$arity$3 = G__31965__3;
G__31965.cljs$core$IFn$_invoke$arity$variadic = G__31965__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31965;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__31971 = null;
var G__31971__0 = (function (){
var G__31941 = arg1;
var G__31942 = arg2;
var G__31943 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31941,G__31942,G__31943) : f.call(null,G__31941,G__31942,G__31943));
});
var G__31971__1 = (function (x){
var G__31944 = arg1;
var G__31945 = arg2;
var G__31946 = arg3;
var G__31947 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31944,G__31945,G__31946,G__31947) : f.call(null,G__31944,G__31945,G__31946,G__31947));
});
var G__31971__2 = (function (x,y){
var G__31948 = arg1;
var G__31949 = arg2;
var G__31950 = arg3;
var G__31951 = x;
var G__31952 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31948,G__31949,G__31950,G__31951,G__31952) : f.call(null,G__31948,G__31949,G__31950,G__31951,G__31952));
});
var G__31971__3 = (function (x,y,z){
var G__31953 = arg1;
var G__31954 = arg2;
var G__31955 = arg3;
var G__31956 = x;
var G__31957 = y;
var G__31958 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__31953,G__31954,G__31955,G__31956,G__31957,G__31958) : f.call(null,G__31953,G__31954,G__31955,G__31956,G__31957,G__31958));
});
var G__31971__4 = (function() { 
var G__31972__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__31972 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31973__i = 0, G__31973__a = new Array(arguments.length -  3);
while (G__31973__i < G__31973__a.length) {G__31973__a[G__31973__i] = arguments[G__31973__i + 3]; ++G__31973__i;}
  args = new cljs.core.IndexedSeq(G__31973__a,0);
} 
return G__31972__delegate.call(this,x,y,z,args);};
G__31972.cljs$lang$maxFixedArity = 3;
G__31972.cljs$lang$applyTo = (function (arglist__31974){
var x = cljs.core.first(arglist__31974);
arglist__31974 = cljs.core.next(arglist__31974);
var y = cljs.core.first(arglist__31974);
arglist__31974 = cljs.core.next(arglist__31974);
var z = cljs.core.first(arglist__31974);
var args = cljs.core.rest(arglist__31974);
return G__31972__delegate(x,y,z,args);
});
G__31972.cljs$core$IFn$_invoke$arity$variadic = G__31972__delegate;
return G__31972;
})()
;
G__31971 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31971__0.call(this);
case 1:
return G__31971__1.call(this,x);
case 2:
return G__31971__2.call(this,x,y);
case 3:
return G__31971__3.call(this,x,y,z);
default:
var G__31975 = null;
if (arguments.length > 3) {
var G__31976__i = 0, G__31976__a = new Array(arguments.length -  3);
while (G__31976__i < G__31976__a.length) {G__31976__a[G__31976__i] = arguments[G__31976__i + 3]; ++G__31976__i;}
G__31975 = new cljs.core.IndexedSeq(G__31976__a,0);
}
return G__31971__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31971.cljs$lang$maxFixedArity = 3;
G__31971.cljs$lang$applyTo = G__31971__4.cljs$lang$applyTo;
G__31971.cljs$core$IFn$_invoke$arity$0 = G__31971__0;
G__31971.cljs$core$IFn$_invoke$arity$1 = G__31971__1;
G__31971.cljs$core$IFn$_invoke$arity$2 = G__31971__2;
G__31971.cljs$core$IFn$_invoke$arity$3 = G__31971__3;
G__31971.cljs$core$IFn$_invoke$arity$variadic = G__31971__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31971;
})()
});
var partial__5 = (function() { 
var G__31977__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__31978__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__31978 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31979__i = 0, G__31979__a = new Array(arguments.length -  0);
while (G__31979__i < G__31979__a.length) {G__31979__a[G__31979__i] = arguments[G__31979__i + 0]; ++G__31979__i;}
  args = new cljs.core.IndexedSeq(G__31979__a,0);
} 
return G__31978__delegate.call(this,args);};
G__31978.cljs$lang$maxFixedArity = 0;
G__31978.cljs$lang$applyTo = (function (arglist__31980){
var args = cljs.core.seq(arglist__31980);
return G__31978__delegate(args);
});
G__31978.cljs$core$IFn$_invoke$arity$variadic = G__31978__delegate;
return G__31978;
})()
;
};
var G__31977 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__31981__i = 0, G__31981__a = new Array(arguments.length -  4);
while (G__31981__i < G__31981__a.length) {G__31981__a[G__31981__i] = arguments[G__31981__i + 4]; ++G__31981__i;}
  more = new cljs.core.IndexedSeq(G__31981__a,0);
} 
return G__31977__delegate.call(this,f,arg1,arg2,arg3,more);};
G__31977.cljs$lang$maxFixedArity = 4;
G__31977.cljs$lang$applyTo = (function (arglist__31982){
var f = cljs.core.first(arglist__31982);
arglist__31982 = cljs.core.next(arglist__31982);
var arg1 = cljs.core.first(arglist__31982);
arglist__31982 = cljs.core.next(arglist__31982);
var arg2 = cljs.core.first(arglist__31982);
arglist__31982 = cljs.core.next(arglist__31982);
var arg3 = cljs.core.first(arglist__31982);
var more = cljs.core.rest(arglist__31982);
return G__31977__delegate(f,arg1,arg2,arg3,more);
});
G__31977.cljs$core$IFn$_invoke$arity$variadic = G__31977__delegate;
return G__31977;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__31983 = null;
if (arguments.length > 4) {
var G__31984__i = 0, G__31984__a = new Array(arguments.length -  4);
while (G__31984__i < G__31984__a.length) {G__31984__a[G__31984__i] = arguments[G__31984__i + 4]; ++G__31984__i;}
G__31983 = new cljs.core.IndexedSeq(G__31984__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__31983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__32017 = null;
var G__32017__1 = (function (a){
var G__32001 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32001) : f.call(null,G__32001));
});
var G__32017__2 = (function (a,b){
var G__32002 = (((a == null))?x:a);
var G__32003 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32002,G__32003) : f.call(null,G__32002,G__32003));
});
var G__32017__3 = (function (a,b,c){
var G__32004 = (((a == null))?x:a);
var G__32005 = b;
var G__32006 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32004,G__32005,G__32006) : f.call(null,G__32004,G__32005,G__32006));
});
var G__32017__4 = (function() { 
var G__32018__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__32018 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32019__i = 0, G__32019__a = new Array(arguments.length -  3);
while (G__32019__i < G__32019__a.length) {G__32019__a[G__32019__i] = arguments[G__32019__i + 3]; ++G__32019__i;}
  ds = new cljs.core.IndexedSeq(G__32019__a,0);
} 
return G__32018__delegate.call(this,a,b,c,ds);};
G__32018.cljs$lang$maxFixedArity = 3;
G__32018.cljs$lang$applyTo = (function (arglist__32020){
var a = cljs.core.first(arglist__32020);
arglist__32020 = cljs.core.next(arglist__32020);
var b = cljs.core.first(arglist__32020);
arglist__32020 = cljs.core.next(arglist__32020);
var c = cljs.core.first(arglist__32020);
var ds = cljs.core.rest(arglist__32020);
return G__32018__delegate(a,b,c,ds);
});
G__32018.cljs$core$IFn$_invoke$arity$variadic = G__32018__delegate;
return G__32018;
})()
;
G__32017 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__32017__1.call(this,a);
case 2:
return G__32017__2.call(this,a,b);
case 3:
return G__32017__3.call(this,a,b,c);
default:
var G__32021 = null;
if (arguments.length > 3) {
var G__32022__i = 0, G__32022__a = new Array(arguments.length -  3);
while (G__32022__i < G__32022__a.length) {G__32022__a[G__32022__i] = arguments[G__32022__i + 3]; ++G__32022__i;}
G__32021 = new cljs.core.IndexedSeq(G__32022__a,0);
}
return G__32017__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32021);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32017.cljs$lang$maxFixedArity = 3;
G__32017.cljs$lang$applyTo = G__32017__4.cljs$lang$applyTo;
G__32017.cljs$core$IFn$_invoke$arity$1 = G__32017__1;
G__32017.cljs$core$IFn$_invoke$arity$2 = G__32017__2;
G__32017.cljs$core$IFn$_invoke$arity$3 = G__32017__3;
G__32017.cljs$core$IFn$_invoke$arity$variadic = G__32017__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32017;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__32023 = null;
var G__32023__2 = (function (a,b){
var G__32007 = (((a == null))?x:a);
var G__32008 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32007,G__32008) : f.call(null,G__32007,G__32008));
});
var G__32023__3 = (function (a,b,c){
var G__32009 = (((a == null))?x:a);
var G__32010 = (((b == null))?y:b);
var G__32011 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32009,G__32010,G__32011) : f.call(null,G__32009,G__32010,G__32011));
});
var G__32023__4 = (function() { 
var G__32024__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__32024 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32025__i = 0, G__32025__a = new Array(arguments.length -  3);
while (G__32025__i < G__32025__a.length) {G__32025__a[G__32025__i] = arguments[G__32025__i + 3]; ++G__32025__i;}
  ds = new cljs.core.IndexedSeq(G__32025__a,0);
} 
return G__32024__delegate.call(this,a,b,c,ds);};
G__32024.cljs$lang$maxFixedArity = 3;
G__32024.cljs$lang$applyTo = (function (arglist__32026){
var a = cljs.core.first(arglist__32026);
arglist__32026 = cljs.core.next(arglist__32026);
var b = cljs.core.first(arglist__32026);
arglist__32026 = cljs.core.next(arglist__32026);
var c = cljs.core.first(arglist__32026);
var ds = cljs.core.rest(arglist__32026);
return G__32024__delegate(a,b,c,ds);
});
G__32024.cljs$core$IFn$_invoke$arity$variadic = G__32024__delegate;
return G__32024;
})()
;
G__32023 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32023__2.call(this,a,b);
case 3:
return G__32023__3.call(this,a,b,c);
default:
var G__32027 = null;
if (arguments.length > 3) {
var G__32028__i = 0, G__32028__a = new Array(arguments.length -  3);
while (G__32028__i < G__32028__a.length) {G__32028__a[G__32028__i] = arguments[G__32028__i + 3]; ++G__32028__i;}
G__32027 = new cljs.core.IndexedSeq(G__32028__a,0);
}
return G__32023__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32023.cljs$lang$maxFixedArity = 3;
G__32023.cljs$lang$applyTo = G__32023__4.cljs$lang$applyTo;
G__32023.cljs$core$IFn$_invoke$arity$2 = G__32023__2;
G__32023.cljs$core$IFn$_invoke$arity$3 = G__32023__3;
G__32023.cljs$core$IFn$_invoke$arity$variadic = G__32023__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32023;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__32029 = null;
var G__32029__2 = (function (a,b){
var G__32012 = (((a == null))?x:a);
var G__32013 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32012,G__32013) : f.call(null,G__32012,G__32013));
});
var G__32029__3 = (function (a,b,c){
var G__32014 = (((a == null))?x:a);
var G__32015 = (((b == null))?y:b);
var G__32016 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32014,G__32015,G__32016) : f.call(null,G__32014,G__32015,G__32016));
});
var G__32029__4 = (function() { 
var G__32030__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__32030 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32031__i = 0, G__32031__a = new Array(arguments.length -  3);
while (G__32031__i < G__32031__a.length) {G__32031__a[G__32031__i] = arguments[G__32031__i + 3]; ++G__32031__i;}
  ds = new cljs.core.IndexedSeq(G__32031__a,0);
} 
return G__32030__delegate.call(this,a,b,c,ds);};
G__32030.cljs$lang$maxFixedArity = 3;
G__32030.cljs$lang$applyTo = (function (arglist__32032){
var a = cljs.core.first(arglist__32032);
arglist__32032 = cljs.core.next(arglist__32032);
var b = cljs.core.first(arglist__32032);
arglist__32032 = cljs.core.next(arglist__32032);
var c = cljs.core.first(arglist__32032);
var ds = cljs.core.rest(arglist__32032);
return G__32030__delegate(a,b,c,ds);
});
G__32030.cljs$core$IFn$_invoke$arity$variadic = G__32030__delegate;
return G__32030;
})()
;
G__32029 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32029__2.call(this,a,b);
case 3:
return G__32029__3.call(this,a,b,c);
default:
var G__32033 = null;
if (arguments.length > 3) {
var G__32034__i = 0, G__32034__a = new Array(arguments.length -  3);
while (G__32034__i < G__32034__a.length) {G__32034__a[G__32034__i] = arguments[G__32034__i + 3]; ++G__32034__i;}
G__32033 = new cljs.core.IndexedSeq(G__32034__a,0);
}
return G__32029__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32029.cljs$lang$maxFixedArity = 3;
G__32029.cljs$lang$applyTo = G__32029__4.cljs$lang$applyTo;
G__32029.cljs$core$IFn$_invoke$arity$2 = G__32029__2;
G__32029.cljs$core$IFn$_invoke$arity$3 = G__32029__3;
G__32029.cljs$core$IFn$_invoke$arity$variadic = G__32029__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32029;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__32065 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__32065) : cljs.core.volatile_BANG_.call(null,G__32065));
})();
return ((function (i){
return (function() {
var G__32095 = null;
var G__32095__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32095__1 = (function (result){
var G__32066 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32066) : rf.call(null,G__32066));
});
var G__32095__2 = (function (result,input){
var G__32067 = result;
var G__32068 = (function (){var G__32069 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__32070 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32069,G__32070) : f.call(null,G__32069,G__32070));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32067,G__32068) : rf.call(null,G__32067,G__32068));
});
G__32095 = function(result,input){
switch(arguments.length){
case 0:
return G__32095__0.call(this);
case 1:
return G__32095__1.call(this,result);
case 2:
return G__32095__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32095.cljs$core$IFn$_invoke$arity$0 = G__32095__0;
G__32095.cljs$core$IFn$_invoke$arity$1 = G__32095__1;
G__32095.cljs$core$IFn$_invoke$arity$2 = G__32095__2;
return G__32095;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___32096 = size;
var i_32097 = (0);
while(true){
if((i_32097 < n__4698__auto___32096)){
cljs.core.chunk_append(b,(function (){var G__32091 = (idx + i_32097);
var G__32092 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32097);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32091,G__32092) : f.call(null,G__32091,G__32092));
})());

var G__32098 = (i_32097 + (1));
i_32097 = G__32098;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__32093 = idx;
var G__32094 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32093,G__32094) : f.call(null,G__32093,G__32094));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__32117 = null;
var G__32117__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32117__1 = (function (result){
var G__32111 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32111) : rf.call(null,G__32111));
});
var G__32117__2 = (function (result,input){
var v = (function (){var G__32112 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32112) : f.call(null,G__32112));
})();
if((v == null)){
return result;
} else {
var G__32113 = result;
var G__32114 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32113,G__32114) : rf.call(null,G__32113,G__32114));
}
});
G__32117 = function(result,input){
switch(arguments.length){
case 0:
return G__32117__0.call(this);
case 1:
return G__32117__1.call(this,result);
case 2:
return G__32117__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32117.cljs$core$IFn$_invoke$arity$0 = G__32117__0;
G__32117.cljs$core$IFn$_invoke$arity$1 = G__32117__1;
G__32117.cljs$core$IFn$_invoke$arity$2 = G__32117__2;
return G__32117;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___32118 = size;
var i_32119 = (0);
while(true){
if((i_32119 < n__4698__auto___32118)){
var x_32120 = (function (){var G__32115 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32119);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32115) : f.call(null,G__32115));
})();
if((x_32120 == null)){
} else {
cljs.core.chunk_append(b,x_32120);
}

var G__32121 = (i_32119 + (1));
i_32119 = G__32121;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32116 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32116) : f.call(null,G__32116));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32122 = this$__$1;
return goog.getUid(G__32122);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__32123 = cljs.core.seq(self__.watches);
var chunk__32124 = null;
var count__32125 = (0);
var i__32126 = (0);
while(true){
if((i__32126 < count__32125)){
var vec__32127 = chunk__32124.cljs$core$IIndexed$_nth$arity$2(null,i__32126);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32127,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32127,(1),null);
var G__32128_32137 = key;
var G__32129_32138 = this$__$1;
var G__32130_32139 = oldval;
var G__32131_32140 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32128_32137,G__32129_32138,G__32130_32139,G__32131_32140) : f.call(null,G__32128_32137,G__32129_32138,G__32130_32139,G__32131_32140));

var G__32141 = seq__32123;
var G__32142 = chunk__32124;
var G__32143 = count__32125;
var G__32144 = (i__32126 + (1));
seq__32123 = G__32141;
chunk__32124 = G__32142;
count__32125 = G__32143;
i__32126 = G__32144;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32123);
if(temp__4126__auto__){
var seq__32123__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32123__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__32123__$1);
var G__32145 = cljs.core.chunk_rest(seq__32123__$1);
var G__32146 = c__4598__auto__;
var G__32147 = cljs.core.count(c__4598__auto__);
var G__32148 = (0);
seq__32123 = G__32145;
chunk__32124 = G__32146;
count__32125 = G__32147;
i__32126 = G__32148;
continue;
} else {
var vec__32132 = cljs.core.first(seq__32123__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32132,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32132,(1),null);
var G__32133_32149 = key;
var G__32134_32150 = this$__$1;
var G__32135_32151 = oldval;
var G__32136_32152 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32133_32149,G__32134_32150,G__32135_32151,G__32136_32152) : f.call(null,G__32133_32149,G__32134_32150,G__32135_32151,G__32136_32152));

var G__32153 = cljs.core.next(seq__32123__$1);
var G__32154 = null;
var G__32155 = (0);
var G__32156 = (0);
seq__32123 = G__32153;
chunk__32124 = G__32154;
count__32125 = G__32155;
i__32126 = G__32156;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__32160__delegate = function (x,p__32157){
var map__32159 = p__32157;
var map__32159__$1 = ((cljs.core.seq_QMARK_(map__32159))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32159):map__32159);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32159__$1,cljs.core.constant$keyword$77);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32159__$1,cljs.core.constant$keyword$67);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__32160 = function (x,var_args){
var p__32157 = null;
if (arguments.length > 1) {
var G__32161__i = 0, G__32161__a = new Array(arguments.length -  1);
while (G__32161__i < G__32161__a.length) {G__32161__a[G__32161__i] = arguments[G__32161__i + 1]; ++G__32161__i;}
  p__32157 = new cljs.core.IndexedSeq(G__32161__a,0);
} 
return G__32160__delegate.call(this,x,p__32157);};
G__32160.cljs$lang$maxFixedArity = 1;
G__32160.cljs$lang$applyTo = (function (arglist__32162){
var x = cljs.core.first(arglist__32162);
var p__32157 = cljs.core.rest(arglist__32162);
return G__32160__delegate(x,p__32157);
});
G__32160.cljs$core$IFn$_invoke$arity$variadic = G__32160__delegate;
return G__32160;
})()
;
atom = function(x,var_args){
var p__32157 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__32163 = null;
if (arguments.length > 1) {
var G__32164__i = 0, G__32164__a = new Array(arguments.length -  1);
while (G__32164__i < G__32164__a.length) {G__32164__a[G__32164__i] = arguments[G__32164__i + 1]; ++G__32164__i;}
G__32163 = new cljs.core.IndexedSeq(G__32164__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__32167 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__32167) : validate.call(null,G__32167));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__32168 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__32168) : cljs.core.pr_str.call(null,G__32168));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32175 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32175) : f.call(null,G__32175));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32176 = a.state;
var G__32177 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32176,G__32177) : f.call(null,G__32176,G__32177));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32178 = a.state;
var G__32179 = x;
var G__32180 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32178,G__32179,G__32180) : f.call(null,G__32178,G__32179,G__32180));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__32181__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__32181 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__32182__i = 0, G__32182__a = new Array(arguments.length -  4);
while (G__32182__i < G__32182__a.length) {G__32182__a[G__32182__i] = arguments[G__32182__i + 4]; ++G__32182__i;}
  more = new cljs.core.IndexedSeq(G__32182__a,0);
} 
return G__32181__delegate.call(this,a,f,x,y,more);};
G__32181.cljs$lang$maxFixedArity = 4;
G__32181.cljs$lang$applyTo = (function (arglist__32183){
var a = cljs.core.first(arglist__32183);
arglist__32183 = cljs.core.next(arglist__32183);
var f = cljs.core.first(arglist__32183);
arglist__32183 = cljs.core.next(arglist__32183);
var x = cljs.core.first(arglist__32183);
arglist__32183 = cljs.core.next(arglist__32183);
var y = cljs.core.first(arglist__32183);
var more = cljs.core.rest(arglist__32183);
return G__32181__delegate(a,f,x,y,more);
});
G__32181.cljs$core$IFn$_invoke$arity$variadic = G__32181__delegate;
return G__32181;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__32184 = null;
if (arguments.length > 4) {
var G__32185__i = 0, G__32185__a = new Array(arguments.length -  4);
while (G__32185__i < G__32185__a.length) {G__32185__a[G__32185__i] = arguments[G__32185__i + 4]; ++G__32185__i;}
G__32184 = new cljs.core.IndexedSeq(G__32185__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__32184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__32252 = null;
var G__32252__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32252__1 = (function (result){
var G__32219 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32219) : rf.call(null,G__32219));
});
var G__32252__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__32220 = i;
var G__32221 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32220,G__32221) : f.call(null,G__32220,G__32221));
})();
if((v == null)){
return result;
} else {
var G__32222 = result;
var G__32223 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32222,G__32223) : rf.call(null,G__32222,G__32223));
}
});
G__32252 = function(result,input){
switch(arguments.length){
case 0:
return G__32252__0.call(this);
case 1:
return G__32252__1.call(this,result);
case 2:
return G__32252__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32252.cljs$core$IFn$_invoke$arity$0 = G__32252__0;
G__32252.cljs$core$IFn$_invoke$arity$1 = G__32252__1;
G__32252.cljs$core$IFn$_invoke$arity$2 = G__32252__2;
return G__32252;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___32253 = size;
var i_32254 = (0);
while(true){
if((i_32254 < n__4698__auto___32253)){
var x_32255 = (function (){var G__32248 = (idx + i_32254);
var G__32249 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32254);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32248,G__32249) : f.call(null,G__32248,G__32249));
})();
if((x_32255 == null)){
} else {
cljs.core.chunk_append(b,x_32255);
}

var G__32256 = (i_32254 + (1));
i_32254 = G__32256;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32250 = idx;
var G__32251 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32250,G__32251) : f.call(null,G__32250,G__32251));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__32470 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32470) : p.call(null,G__32470));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32472 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32472) : p.call(null,G__32472));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__32473 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32473) : p.call(null,G__32473));
} else {
return and__3799__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32475 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32475) : p.call(null,G__32475));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32477 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32477) : p.call(null,G__32477));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__32478 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32478) : p.call(null,G__32478));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__32647__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__32647 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32648__i = 0, G__32648__a = new Array(arguments.length -  3);
while (G__32648__i < G__32648__a.length) {G__32648__a[G__32648__i] = arguments[G__32648__i + 3]; ++G__32648__i;}
  args = new cljs.core.IndexedSeq(G__32648__a,0);
} 
return G__32647__delegate.call(this,x,y,z,args);};
G__32647.cljs$lang$maxFixedArity = 3;
G__32647.cljs$lang$applyTo = (function (arglist__32649){
var x = cljs.core.first(arglist__32649);
arglist__32649 = cljs.core.next(arglist__32649);
var y = cljs.core.first(arglist__32649);
arglist__32649 = cljs.core.next(arglist__32649);
var z = cljs.core.first(arglist__32649);
var args = cljs.core.rest(arglist__32649);
return G__32647__delegate(x,y,z,args);
});
G__32647.cljs$core$IFn$_invoke$arity$variadic = G__32647__delegate;
return G__32647;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__32650 = null;
if (arguments.length > 3) {
var G__32651__i = 0, G__32651__a = new Array(arguments.length -  3);
while (G__32651__i < G__32651__a.length) {G__32651__a[G__32651__i] = arguments[G__32651__i + 3]; ++G__32651__i;}
G__32650 = new cljs.core.IndexedSeq(G__32651__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32510 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32510) : p1.call(null,G__32510));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__32511 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32511) : p2.call(null,G__32511));
} else {
return and__3799__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32513 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32513) : p1.call(null,G__32513));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32515 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32515) : p1.call(null,G__32515));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__32517 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32517) : p2.call(null,G__32517));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var G__32518 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32518) : p2.call(null,G__32518));
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32520 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32520) : p1.call(null,G__32520));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32522 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32522) : p1.call(null,G__32522));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__32524 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32524) : p1.call(null,G__32524));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__32526 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32526) : p2.call(null,G__32526));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__32528 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32528) : p2.call(null,G__32528));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__32529 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32529) : p2.call(null,G__32529));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__32652__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32257_SHARP_){
var and__3799__auto__ = (function (){var G__32534 = p1__32257_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32534) : p1.call(null,G__32534));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__32535 = p1__32257_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32535) : p2.call(null,G__32535));
} else {
return and__3799__auto__;
}
}),args)));
};
var G__32652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32653__i = 0, G__32653__a = new Array(arguments.length -  3);
while (G__32653__i < G__32653__a.length) {G__32653__a[G__32653__i] = arguments[G__32653__i + 3]; ++G__32653__i;}
  args = new cljs.core.IndexedSeq(G__32653__a,0);
} 
return G__32652__delegate.call(this,x,y,z,args);};
G__32652.cljs$lang$maxFixedArity = 3;
G__32652.cljs$lang$applyTo = (function (arglist__32654){
var x = cljs.core.first(arglist__32654);
arglist__32654 = cljs.core.next(arglist__32654);
var y = cljs.core.first(arglist__32654);
arglist__32654 = cljs.core.next(arglist__32654);
var z = cljs.core.first(arglist__32654);
var args = cljs.core.rest(arglist__32654);
return G__32652__delegate(x,y,z,args);
});
G__32652.cljs$core$IFn$_invoke$arity$variadic = G__32652__delegate;
return G__32652;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__32655 = null;
if (arguments.length > 3) {
var G__32656__i = 0, G__32656__a = new Array(arguments.length -  3);
while (G__32656__i < G__32656__a.length) {G__32656__a[G__32656__i] = arguments[G__32656__i + 3]; ++G__32656__i;}
G__32655 = new cljs.core.IndexedSeq(G__32656__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32581 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32581) : p1.call(null,G__32581));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32583 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32583) : p2.call(null,G__32583));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__32584 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32584) : p3.call(null,G__32584));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32586) : p1.call(null,G__32586));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32588) : p2.call(null,G__32588));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__32590 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32590) : p3.call(null,G__32590));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__32592 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32592) : p1.call(null,G__32592));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__32594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32594) : p2.call(null,G__32594));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__32595 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32595) : p3.call(null,G__32595));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__32597 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32597) : p1.call(null,G__32597));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32599 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32599) : p2.call(null,G__32599));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__32601 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32601) : p3.call(null,G__32601));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__32603 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32603) : p1.call(null,G__32603));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__32605 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32605) : p2.call(null,G__32605));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var and__3799__auto____$5 = (function (){var G__32607 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32607) : p3.call(null,G__32607));
})();
if(cljs.core.truth_(and__3799__auto____$5)){
var and__3799__auto____$6 = (function (){var G__32609 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32609) : p1.call(null,G__32609));
})();
if(cljs.core.truth_(and__3799__auto____$6)){
var and__3799__auto____$7 = (function (){var G__32611 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32611) : p2.call(null,G__32611));
})();
if(cljs.core.truth_(and__3799__auto____$7)){
var G__32612 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32612) : p3.call(null,G__32612));
} else {
return and__3799__auto____$7;
}
} else {
return and__3799__auto____$6;
}
} else {
return and__3799__auto____$5;
}
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__32657__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32258_SHARP_){
var and__3799__auto__ = (function (){var G__32619 = p1__32258_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32619) : p1.call(null,G__32619));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32621 = p1__32258_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32621) : p2.call(null,G__32621));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__32622 = p1__32258_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32622) : p3.call(null,G__32622));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}),args)));
};
var G__32657 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32658__i = 0, G__32658__a = new Array(arguments.length -  3);
while (G__32658__i < G__32658__a.length) {G__32658__a[G__32658__i] = arguments[G__32658__i + 3]; ++G__32658__i;}
  args = new cljs.core.IndexedSeq(G__32658__a,0);
} 
return G__32657__delegate.call(this,x,y,z,args);};
G__32657.cljs$lang$maxFixedArity = 3;
G__32657.cljs$lang$applyTo = (function (arglist__32659){
var x = cljs.core.first(arglist__32659);
arglist__32659 = cljs.core.next(arglist__32659);
var y = cljs.core.first(arglist__32659);
arglist__32659 = cljs.core.next(arglist__32659);
var z = cljs.core.first(arglist__32659);
var args = cljs.core.rest(arglist__32659);
return G__32657__delegate(x,y,z,args);
});
G__32657.cljs$core$IFn$_invoke$arity$variadic = G__32657__delegate;
return G__32657;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__32660 = null;
if (arguments.length > 3) {
var G__32661__i = 0, G__32661__a = new Array(arguments.length -  3);
while (G__32661__i < G__32661__a.length) {G__32661__a[G__32661__i] = arguments[G__32661__i + 3]; ++G__32661__i;}
G__32660 = new cljs.core.IndexedSeq(G__32661__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__32662__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32259_SHARP_){
var G__32638 = x;
return (p1__32259_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32259_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32638) : p1__32259_SHARP_.call(null,G__32638));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32260_SHARP_){
var and__3799__auto__ = (function (){var G__32640 = x;
return (p1__32260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32640) : p1__32260_SHARP_.call(null,G__32640));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__32641 = y;
return (p1__32260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32641) : p1__32260_SHARP_.call(null,G__32641));
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32261_SHARP_){
var and__3799__auto__ = (function (){var G__32643 = x;
return (p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32643) : p1__32261_SHARP_.call(null,G__32643));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__32645 = y;
return (p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32645) : p1__32261_SHARP_.call(null,G__32645));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__32646 = z;
return (p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32646) : p1__32261_SHARP_.call(null,G__32646));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__32663__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32262_SHARP_){
return cljs.core.every_QMARK_(p1__32262_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__32663 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32664__i = 0, G__32664__a = new Array(arguments.length -  3);
while (G__32664__i < G__32664__a.length) {G__32664__a[G__32664__i] = arguments[G__32664__i + 3]; ++G__32664__i;}
  args = new cljs.core.IndexedSeq(G__32664__a,0);
} 
return G__32663__delegate.call(this,x,y,z,args);};
G__32663.cljs$lang$maxFixedArity = 3;
G__32663.cljs$lang$applyTo = (function (arglist__32665){
var x = cljs.core.first(arglist__32665);
arglist__32665 = cljs.core.next(arglist__32665);
var y = cljs.core.first(arglist__32665);
arglist__32665 = cljs.core.next(arglist__32665);
var z = cljs.core.first(arglist__32665);
var args = cljs.core.rest(arglist__32665);
return G__32663__delegate(x,y,z,args);
});
G__32663.cljs$core$IFn$_invoke$arity$variadic = G__32663__delegate;
return G__32663;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__32666 = null;
if (arguments.length > 3) {
var G__32667__i = 0, G__32667__a = new Array(arguments.length -  3);
while (G__32667__i < G__32667__a.length) {G__32667__a[G__32667__i] = arguments[G__32667__i + 3]; ++G__32667__i;}
G__32666 = new cljs.core.IndexedSeq(G__32667__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__32662 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__32668__i = 0, G__32668__a = new Array(arguments.length -  3);
while (G__32668__i < G__32668__a.length) {G__32668__a[G__32668__i] = arguments[G__32668__i + 3]; ++G__32668__i;}
  ps = new cljs.core.IndexedSeq(G__32668__a,0);
} 
return G__32662__delegate.call(this,p1,p2,p3,ps);};
G__32662.cljs$lang$maxFixedArity = 3;
G__32662.cljs$lang$applyTo = (function (arglist__32669){
var p1 = cljs.core.first(arglist__32669);
arglist__32669 = cljs.core.next(arglist__32669);
var p2 = cljs.core.first(arglist__32669);
arglist__32669 = cljs.core.next(arglist__32669);
var p3 = cljs.core.first(arglist__32669);
var ps = cljs.core.rest(arglist__32669);
return G__32662__delegate(p1,p2,p3,ps);
});
G__32662.cljs$core$IFn$_invoke$arity$variadic = G__32662__delegate;
return G__32662;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__32670 = null;
if (arguments.length > 3) {
var G__32671__i = 0, G__32671__a = new Array(arguments.length -  3);
while (G__32671__i < G__32671__a.length) {G__32671__a[G__32671__i] = arguments[G__32671__i + 3]; ++G__32671__i;}
G__32670 = new cljs.core.IndexedSeq(G__32671__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__32670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__32877 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32877) : p.call(null,G__32877));
});
var sp1__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__32879 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32879) : p.call(null,G__32879));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__32880 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32880) : p.call(null,G__32880));
}
});
var sp1__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__32882 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32882) : p.call(null,G__32882));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__32884 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32884) : p.call(null,G__32884));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__32885 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32885) : p.call(null,G__32885));
}
}
});
var sp1__4 = (function() { 
var G__33046__delegate = function (x,y,z,args){
var or__3811__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__33046 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33047__i = 0, G__33047__a = new Array(arguments.length -  3);
while (G__33047__i < G__33047__a.length) {G__33047__a[G__33047__i] = arguments[G__33047__i + 3]; ++G__33047__i;}
  args = new cljs.core.IndexedSeq(G__33047__a,0);
} 
return G__33046__delegate.call(this,x,y,z,args);};
G__33046.cljs$lang$maxFixedArity = 3;
G__33046.cljs$lang$applyTo = (function (arglist__33048){
var x = cljs.core.first(arglist__33048);
arglist__33048 = cljs.core.next(arglist__33048);
var y = cljs.core.first(arglist__33048);
arglist__33048 = cljs.core.next(arglist__33048);
var z = cljs.core.first(arglist__33048);
var args = cljs.core.rest(arglist__33048);
return G__33046__delegate(x,y,z,args);
});
G__33046.cljs$core$IFn$_invoke$arity$variadic = G__33046__delegate;
return G__33046;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__33049 = null;
if (arguments.length > 3) {
var G__33050__i = 0, G__33050__a = new Array(arguments.length -  3);
while (G__33050__i < G__33050__a.length) {G__33050__a[G__33050__i] = arguments[G__33050__i + 3]; ++G__33050__i;}
G__33049 = new cljs.core.IndexedSeq(G__33050__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3811__auto__ = (function (){var G__32917 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32917) : p1.call(null,G__32917));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__32918 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32918) : p2.call(null,G__32918));
}
});
var sp2__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__32920 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32920) : p1.call(null,G__32920));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__32922 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32922) : p1.call(null,G__32922));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__32924 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32924) : p2.call(null,G__32924));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__32925 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32925) : p2.call(null,G__32925));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__32927 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32927) : p1.call(null,G__32927));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__32929 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32929) : p1.call(null,G__32929));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__32931 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32931) : p1.call(null,G__32931));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__32933 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32933) : p2.call(null,G__32933));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__32935 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32935) : p2.call(null,G__32935));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__32936 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32936) : p2.call(null,G__32936));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__33051__delegate = function (x,y,z,args){
var or__3811__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__32672_SHARP_){
var or__3811__auto____$1 = (function (){var G__32938 = p1__32672_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32938) : p1.call(null,G__32938));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__32939 = p1__32672_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32939) : p2.call(null,G__32939));
}
});})(or__3811__auto__))
,args);
}
};
var G__33051 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33052__i = 0, G__33052__a = new Array(arguments.length -  3);
while (G__33052__i < G__33052__a.length) {G__33052__a[G__33052__i] = arguments[G__33052__i + 3]; ++G__33052__i;}
  args = new cljs.core.IndexedSeq(G__33052__a,0);
} 
return G__33051__delegate.call(this,x,y,z,args);};
G__33051.cljs$lang$maxFixedArity = 3;
G__33051.cljs$lang$applyTo = (function (arglist__33053){
var x = cljs.core.first(arglist__33053);
arglist__33053 = cljs.core.next(arglist__33053);
var y = cljs.core.first(arglist__33053);
arglist__33053 = cljs.core.next(arglist__33053);
var z = cljs.core.first(arglist__33053);
var args = cljs.core.rest(arglist__33053);
return G__33051__delegate(x,y,z,args);
});
G__33051.cljs$core$IFn$_invoke$arity$variadic = G__33051__delegate;
return G__33051;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__33054 = null;
if (arguments.length > 3) {
var G__33055__i = 0, G__33055__a = new Array(arguments.length -  3);
while (G__33055__i < G__33055__a.length) {G__33055__a[G__33055__i] = arguments[G__33055__i + 3]; ++G__33055__i;}
G__33054 = new cljs.core.IndexedSeq(G__33055__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3811__auto__ = (function (){var G__32985 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32985) : p1.call(null,G__32985));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__32987 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32987) : p2.call(null,G__32987));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__32988 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32988) : p3.call(null,G__32988));
}
}
});
var sp3__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__32990 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32990) : p1.call(null,G__32990));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__32992 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32992) : p2.call(null,G__32992));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__32994 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32994) : p3.call(null,G__32994));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__32996 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32996) : p1.call(null,G__32996));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__32998 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32998) : p2.call(null,G__32998));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__32999 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32999) : p3.call(null,G__32999));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__33001 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33001) : p1.call(null,G__33001));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__33003 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33003) : p2.call(null,G__33003));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__33005 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33005) : p3.call(null,G__33005));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__33007 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33007) : p1.call(null,G__33007));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__33009 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33009) : p2.call(null,G__33009));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var or__3811__auto____$5 = (function (){var G__33011 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33011) : p3.call(null,G__33011));
})();
if(cljs.core.truth_(or__3811__auto____$5)){
return or__3811__auto____$5;
} else {
var or__3811__auto____$6 = (function (){var G__33013 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33013) : p1.call(null,G__33013));
})();
if(cljs.core.truth_(or__3811__auto____$6)){
return or__3811__auto____$6;
} else {
var or__3811__auto____$7 = (function (){var G__33015 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33015) : p2.call(null,G__33015));
})();
if(cljs.core.truth_(or__3811__auto____$7)){
return or__3811__auto____$7;
} else {
var G__33016 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33016) : p3.call(null,G__33016));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__33056__delegate = function (x,y,z,args){
var or__3811__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__32673_SHARP_){
var or__3811__auto____$1 = (function (){var G__33018 = p1__32673_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33018) : p1.call(null,G__33018));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__33020 = p1__32673_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33020) : p2.call(null,G__33020));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__33021 = p1__32673_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33021) : p3.call(null,G__33021));
}
}
});})(or__3811__auto__))
,args);
}
};
var G__33056 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33057__i = 0, G__33057__a = new Array(arguments.length -  3);
while (G__33057__i < G__33057__a.length) {G__33057__a[G__33057__i] = arguments[G__33057__i + 3]; ++G__33057__i;}
  args = new cljs.core.IndexedSeq(G__33057__a,0);
} 
return G__33056__delegate.call(this,x,y,z,args);};
G__33056.cljs$lang$maxFixedArity = 3;
G__33056.cljs$lang$applyTo = (function (arglist__33058){
var x = cljs.core.first(arglist__33058);
arglist__33058 = cljs.core.next(arglist__33058);
var y = cljs.core.first(arglist__33058);
arglist__33058 = cljs.core.next(arglist__33058);
var z = cljs.core.first(arglist__33058);
var args = cljs.core.rest(arglist__33058);
return G__33056__delegate(x,y,z,args);
});
G__33056.cljs$core$IFn$_invoke$arity$variadic = G__33056__delegate;
return G__33056;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__33059 = null;
if (arguments.length > 3) {
var G__33060__i = 0, G__33060__a = new Array(arguments.length -  3);
while (G__33060__i < G__33060__a.length) {G__33060__a[G__33060__i] = arguments[G__33060__i + 3]; ++G__33060__i;}
G__33059 = new cljs.core.IndexedSeq(G__33060__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__33061__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__32674_SHARP_){
var G__33037 = x;
return (p1__32674_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32674_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33037) : p1__32674_SHARP_.call(null,G__33037));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__32675_SHARP_){
var or__3811__auto__ = (function (){var G__33039 = x;
return (p1__32675_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32675_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33039) : p1__32675_SHARP_.call(null,G__33039));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__33040 = y;
return (p1__32675_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32675_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33040) : p1__32675_SHARP_.call(null,G__33040));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__32676_SHARP_){
var or__3811__auto__ = (function (){var G__33042 = x;
return (p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33042) : p1__32676_SHARP_.call(null,G__33042));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__33044 = y;
return (p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33044) : p1__32676_SHARP_.call(null,G__33044));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__33045 = z;
return (p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32676_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33045) : p1__32676_SHARP_.call(null,G__33045));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__33062__delegate = function (x,y,z,args){
var or__3811__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__,ps__$1){
return (function (p1__32677_SHARP_){
return cljs.core.some(p1__32677_SHARP_,args);
});})(or__3811__auto__,ps__$1))
,ps__$1);
}
};
var G__33062 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33063__i = 0, G__33063__a = new Array(arguments.length -  3);
while (G__33063__i < G__33063__a.length) {G__33063__a[G__33063__i] = arguments[G__33063__i + 3]; ++G__33063__i;}
  args = new cljs.core.IndexedSeq(G__33063__a,0);
} 
return G__33062__delegate.call(this,x,y,z,args);};
G__33062.cljs$lang$maxFixedArity = 3;
G__33062.cljs$lang$applyTo = (function (arglist__33064){
var x = cljs.core.first(arglist__33064);
arglist__33064 = cljs.core.next(arglist__33064);
var y = cljs.core.first(arglist__33064);
arglist__33064 = cljs.core.next(arglist__33064);
var z = cljs.core.first(arglist__33064);
var args = cljs.core.rest(arglist__33064);
return G__33062__delegate(x,y,z,args);
});
G__33062.cljs$core$IFn$_invoke$arity$variadic = G__33062__delegate;
return G__33062;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__33065 = null;
if (arguments.length > 3) {
var G__33066__i = 0, G__33066__a = new Array(arguments.length -  3);
while (G__33066__i < G__33066__a.length) {G__33066__a[G__33066__i] = arguments[G__33066__i + 3]; ++G__33066__i;}
G__33065 = new cljs.core.IndexedSeq(G__33066__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__33061 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__33067__i = 0, G__33067__a = new Array(arguments.length -  3);
while (G__33067__i < G__33067__a.length) {G__33067__a[G__33067__i] = arguments[G__33067__i + 3]; ++G__33067__i;}
  ps = new cljs.core.IndexedSeq(G__33067__a,0);
} 
return G__33061__delegate.call(this,p1,p2,p3,ps);};
G__33061.cljs$lang$maxFixedArity = 3;
G__33061.cljs$lang$applyTo = (function (arglist__33068){
var p1 = cljs.core.first(arglist__33068);
arglist__33068 = cljs.core.next(arglist__33068);
var p2 = cljs.core.first(arglist__33068);
arglist__33068 = cljs.core.next(arglist__33068);
var p3 = cljs.core.first(arglist__33068);
var ps = cljs.core.rest(arglist__33068);
return G__33061__delegate(p1,p2,p3,ps);
});
G__33061.cljs$core$IFn$_invoke$arity$variadic = G__33061__delegate;
return G__33061;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__33069 = null;
if (arguments.length > 3) {
var G__33070__i = 0, G__33070__a = new Array(arguments.length -  3);
while (G__33070__i < G__33070__a.length) {G__33070__a[G__33070__i] = arguments[G__33070__i + 3]; ++G__33070__i;}
G__33069 = new cljs.core.IndexedSeq(G__33070__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__33069);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__33125 = null;
var G__33125__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33125__1 = (function (result){
var G__33111 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33111) : rf.call(null,G__33111));
});
var G__33125__2 = (function (result,input){
var G__33112 = result;
var G__33113 = (function (){var G__33114 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33114) : f.call(null,G__33114));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33112,G__33113) : rf.call(null,G__33112,G__33113));
});
var G__33125__3 = (function() { 
var G__33126__delegate = function (result,input,inputs){
var G__33115 = result;
var G__33116 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33115,G__33116) : rf.call(null,G__33115,G__33116));
};
var G__33126 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__33127__i = 0, G__33127__a = new Array(arguments.length -  2);
while (G__33127__i < G__33127__a.length) {G__33127__a[G__33127__i] = arguments[G__33127__i + 2]; ++G__33127__i;}
  inputs = new cljs.core.IndexedSeq(G__33127__a,0);
} 
return G__33126__delegate.call(this,result,input,inputs);};
G__33126.cljs$lang$maxFixedArity = 2;
G__33126.cljs$lang$applyTo = (function (arglist__33128){
var result = cljs.core.first(arglist__33128);
arglist__33128 = cljs.core.next(arglist__33128);
var input = cljs.core.first(arglist__33128);
var inputs = cljs.core.rest(arglist__33128);
return G__33126__delegate(result,input,inputs);
});
G__33126.cljs$core$IFn$_invoke$arity$variadic = G__33126__delegate;
return G__33126;
})()
;
G__33125 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__33125__0.call(this);
case 1:
return G__33125__1.call(this,result);
case 2:
return G__33125__2.call(this,result,input);
default:
var G__33129 = null;
if (arguments.length > 2) {
var G__33130__i = 0, G__33130__a = new Array(arguments.length -  2);
while (G__33130__i < G__33130__a.length) {G__33130__a[G__33130__i] = arguments[G__33130__i + 2]; ++G__33130__i;}
G__33129 = new cljs.core.IndexedSeq(G__33130__a,0);
}
return G__33125__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__33129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33125.cljs$lang$maxFixedArity = 2;
G__33125.cljs$lang$applyTo = G__33125__3.cljs$lang$applyTo;
G__33125.cljs$core$IFn$_invoke$arity$0 = G__33125__0;
G__33125.cljs$core$IFn$_invoke$arity$1 = G__33125__1;
G__33125.cljs$core$IFn$_invoke$arity$2 = G__33125__2;
G__33125.cljs$core$IFn$_invoke$arity$variadic = G__33125__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33125;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___33131 = size;
var i_33132 = (0);
while(true){
if((i_33132 < n__4698__auto___33131)){
cljs.core.chunk_append(b,(function (){var G__33117 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33132);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33117) : f.call(null,G__33117));
})());

var G__33133 = (i_33132 + (1));
i_33132 = G__33133;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33118 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33118) : f.call(null,G__33118));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__33119 = cljs.core.first(s1);
var G__33120 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33119,G__33120) : f.call(null,G__33119,G__33120));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__33121 = cljs.core.first(s1);
var G__33122 = cljs.core.first(s2);
var G__33123 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33121,G__33122,G__33123) : f.call(null,G__33121,G__33122,G__33123));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__33134__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__33071_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__33071_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__33134 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33135__i = 0, G__33135__a = new Array(arguments.length -  4);
while (G__33135__i < G__33135__a.length) {G__33135__a[G__33135__i] = arguments[G__33135__i + 4]; ++G__33135__i;}
  colls = new cljs.core.IndexedSeq(G__33135__a,0);
} 
return G__33134__delegate.call(this,f,c1,c2,c3,colls);};
G__33134.cljs$lang$maxFixedArity = 4;
G__33134.cljs$lang$applyTo = (function (arglist__33136){
var f = cljs.core.first(arglist__33136);
arglist__33136 = cljs.core.next(arglist__33136);
var c1 = cljs.core.first(arglist__33136);
arglist__33136 = cljs.core.next(arglist__33136);
var c2 = cljs.core.first(arglist__33136);
arglist__33136 = cljs.core.next(arglist__33136);
var c3 = cljs.core.first(arglist__33136);
var colls = cljs.core.rest(arglist__33136);
return G__33134__delegate(f,c1,c2,c3,colls);
});
G__33134.cljs$core$IFn$_invoke$arity$variadic = G__33134__delegate;
return G__33134;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__33137 = null;
if (arguments.length > 4) {
var G__33138__i = 0, G__33138__a = new Array(arguments.length -  4);
while (G__33138__i < G__33138__a.length) {G__33138__a[G__33138__i] = arguments[G__33138__i + 4]; ++G__33138__i;}
G__33137 = new cljs.core.IndexedSeq(G__33138__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33147 = null;
var G__33147__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33147__1 = (function (result){
var G__33144 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33144) : rf.call(null,G__33144));
});
var G__33147__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__33145 = result;
var G__33146 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33145,G__33146) : rf.call(null,G__33145,G__33146));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__33147 = function(result,input){
switch(arguments.length){
case 0:
return G__33147__0.call(this);
case 1:
return G__33147__1.call(this,result);
case 2:
return G__33147__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33147.cljs$core$IFn$_invoke$arity$0 = G__33147__0;
G__33147.cljs$core$IFn$_invoke$arity$1 = G__33147__1;
G__33147.cljs$core$IFn$_invoke$arity$2 = G__33147__2;
return G__33147;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33154 = null;
var G__33154__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33154__1 = (function (result){
var G__33151 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33151) : rf.call(null,G__33151));
});
var G__33154__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__33152 = result;
var G__33153 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33152,G__33153) : rf.call(null,G__33152,G__33153));
}
});
G__33154 = function(result,input){
switch(arguments.length){
case 0:
return G__33154__0.call(this);
case 1:
return G__33154__1.call(this,result);
case 2:
return G__33154__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33154.cljs$core$IFn$_invoke$arity$0 = G__33154__0;
G__33154.cljs$core$IFn$_invoke$arity$1 = G__33154__1;
G__33154.cljs$core$IFn$_invoke$arity$2 = G__33154__2;
return G__33154;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__33155 = (n__$1 - (1));
var G__33156 = cljs.core.rest(s);
n__$1 = G__33155;
coll__$1 = G__33156;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__33159 = cljs.core.next(s);
var G__33160 = cljs.core.next(lead);
s = G__33159;
lead = G__33160;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__33173 = null;
var G__33173__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33173__1 = (function (result){
var G__33167 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33167) : rf.call(null,G__33167));
});
var G__33173__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3799__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3799__auto__)){
var G__33168 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33168) : pred.call(null,G__33168));
} else {
return and__3799__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__33169 = result;
var G__33170 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33169,G__33170) : rf.call(null,G__33169,G__33170));
}
});
G__33173 = function(result,input){
switch(arguments.length){
case 0:
return G__33173__0.call(this);
case 1:
return G__33173__1.call(this,result);
case 2:
return G__33173__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33173.cljs$core$IFn$_invoke$arity$0 = G__33173__0;
G__33173.cljs$core$IFn$_invoke$arity$1 = G__33173__1;
G__33173.cljs$core$IFn$_invoke$arity$2 = G__33173__2;
return G__33173;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3799__auto__ = s;
if(and__3799__auto__){
var G__33172 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__33172) : pred__$1.call(null,G__33172));
} else {
return and__3799__auto__;
}
})())){
var G__33174 = pred__$1;
var G__33175 = cljs.core.rest(s);
pred__$1 = G__33174;
coll__$1 = G__33175;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__33184 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33184) : f.call(null,G__33184));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__33187__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__33187 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33188__i = 0, G__33188__a = new Array(arguments.length -  2);
while (G__33188__i < G__33188__a.length) {G__33188__a[G__33188__i] = arguments[G__33188__i + 2]; ++G__33188__i;}
  colls = new cljs.core.IndexedSeq(G__33188__a,0);
} 
return G__33187__delegate.call(this,c1,c2,colls);};
G__33187.cljs$lang$maxFixedArity = 2;
G__33187.cljs$lang$applyTo = (function (arglist__33189){
var c1 = cljs.core.first(arglist__33189);
arglist__33189 = cljs.core.next(arglist__33189);
var c2 = cljs.core.first(arglist__33189);
var colls = cljs.core.rest(arglist__33189);
return G__33187__delegate(c1,c2,colls);
});
G__33187.cljs$core$IFn$_invoke$arity$variadic = G__33187__delegate;
return G__33187;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__33190 = null;
if (arguments.length > 2) {
var G__33191__i = 0, G__33191__a = new Array(arguments.length -  2);
while (G__33191__i < G__33191__a.length) {G__33191__a[G__33191__i] = arguments[G__33191__i + 2]; ++G__33191__i;}
G__33190 = new cljs.core.IndexedSeq(G__33191__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__33190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__33206 = null;
var G__33206__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33206__1 = (function (result){
var G__33199 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33199) : rf.call(null,G__33199));
});
var G__33206__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__33200 = result;
var G__33201 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33200,G__33201) : rf.call(null,G__33200,G__33201));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__33202 = sepr;
var G__33203 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33202,G__33203) : rf.call(null,G__33202,G__33203));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__33204 = result;
var G__33205 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33204,G__33205) : rf.call(null,G__33204,G__33205));
}
});
G__33206 = function(result,input){
switch(arguments.length){
case 0:
return G__33206__0.call(this);
case 1:
return G__33206__1.call(this,result);
case 2:
return G__33206__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33206.cljs$core$IFn$_invoke$arity$0 = G__33206__0;
G__33206.cljs$core$IFn$_invoke$arity$1 = G__33206__1;
G__33206.cljs$core$IFn$_invoke$arity$2 = G__33206__2;
return G__33206;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__33215__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__33215 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__33216__i = 0, G__33216__a = new Array(arguments.length -  1);
while (G__33216__i < G__33216__a.length) {G__33216__a[G__33216__i] = arguments[G__33216__i + 1]; ++G__33216__i;}
  colls = new cljs.core.IndexedSeq(G__33216__a,0);
} 
return G__33215__delegate.call(this,f,colls);};
G__33215.cljs$lang$maxFixedArity = 1;
G__33215.cljs$lang$applyTo = (function (arglist__33217){
var f = cljs.core.first(arglist__33217);
var colls = cljs.core.rest(arglist__33217);
return G__33215__delegate(f,colls);
});
G__33215.cljs$core$IFn$_invoke$arity$variadic = G__33215__delegate;
return G__33215;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__33218 = null;
if (arguments.length > 1) {
var G__33219__i = 0, G__33219__a = new Array(arguments.length -  1);
while (G__33219__i < G__33219__a.length) {G__33219__a[G__33219__i] = arguments[G__33219__i + 1]; ++G__33219__i;}
G__33218 = new cljs.core.IndexedSeq(G__33219__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__33218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__33238 = null;
var G__33238__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33238__1 = (function (result){
var G__33232 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33232) : rf.call(null,G__33232));
});
var G__33238__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__33233 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33233) : pred.call(null,G__33233));
})())){
var G__33234 = result;
var G__33235 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33234,G__33235) : rf.call(null,G__33234,G__33235));
} else {
return result;
}
});
G__33238 = function(result,input){
switch(arguments.length){
case 0:
return G__33238__0.call(this);
case 1:
return G__33238__1.call(this,result);
case 2:
return G__33238__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33238.cljs$core$IFn$_invoke$arity$0 = G__33238__0;
G__33238.cljs$core$IFn$_invoke$arity$1 = G__33238__1;
G__33238.cljs$core$IFn$_invoke$arity$2 = G__33238__2;
return G__33238;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___33239 = size;
var i_33240 = (0);
while(true){
if((i_33240 < n__4698__auto___33239)){
if(cljs.core.truth_((function (){var G__33236 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33240);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33236) : pred.call(null,G__33236));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33240));
} else {
}

var G__33241 = (i_33240 + (1));
i_33240 = G__33241;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__33237 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33237) : pred.call(null,G__33237));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__33248 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__33248) : branch_QMARK_.call(null,G__33248));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__33249 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__33249) : children.call(null,G__33249));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__33250_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__33250_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__33253 = to;
if(G__33253){
var bit__4485__auto__ = (G__33253.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__33253.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__33254 = to;
if(G__33254){
var bit__4485__auto__ = (G__33254.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__33254.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__33256 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33256) : f.call(null,G__33256));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__33257__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__33257 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33258__i = 0, G__33258__a = new Array(arguments.length -  4);
while (G__33258__i < G__33258__a.length) {G__33258__a[G__33258__i] = arguments[G__33258__i + 4]; ++G__33258__i;}
  colls = new cljs.core.IndexedSeq(G__33258__a,0);
} 
return G__33257__delegate.call(this,f,c1,c2,c3,colls);};
G__33257.cljs$lang$maxFixedArity = 4;
G__33257.cljs$lang$applyTo = (function (arglist__33259){
var f = cljs.core.first(arglist__33259);
arglist__33259 = cljs.core.next(arglist__33259);
var c1 = cljs.core.first(arglist__33259);
arglist__33259 = cljs.core.next(arglist__33259);
var c2 = cljs.core.first(arglist__33259);
arglist__33259 = cljs.core.next(arglist__33259);
var c3 = cljs.core.first(arglist__33259);
var colls = cljs.core.rest(arglist__33259);
return G__33257__delegate(f,c1,c2,c3,colls);
});
G__33257.cljs$core$IFn$_invoke$arity$variadic = G__33257__delegate;
return G__33257;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__33260 = null;
if (arguments.length > 4) {
var G__33261__i = 0, G__33261__a = new Array(arguments.length -  4);
while (G__33261__i < G__33261__a.length) {G__33261__a[G__33261__i] = arguments[G__33261__i + 4]; ++G__33261__i;}
G__33260 = new cljs.core.IndexedSeq(G__33261__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__33263 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33263) : pred.call(null,G__33263));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__33278 = m__$1;
if(G__33278){
var bit__4492__auto__ = (G__33278.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4492__auto__) || (G__33278.cljs$core$ILookup$)){
return true;
} else {
if((!G__33278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33278);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__33279 = sentinel;
var G__33280 = m__$2;
var G__33281 = cljs.core.next(ks__$1);
sentinel = G__33279;
m__$1 = G__33280;
ks__$1 = G__33281;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__33282,v){
var vec__33287 = p__33282;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33287,(0),null);
var ks = cljs.core.nthnext(vec__33287,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__33288,f){
var vec__33326 = p__33288;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33326,(0),null);
var ks = cljs.core.nthnext(vec__33326,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33327 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33327) : f.call(null,G__33327));
})());
}
});
var update_in__4 = (function (m,p__33289,f,a){
var vec__33328 = p__33289;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33328,(0),null);
var ks = cljs.core.nthnext(vec__33328,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33329 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33330 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33329,G__33330) : f.call(null,G__33329,G__33330));
})());
}
});
var update_in__5 = (function (m,p__33290,f,a,b){
var vec__33331 = p__33290;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33331,(0),null);
var ks = cljs.core.nthnext(vec__33331,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33332 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33333 = a;
var G__33334 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33332,G__33333,G__33334) : f.call(null,G__33332,G__33333,G__33334));
})());
}
});
var update_in__6 = (function (m,p__33291,f,a,b,c){
var vec__33335 = p__33291;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33335,(0),null);
var ks = cljs.core.nthnext(vec__33335,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33336 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33337 = a;
var G__33338 = b;
var G__33339 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33336,G__33337,G__33338,G__33339) : f.call(null,G__33336,G__33337,G__33338,G__33339));
})());
}
});
var update_in__7 = (function() { 
var G__33341__delegate = function (m,p__33292,f,a,b,c,args){
var vec__33340 = p__33292;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33340,(0),null);
var ks = cljs.core.nthnext(vec__33340,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__33341 = function (m,p__33292,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__33342__i = 0, G__33342__a = new Array(arguments.length -  6);
while (G__33342__i < G__33342__a.length) {G__33342__a[G__33342__i] = arguments[G__33342__i + 6]; ++G__33342__i;}
  args = new cljs.core.IndexedSeq(G__33342__a,0);
} 
return G__33341__delegate.call(this,m,p__33292,f,a,b,c,args);};
G__33341.cljs$lang$maxFixedArity = 6;
G__33341.cljs$lang$applyTo = (function (arglist__33343){
var m = cljs.core.first(arglist__33343);
arglist__33343 = cljs.core.next(arglist__33343);
var p__33292 = cljs.core.first(arglist__33343);
arglist__33343 = cljs.core.next(arglist__33343);
var f = cljs.core.first(arglist__33343);
arglist__33343 = cljs.core.next(arglist__33343);
var a = cljs.core.first(arglist__33343);
arglist__33343 = cljs.core.next(arglist__33343);
var b = cljs.core.first(arglist__33343);
arglist__33343 = cljs.core.next(arglist__33343);
var c = cljs.core.first(arglist__33343);
var args = cljs.core.rest(arglist__33343);
return G__33341__delegate(m,p__33292,f,a,b,c,args);
});
G__33341.cljs$core$IFn$_invoke$arity$variadic = G__33341__delegate;
return G__33341;
})()
;
update_in = function(m,p__33292,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__33292,f);
case 4:
return update_in__4.call(this,m,p__33292,f,a);
case 5:
return update_in__5.call(this,m,p__33292,f,a,b);
case 6:
return update_in__6.call(this,m,p__33292,f,a,b,c);
default:
var G__33344 = null;
if (arguments.length > 6) {
var G__33345__i = 0, G__33345__a = new Array(arguments.length -  6);
while (G__33345__i < G__33345__a.length) {G__33345__a[G__33345__i] = arguments[G__33345__i + 6]; ++G__33345__i;}
G__33344 = new cljs.core.IndexedSeq(G__33345__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__33292,f,a,b,c, G__33344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33356 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33356) : f.call(null,G__33356));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33357 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33358 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33357,G__33358) : f.call(null,G__33357,G__33358));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33359 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33360 = x;
var G__33361 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33359,G__33360,G__33361) : f.call(null,G__33359,G__33360,G__33361));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33362 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33363 = x;
var G__33364 = y;
var G__33365 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33362,G__33363,G__33364,G__33365) : f.call(null,G__33362,G__33363,G__33364,G__33365));
})());
});
var update__7 = (function() { 
var G__33366__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__33366 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__33367__i = 0, G__33367__a = new Array(arguments.length -  6);
while (G__33367__i < G__33367__a.length) {G__33367__a[G__33367__i] = arguments[G__33367__i + 6]; ++G__33367__i;}
  more = new cljs.core.IndexedSeq(G__33367__a,0);
} 
return G__33366__delegate.call(this,m,k,f,x,y,z,more);};
G__33366.cljs$lang$maxFixedArity = 6;
G__33366.cljs$lang$applyTo = (function (arglist__33368){
var m = cljs.core.first(arglist__33368);
arglist__33368 = cljs.core.next(arglist__33368);
var k = cljs.core.first(arglist__33368);
arglist__33368 = cljs.core.next(arglist__33368);
var f = cljs.core.first(arglist__33368);
arglist__33368 = cljs.core.next(arglist__33368);
var x = cljs.core.first(arglist__33368);
arglist__33368 = cljs.core.next(arglist__33368);
var y = cljs.core.first(arglist__33368);
arglist__33368 = cljs.core.next(arglist__33368);
var z = cljs.core.first(arglist__33368);
var more = cljs.core.rest(arglist__33368);
return G__33366__delegate(m,k,f,x,y,z,more);
});
G__33366.cljs$core$IFn$_invoke$arity$variadic = G__33366__delegate;
return G__33366;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__33369 = null;
if (arguments.length > 6) {
var G__33370__i = 0, G__33370__a = new Array(arguments.length -  6);
while (G__33370__i < G__33370__a.length) {G__33370__a[G__33370__i] = arguments[G__33370__i + 6]; ++G__33370__i;}
G__33369 = new cljs.core.IndexedSeq(G__33370__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__33369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__33371 = (ll - (5));
var G__33372 = r;
ll = G__33371;
ret = G__33372;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__33377 = cljs.core.pv_aget(node,(0));
var G__33378 = (level - (5));
node = G__33377;
level = G__33378;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__33379 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__33380 = (level - (5));
node = G__33379;
level = G__33380;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__33390 = init__$2;
var G__33391 = (j + i);
var G__33392 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33390,G__33391,G__33392) : f.call(null,G__33390,G__33391,G__33392));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__33403 = (j + (1));
var G__33404 = init__$3;
j = G__33403;
init__$2 = G__33404;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33393 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33393) : cljs.core.deref.call(null,G__33393));
} else {
var G__33405 = (i + len);
var G__33406 = init__$2;
i = G__33405;
init__$1 = G__33406;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__33394 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__33394) : cljs.core.tv_editable_root.call(null,G__33394));
})(),(function (){var G__33395 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__33395) : cljs.core.tv_editable_tail.call(null,G__33395));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__33396 = init__$2;
var G__33397 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33396,G__33397) : f.call(null,G__33396,G__33397));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__33407 = (j + (1));
var G__33408 = init__$3;
j = G__33407;
init__$2 = G__33408;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33398 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33398) : cljs.core.deref.call(null,G__33398));
} else {
var G__33409 = (i + len);
var G__33410 = init__$2;
i = G__33409;
init__$1 = G__33410;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__33399 = coll__$1;
var G__33400 = cljs.core.first_array_for_longvec(coll__$1);
var G__33401 = (0);
var G__33402 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33399,G__33400,G__33401,G__33402) : cljs.core.chunked_seq.call(null,G__33399,G__33400,G__33401,G__33402));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4698__auto___33411 = len;
var i_33412 = (0);
while(true){
if((i_33412 < n__4698__auto___33411)){
(new_tail[i_33412] = (self__.tail[i_33412]));

var G__33413 = (i_33412 + (1));
i_33412 = G__33413;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__33414 = null;
var G__33414__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__33414__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__33414 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33414__2.call(this,self__,k);
case 3:
return G__33414__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33414.cljs$core$IFn$_invoke$arity$2 = G__33414__2;
G__33414.cljs$core$IFn$_invoke$arity$3 = G__33414__3;
return G__33414;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args33389){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33389)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__33415 = (i + (1));
var G__33416 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__33415;
out = G__33416;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33417__i = 0, G__33417__a = new Array(arguments.length -  0);
while (G__33417__i < G__33417__a.length) {G__33417__a[G__33417__i] = arguments[G__33417__i + 0]; ++G__33417__i;}
  args = new cljs.core.IndexedSeq(G__33417__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__33418){
var args = cljs.core.seq(arglist__33418);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__33419 = self__.vec;
var G__33420 = self__.node;
var G__33421 = self__.i;
var G__33422 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33419,G__33420,G__33421,G__33422) : cljs.core.chunked_seq.call(null,G__33419,G__33420,G__33421,G__33422));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__33423 = self__.vec;
var G__33424 = (self__.i + self__.off);
var G__33425 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__33423,G__33424,G__33425) : cljs.core.subvec.call(null,G__33423,G__33424,G__33425));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__33426 = self__.vec;
var G__33427 = (self__.i + self__.off);
var G__33428 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__33426,G__33427,G__33428) : cljs.core.subvec.call(null,G__33426,G__33427,G__33428));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__33429 = self__.vec;
var G__33430 = self__.node;
var G__33431 = self__.i;
var G__33432 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33429,G__33430,G__33431,G__33432) : cljs.core.chunked_seq.call(null,G__33429,G__33430,G__33431,G__33432));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__33433 = self__.vec;
var G__33434 = cljs.core.unchecked_array_for(self__.vec,end);
var G__33435 = end;
var G__33436 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33433,G__33434,G__33435,G__33436) : cljs.core.chunked_seq.call(null,G__33433,G__33434,G__33435,G__33436));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__33437 = self__.vec;
var G__33438 = self__.node;
var G__33439 = self__.i;
var G__33440 = self__.off;
var G__33441 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__33437,G__33438,G__33439,G__33440,G__33441) : cljs.core.chunked_seq.call(null,G__33437,G__33438,G__33439,G__33440,G__33441));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__33442 = self__.vec;
var G__33443 = cljs.core.unchecked_array_for(self__.vec,end);
var G__33444 = end;
var G__33445 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33442,G__33443,G__33444,G__33445) : cljs.core.chunked_seq.call(null,G__33442,G__33443,G__33444,G__33445));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__33447 = self__.meta;
var G__33448 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__33449 = self__.start;
var G__33450 = (function (){var x__4128__auto__ = self__.end;
var y__4129__auto__ = (v_pos + (1));
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})();
var G__33451 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33447,G__33448,G__33449,G__33450,G__33451) : cljs.core.build_subvec.call(null,G__33447,G__33448,G__33449,G__33450,G__33451));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__33452 = self__.meta;
var G__33453 = self__.v;
var G__33454 = self__.start;
var G__33455 = (self__.end - (1));
var G__33456 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33452,G__33453,G__33454,G__33455,G__33456) : cljs.core.build_subvec.call(null,G__33452,G__33453,G__33454,G__33455,G__33456));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__33458 = meta__$1;
var G__33459 = self__.v;
var G__33460 = self__.start;
var G__33461 = self__.end;
var G__33462 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33458,G__33459,G__33460,G__33461,G__33462) : cljs.core.build_subvec.call(null,G__33458,G__33459,G__33460,G__33461,G__33462));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__33463 = self__.meta;
var G__33464 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__33465 = self__.start;
var G__33466 = (self__.end + (1));
var G__33467 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33463,G__33464,G__33465,G__33466,G__33467) : cljs.core.build_subvec.call(null,G__33463,G__33464,G__33465,G__33466,G__33467));
});

cljs.core.Subvec.prototype.call = (function() {
var G__33468 = null;
var G__33468__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__33468__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__33468 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33468__2.call(this,self__,k);
case 3:
return G__33468__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33468.cljs$core$IFn$_invoke$arity$2 = G__33468__2;
G__33468.cljs$core$IFn$_invoke$arity$3 = G__33468__3;
return G__33468;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args33446){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33446)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__33469 = meta;
var G__33470 = v.v;
var G__33471 = (v.start + start);
var G__33472 = (v.start + end);
var G__33473 = __hash;
meta = G__33469;
v = G__33470;
start = G__33471;
end = G__33472;
__hash = G__33473;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj33480 = {};
return obj33480;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__33488 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__33489 = (level - (5));
node = G__33488;
level = G__33489;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__33493 = null;
var G__33493__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33493__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33493 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33493__2.call(this,self__,k);
case 3:
return G__33493__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33493.cljs$core$IFn$_invoke$arity$2 = G__33493__2;
G__33493.cljs$core$IFn$_invoke$arity$3 = G__33493__3;
return G__33493;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args33490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33490)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3811__auto__ = self__.front;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = self__.rear;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__33494 = (i + incr);
i = G__33494;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__33495 = (i + (1));
var G__33496 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__33495;
out = G__33496;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj33500 = {};
return obj33500;
})();
var l = ks.length;
var i_33501 = (0);
while(true){
if((i_33501 < l)){
var k_33502 = (ks[i_33501]);
(new_obj[k_33502] = (obj[k_33502]));

var G__33503 = (i_33501 + (1));
i_33501 = G__33503;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__33507 = k;
return goog.isString(G__33507);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__33508 = init__$1;
var G__33509 = k;
var G__33510 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33508,G__33509,G__33510) : f.call(null,G__33508,G__33509,G__33510));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33511 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33511) : cljs.core.deref.call(null,G__33511));
} else {
var G__33517 = cljs.core.rest(keys__$1);
var G__33518 = init__$2;
keys__$1 = G__33517;
init__$1 = G__33518;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__33513 = k;
return goog.isString(G__33513);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__33514 = k;
return goog.isString(G__33514);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__33516 = k;
return goog.isString(G__33516);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__33504_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__33504_SHARP_,(self__.strobj[p1__33504_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__33519 = null;
var G__33519__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33519__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33519 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33519__2.call(this,self__,k);
case 3:
return G__33519__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33519.cljs$core$IFn$_invoke$arity$2 = G__33519__2;
G__33519.cljs$core$IFn$_invoke$arity$3 = G__33519__3;
return G__33519;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args33505){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33505)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj33521 = {};
return obj33521;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__33522 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33522,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33522,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__33523 = (i + (2));
i = G__33523;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__33524 = (i + (2));
i = G__33524;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__33525 = (i + (2));
i = G__33525;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__33526 = (i + (2));
i = G__33526;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__33527 = (i + (2));
i = G__33527;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3811__auto__ = (function (){var G__33531 = k;
return goog.isString(G__33531);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_33532 = (0);
while(true){
if((i_33532 < l)){
(narr[i_33532] = (arr[i_33532]));

var G__33533 = (i_33532 + (1));
i_33532 = G__33533;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33535 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33535) : cljs.core.keys.call(null,G__33535));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33536 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33536) : cljs.core.vals.call(null,G__33536));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33537 = cljs.core.seq(coll);
var chunk__33538 = null;
var count__33539 = (0);
var i__33540 = (0);
while(true){
if((i__33540 < count__33539)){
var vec__33541 = chunk__33538.cljs$core$IIndexed$_nth$arity$2(null,i__33540);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33541,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33541,(1),null);
var G__33542_33555 = v;
var G__33543_33556 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33542_33555,G__33543_33556) : f.call(null,G__33542_33555,G__33543_33556));

var G__33557 = seq__33537;
var G__33558 = chunk__33538;
var G__33559 = count__33539;
var G__33560 = (i__33540 + (1));
seq__33537 = G__33557;
chunk__33538 = G__33558;
count__33539 = G__33559;
i__33540 = G__33560;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33537);
if(temp__4126__auto__){
var seq__33537__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33537__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__33537__$1);
var G__33561 = cljs.core.chunk_rest(seq__33537__$1);
var G__33562 = c__4598__auto__;
var G__33563 = cljs.core.count(c__4598__auto__);
var G__33564 = (0);
seq__33537 = G__33561;
chunk__33538 = G__33562;
count__33539 = G__33563;
i__33540 = G__33564;
continue;
} else {
var vec__33544 = cljs.core.first(seq__33537__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33544,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33544,(1),null);
var G__33545_33565 = v;
var G__33546_33566 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33545_33565,G__33546_33566) : f.call(null,G__33545_33565,G__33546_33566));

var G__33567 = cljs.core.next(seq__33537__$1);
var G__33568 = null;
var G__33569 = (0);
var G__33570 = (0);
seq__33537 = G__33567;
chunk__33538 = G__33568;
count__33539 = G__33569;
i__33540 = G__33570;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__33547 = init__$1;
var G__33548 = (self__.arr[i]);
var G__33549 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33547,G__33548,G__33549) : f.call(null,G__33547,G__33548,G__33549));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33550 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33550) : cljs.core.deref.call(null,G__33550));
} else {
var G__33571 = (i + (2));
var G__33572 = init__$2;
i = G__33571;
init__$1 = G__33572;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__33551 = other;
if(G__33551){
var bit__4485__auto__ = (G__33551.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4485__auto__) || (G__33551.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__33573 = (i + (2));
i = G__33573;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj33553 = {};
return obj33553;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__33574 = (s + (2));
var G__33575 = d;
s = G__33574;
d = G__33575;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__33576 = (s + (2));
var G__33577 = (d + (2));
s = G__33576;
d = G__33577;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__33554 = cljs.core.aclone(self__.arr);
(G__33554[(idx + (1))] = v);

return G__33554;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33578 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33579 = cljs.core.next(es);
ret = G__33578;
es = G__33579;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__33580 = null;
var G__33580__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33580__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33580 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33580__2.call(this,self__,k);
case 3:
return G__33580__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33580.cljs$core$IFn$_invoke$arity$2 = G__33580__2;
G__33580.cljs$core$IFn$_invoke$arity$3 = G__33580__3;
return G__33580;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args33534){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33534)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__33581 = (i + (2));
var G__33582 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33581;
ret = G__33582;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__33583_33591 = self__.arr;
G__33583_33591.pop();

G__33583_33591.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__33584 = self__.len;
var G__33585 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__33584,G__33585) : cljs.core.array__GT_transient_hash_map.call(null,G__33584,G__33585));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__33586 = o;
if(G__33586){
var bit__4492__auto__ = (G__33586.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__33586.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33586.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33586);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33586);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__33587 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33587) : cljs.core.key.call(null,G__33587));
})(),(function (){var G__33588 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33588) : cljs.core.val.call(null,G__33588));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__33592 = cljs.core.next(es);
var G__33593 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__33589 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33589) : cljs.core.key.call(null,G__33589));
})(),(function (){var G__33590 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33590) : cljs.core.val.call(null,G__33590));
})());
es = G__33592;
tcoll__$2 = G__33593;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__33594 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__33595 = (i + (2));
out = G__33594;
i = G__33595;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__33598 = cljs.core.aclone(arr);
(G__33598[i] = a);

return G__33598;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__33599 = cljs.core.aclone(arr);
(G__33599[i] = a);

(G__33599[j] = b);

return G__33599;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__33604 = init__$1;
var G__33605 = k;
var G__33606 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33604,G__33605,G__33606) : f.call(null,G__33604,G__33605,G__33606));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33607 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33607) : cljs.core.deref.call(null,G__33607));
} else {
var G__33608 = (i + (2));
var G__33609 = init__$2;
i = G__33608;
init__$1 = G__33609;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33610 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33610) : cljs.core.create_inode_seq.call(null,G__33610));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33624 = (0);
var j_33625 = (0);
while(true){
if((i_33624 < (32))){
if((((self__.bitmap >>> i_33624) & (1)) === (0))){
var G__33626 = (i_33624 + (1));
var G__33627 = j_33625;
i_33624 = G__33626;
j_33625 = G__33627;
continue;
} else {
(nodes[i_33624] = ((!(((self__.arr[j_33625]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_33625])),(self__.arr[j_33625]),(self__.arr[(j_33625 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33625 + (1))])));

var G__33628 = (i_33624 + (1));
var G__33629 = (j_33625 + (2));
i_33624 = G__33628;
j_33625 = G__33629;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33611 = edit__$1;
var G__33612 = (shift + (5));
var G__33613 = key_or_nil;
var G__33614 = val_or_node;
var G__33615 = hash;
var G__33616 = key;
var G__33617 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__33611,G__33612,G__33613,G__33614,G__33615,G__33616,G__33617) : cljs.core.create_node.call(null,G__33611,G__33612,G__33613,G__33614,G__33615,G__33616,G__33617));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33630 = (0);
var j_33631 = (0);
while(true){
if((i_33630 < (32))){
if((((self__.bitmap >>> i_33630) & (1)) === (0))){
var G__33632 = (i_33630 + (1));
var G__33633 = j_33631;
i_33630 = G__33632;
j_33631 = G__33633;
continue;
} else {
(nodes[i_33630] = ((!(((self__.arr[j_33631]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_33631])),(self__.arr[j_33631]),(self__.arr[(j_33631 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33631 + (1))])));

var G__33634 = (i_33630 + (1));
var G__33635 = (j_33631 + (2));
i_33630 = G__33634;
j_33631 = G__33635;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33618 = (shift + (5));
var G__33619 = key_or_nil;
var G__33620 = val_or_node;
var G__33621 = hash;
var G__33622 = key;
var G__33623 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__33618,G__33619,G__33620,G__33621,G__33622,G__33623) : cljs.core.create_node.call(null,G__33618,G__33619,G__33620,G__33621,G__33622,G__33623));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__33636 = (i + (1));
var G__33637 = (j + (2));
var G__33638 = (bitmap | ((1) << i));
i = G__33636;
j = G__33637;
bitmap = G__33638;
continue;
} else {
var G__33639 = (i + (1));
var G__33640 = j;
var G__33641 = bitmap;
i = G__33639;
j = G__33640;
bitmap = G__33641;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33642 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__33642) : cljs.core.create_array_node_seq.call(null,G__33642));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33643 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33643) : cljs.core.deref.call(null,G__33643));
} else {
var G__33644 = (i + (1));
var G__33645 = init__$2;
i = G__33644;
init__$1 = G__33645;
continue;
}
} else {
var G__33646 = (i + (1));
var G__33647 = init__$1;
i = G__33646;
init__$1 = G__33647;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__33648 = (i + (2));
i = G__33648;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33649 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33649) : cljs.core.create_inode_seq.call(null,G__33649));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__33650 = self__.nodes;
var G__33651 = (self__.i + (2));
var G__33652 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33650,G__33651,G__33652) : cljs.core.create_inode_seq.call(null,G__33650,G__33651,G__33652));
} else {
var G__33653 = self__.nodes;
var G__33654 = self__.i;
var G__33655 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33653,G__33654,G__33655) : cljs.core.create_inode_seq.call(null,G__33653,G__33654,G__33655));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__33659 = (j + (2));
j = G__33659;
continue;
}
} else {
var G__33660 = (j + (2));
j = G__33660;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__33661 = null;
var G__33662 = self__.nodes;
var G__33663 = self__.i;
var G__33664 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__33661,G__33662,G__33663,G__33664) : cljs.core.create_array_node_seq.call(null,G__33661,G__33662,G__33663,G__33664));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__33669 = (j + (1));
j = G__33669;
continue;
}
} else {
var G__33670 = (j + (1));
j = G__33670;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33672 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33672) : cljs.core.keys.call(null,G__33672));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33673 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33673) : cljs.core.vals.call(null,G__33673));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33674 = cljs.core.seq(coll);
var chunk__33675 = null;
var count__33676 = (0);
var i__33677 = (0);
while(true){
if((i__33677 < count__33676)){
var vec__33678 = chunk__33675.cljs$core$IIndexed$_nth$arity$2(null,i__33677);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33678,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33678,(1),null);
var G__33679_33690 = v;
var G__33680_33691 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33679_33690,G__33680_33691) : f.call(null,G__33679_33690,G__33680_33691));

var G__33692 = seq__33674;
var G__33693 = chunk__33675;
var G__33694 = count__33676;
var G__33695 = (i__33677 + (1));
seq__33674 = G__33692;
chunk__33675 = G__33693;
count__33676 = G__33694;
i__33677 = G__33695;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33674);
if(temp__4126__auto__){
var seq__33674__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33674__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__33674__$1);
var G__33696 = cljs.core.chunk_rest(seq__33674__$1);
var G__33697 = c__4598__auto__;
var G__33698 = cljs.core.count(c__4598__auto__);
var G__33699 = (0);
seq__33674 = G__33696;
chunk__33675 = G__33697;
count__33676 = G__33698;
i__33677 = G__33699;
continue;
} else {
var vec__33681 = cljs.core.first(seq__33674__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33681,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33681,(1),null);
var G__33682_33700 = v;
var G__33683_33701 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33682_33700,G__33683_33701) : f.call(null,G__33682_33700,G__33683_33701));

var G__33702 = cljs.core.next(seq__33674__$1);
var G__33703 = null;
var G__33704 = (0);
var G__33705 = (0);
seq__33674 = G__33702;
chunk__33675 = G__33703;
count__33676 = G__33704;
i__33677 = G__33705;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__33684 = init;
var G__33685 = null;
var G__33686 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33684,G__33685,G__33686) : f.call(null,G__33684,G__33685,G__33686));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33687 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33687) : cljs.core.deref.call(null,G__33687));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj33689 = {};
return obj33689;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33706 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33707 = cljs.core.next(es);
ret = G__33706;
es = G__33707;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__33708 = null;
var G__33708__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33708__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33708 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33708__2.call(this,self__,k);
case 3:
return G__33708__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33708.cljs$core$IFn$_invoke$arity$2 = G__33708__2;
G__33708.cljs$core$IFn$_invoke$arity$3 = G__33708__3;
return G__33708;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args33671){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33671)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33709 = (i + (2));
var G__33710 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33709;
ret = G__33710;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33711 = (i + (1));
var G__33712 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__33711;
out = G__33712;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__33713 = o;
if(G__33713){
var bit__4492__auto__ = (G__33713.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__33713.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33713.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33713);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33713);
}
})()){
return tcoll.assoc_BANG_((function (){var G__33714 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33714) : cljs.core.key.call(null,G__33714));
})(),(function (){var G__33715 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33715) : cljs.core.val.call(null,G__33715));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__33718 = cljs.core.next(es);
var G__33719 = tcoll__$1.assoc_BANG_((function (){var G__33716 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33716) : cljs.core.key.call(null,G__33716));
})(),(function (){var G__33717 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33717) : cljs.core.val.call(null,G__33717));
})());
es = G__33718;
tcoll__$1 = G__33719;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__33720 = ((ascending_QMARK_)?t.left:t.right);
var G__33721 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__33720;
stack__$1 = G__33721;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33734 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33734) : cljs.core.deref.call(null,G__33734));
} else {
var init__$2 = (function (){var G__33735 = init__$1;
var G__33736 = node.key;
var G__33737 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33735,G__33736,G__33737) : f.call(null,G__33735,G__33736,G__33737));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33738 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33738) : cljs.core.deref.call(null,G__33738));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__33739 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33739) : cljs.core.deref.call(null,G__33739));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__33741 = null;
var G__33741__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33741__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33741 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33741__2.call(this,self__,k);
case 3:
return G__33741__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33741.cljs$core$IFn$_invoke$arity$2 = G__33741__2;
G__33741.cljs$core$IFn$_invoke$arity$3 = G__33741__3;
return G__33741;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args33740){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33740)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__33743 = null;
var G__33743__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33743__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33743 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33743__2.call(this,self__,k);
case 3:
return G__33743__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33743.cljs$core$IFn$_invoke$arity$2 = G__33743__2;
G__33743.cljs$core$IFn$_invoke$arity$3 = G__33743__3;
return G__33743;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args33742){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33742)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__33756 = k;
var G__33757 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33756,G__33757) : comp.call(null,G__33756,G__33757));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__33776 = k;
var G__33777 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33776,G__33777) : comp.call(null,G__33776,G__33777));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__33788 = k;
var G__33789 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33788,G__33789) : comp.call(null,G__33788,G__33789));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33791 = cljs.core.seq(coll);
var chunk__33792 = null;
var count__33793 = (0);
var i__33794 = (0);
while(true){
if((i__33794 < count__33793)){
var vec__33795 = chunk__33792.cljs$core$IIndexed$_nth$arity$2(null,i__33794);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33795,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33795,(1),null);
var G__33796_33808 = v;
var G__33797_33809 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33796_33808,G__33797_33809) : f.call(null,G__33796_33808,G__33797_33809));

var G__33810 = seq__33791;
var G__33811 = chunk__33792;
var G__33812 = count__33793;
var G__33813 = (i__33794 + (1));
seq__33791 = G__33810;
chunk__33792 = G__33811;
count__33793 = G__33812;
i__33794 = G__33813;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33791);
if(temp__4126__auto__){
var seq__33791__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33791__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__33791__$1);
var G__33814 = cljs.core.chunk_rest(seq__33791__$1);
var G__33815 = c__4598__auto__;
var G__33816 = cljs.core.count(c__4598__auto__);
var G__33817 = (0);
seq__33791 = G__33814;
chunk__33792 = G__33815;
count__33793 = G__33816;
i__33794 = G__33817;
continue;
} else {
var vec__33798 = cljs.core.first(seq__33791__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33798,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33798,(1),null);
var G__33799_33818 = v;
var G__33800_33819 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33799_33818,G__33800_33819) : f.call(null,G__33799_33818,G__33800_33819));

var G__33820 = cljs.core.next(seq__33791__$1);
var G__33821 = null;
var G__33822 = (0);
var G__33823 = (0);
seq__33791 = G__33820;
chunk__33792 = G__33821;
count__33793 = G__33822;
i__33794 = G__33823;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33801 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33801) : cljs.core.keys.call(null,G__33801));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33802 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33802) : cljs.core.vals.call(null,G__33802));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__33803 = k;
var G__33804 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__33803,G__33804) : self__.comp.call(null,G__33803,G__33804));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__33824 = t.left;
t = G__33824;
continue;
} else {
var G__33825 = t.right;
t = G__33825;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33826 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33827 = cljs.core.next(es);
ret = G__33826;
es = G__33827;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__33828 = null;
var G__33828__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33828__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33828 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33828__2.call(this,self__,k);
case 3:
return G__33828__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33828.cljs$core$IFn$_invoke$arity$2 = G__33828__2;
G__33828.cljs$core$IFn$_invoke$arity$3 = G__33828__3;
return G__33828;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args33790){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33790)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__33805 = k;
var G__33806 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__33805,G__33806) : self__.comp.call(null,G__33805,G__33806));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__33829 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__33830 = t.left;
stack = G__33829;
t = G__33830;
continue;
} else {
var G__33831 = stack;
var G__33832 = t.right;
stack = G__33831;
t = G__33832;
continue;
}
} else {
if((c > (0))){
var G__33833 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__33834 = t.right;
stack = G__33833;
t = G__33834;
continue;
} else {
var G__33835 = stack;
var G__33836 = t.left;
stack = G__33835;
t = G__33836;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__33807 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33807) : cljs.core.key.call(null,G__33807));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__33837 = cljs.core.nnext(in$);
var G__33838 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33837;
out = G__33838;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33839__i = 0, G__33839__a = new Array(arguments.length -  0);
while (G__33839__i < G__33839__a.length) {G__33839__a[G__33839__i] = arguments[G__33839__i + 0]; ++G__33839__i;}
  keyvals = new cljs.core.IndexedSeq(G__33839__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__33840){
var keyvals = cljs.core.seq(arglist__33840);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33841__i = 0, G__33841__a = new Array(arguments.length -  0);
while (G__33841__i < G__33841__a.length) {G__33841__a[G__33841__i] = arguments[G__33841__i + 0]; ++G__33841__i;}
  keyvals = new cljs.core.IndexedSeq(G__33841__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__33842){
var keyvals = cljs.core.seq(arglist__33842);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj33846 = {};
return obj33846;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__33847 = cljs.core.nnext(kvs);
kvs = G__33847;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33848__i = 0, G__33848__a = new Array(arguments.length -  0);
while (G__33848__i < G__33848__a.length) {G__33848__a[G__33848__i] = arguments[G__33848__i + 0]; ++G__33848__i;}
  keyvals = new cljs.core.IndexedSeq(G__33848__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__33849){
var keyvals = cljs.core.seq(arglist__33849);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__33850 = cljs.core.nnext(in$);
var G__33851 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33850;
out = G__33851;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33852__i = 0, G__33852__a = new Array(arguments.length -  0);
while (G__33852__i < G__33852__a.length) {G__33852__a[G__33852__i] = arguments[G__33852__i + 0]; ++G__33852__i;}
  keyvals = new cljs.core.IndexedSeq(G__33852__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__33853){
var keyvals = cljs.core.seq(arglist__33853);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__33854 = cljs.core.nnext(in$);
var G__33855 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33854;
out = G__33855;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__33856__i = 0, G__33856__a = new Array(arguments.length -  1);
while (G__33856__i < G__33856__a.length) {G__33856__a[G__33856__i] = arguments[G__33856__i + 1]; ++G__33856__i;}
  keyvals = new cljs.core.IndexedSeq(G__33856__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__33857){
var comparator = cljs.core.first(arglist__33857);
var keyvals = cljs.core.rest(arglist__33857);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33858 = self__.mseq;
if(G__33858){
var bit__4492__auto__ = (G__33858.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__33858.cljs$core$INext$)){
return true;
} else {
if((!G__33858.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33858);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33858);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33859 = self__.mseq;
if(G__33859){
var bit__4492__auto__ = (G__33859.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__33859.cljs$core$INext$)){
return true;
} else {
if((!G__33859.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33859);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33859);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33860 = self__.mseq;
if(G__33860){
var bit__4492__auto__ = (G__33860.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__33860.cljs$core$INext$)){
return true;
} else {
if((!G__33860.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33860);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33860);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33861 = self__.mseq;
if(G__33861){
var bit__4492__auto__ = (G__33861.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__33861.cljs$core$INext$)){
return true;
} else {
if((!G__33861.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33861);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33861);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__33862_SHARP_,p2__33863_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = p1__33862_SHARP_;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__33863_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__33864__i = 0, G__33864__a = new Array(arguments.length -  0);
while (G__33864__i < G__33864__a.length) {G__33864__a[G__33864__i] = arguments[G__33864__i + 0]; ++G__33864__i;}
  maps = new cljs.core.IndexedSeq(G__33864__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__33865){
var maps = cljs.core.seq(arglist__33865);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33868 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33869 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33868,G__33869) : f.call(null,G__33868,G__33869));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3811__auto__ = m1;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__33870__i = 0, G__33870__a = new Array(arguments.length -  1);
while (G__33870__i < G__33870__a.length) {G__33870__a[G__33870__i] = arguments[G__33870__i + 1]; ++G__33870__i;}
  maps = new cljs.core.IndexedSeq(G__33870__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__33871){
var f = cljs.core.first(arglist__33871);
var maps = cljs.core.rest(arglist__33871);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$78);
var G__33872 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$78))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__33873 = cljs.core.next(keys);
ret = G__33872;
keys = G__33873;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33876 = cljs.core.seq(coll);
var chunk__33877 = null;
var count__33878 = (0);
var i__33879 = (0);
while(true){
if((i__33879 < count__33878)){
var vec__33880 = chunk__33877.cljs$core$IIndexed$_nth$arity$2(null,i__33879);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33880,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33880,(1),null);
var G__33881_33886 = v;
var G__33882_33887 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33881_33886,G__33882_33887) : f.call(null,G__33881_33886,G__33882_33887));

var G__33888 = seq__33876;
var G__33889 = chunk__33877;
var G__33890 = count__33878;
var G__33891 = (i__33879 + (1));
seq__33876 = G__33888;
chunk__33877 = G__33889;
count__33878 = G__33890;
i__33879 = G__33891;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33876);
if(temp__4126__auto__){
var seq__33876__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33876__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__33876__$1);
var G__33892 = cljs.core.chunk_rest(seq__33876__$1);
var G__33893 = c__4598__auto__;
var G__33894 = cljs.core.count(c__4598__auto__);
var G__33895 = (0);
seq__33876 = G__33892;
chunk__33877 = G__33893;
count__33878 = G__33894;
i__33879 = G__33895;
continue;
} else {
var vec__33883 = cljs.core.first(seq__33876__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33883,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33883,(1),null);
var G__33884_33896 = v;
var G__33885_33897 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33884_33896,G__33885_33897) : f.call(null,G__33884_33896,G__33885_33897));

var G__33898 = cljs.core.next(seq__33876__$1);
var G__33899 = null;
var G__33900 = (0);
var G__33901 = (0);
seq__33876 = G__33898;
chunk__33877 = G__33899;
count__33878 = G__33900;
i__33879 = G__33901;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__33874_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__33874_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__33902 = null;
var G__33902__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33902__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33902 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33902__2.call(this,self__,k);
case 3:
return G__33902__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33902.cljs$core$IFn$_invoke$arity$2 = G__33902__2;
G__33902.cljs$core$IFn$_invoke$arity$3 = G__33902__3;
return G__33902;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args33875){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33875)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__33903 = (i + (1));
var G__33904 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__33903;
out = G__33904;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__33905 = (i + (1));
var G__33906 = cljs.core._conj_BANG_(out,(items[i]));
i = G__33905;
out = G__33906;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__33908 = null;
var G__33908__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__33908__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__33908 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33908__2.call(this,self__,k);
case 3:
return G__33908__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33908.cljs$core$IFn$_invoke$arity$2 = G__33908__2;
G__33908.cljs$core$IFn$_invoke$arity$3 = G__33908__3;
return G__33908;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args33907){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33907)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33911 = cljs.core.seq(coll);
var chunk__33912 = null;
var count__33913 = (0);
var i__33914 = (0);
while(true){
if((i__33914 < count__33913)){
var vec__33915 = chunk__33912.cljs$core$IIndexed$_nth$arity$2(null,i__33914);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33915,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33915,(1),null);
var G__33916_33921 = v;
var G__33917_33922 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33916_33921,G__33917_33922) : f.call(null,G__33916_33921,G__33917_33922));

var G__33923 = seq__33911;
var G__33924 = chunk__33912;
var G__33925 = count__33913;
var G__33926 = (i__33914 + (1));
seq__33911 = G__33923;
chunk__33912 = G__33924;
count__33913 = G__33925;
i__33914 = G__33926;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33911);
if(temp__4126__auto__){
var seq__33911__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33911__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__33911__$1);
var G__33927 = cljs.core.chunk_rest(seq__33911__$1);
var G__33928 = c__4598__auto__;
var G__33929 = cljs.core.count(c__4598__auto__);
var G__33930 = (0);
seq__33911 = G__33927;
chunk__33912 = G__33928;
count__33913 = G__33929;
i__33914 = G__33930;
continue;
} else {
var vec__33918 = cljs.core.first(seq__33911__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33918,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33918,(1),null);
var G__33919_33931 = v;
var G__33920_33932 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33919_33931,G__33920_33932) : f.call(null,G__33919_33931,G__33920_33932));

var G__33933 = cljs.core.next(seq__33911__$1);
var G__33934 = null;
var G__33935 = (0);
var G__33936 = (0);
seq__33911 = G__33933;
chunk__33912 = G__33934;
count__33913 = G__33935;
i__33914 = G__33936;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__33909_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__33909_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__33937 = null;
var G__33937__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33937__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33937 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33937__2.call(this,self__,k);
case 3:
return G__33937__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33937.cljs$core$IFn$_invoke$arity$2 = G__33937__2;
G__33937.cljs$core$IFn$_invoke$arity$3 = G__33937__3;
return G__33937;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args33910){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33910)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4692__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4692__auto__.length)){
var G__33938 = (i + (1));
var G__33939 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__33938;
res = G__33939;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__33940 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__33941 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__33940;
out = G__33941;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__33942__delegate = function (keys){
return cljs.core.set(keys);
};
var G__33942 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__33943__i = 0, G__33943__a = new Array(arguments.length -  0);
while (G__33943__i < G__33943__a.length) {G__33943__a[G__33943__i] = arguments[G__33943__i + 0]; ++G__33943__i;}
  keys = new cljs.core.IndexedSeq(G__33943__a,0);
} 
return G__33942__delegate.call(this,keys);};
G__33942.cljs$lang$maxFixedArity = 0;
G__33942.cljs$lang$applyTo = (function (arglist__33944){
var keys = cljs.core.seq(arglist__33944);
return G__33942__delegate(keys);
});
G__33942.cljs$core$IFn$_invoke$arity$variadic = G__33942__delegate;
return G__33942;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__33945 = null;
if (arguments.length > 0) {
var G__33946__i = 0, G__33946__a = new Array(arguments.length -  0);
while (G__33946__i < G__33946__a.length) {G__33946__a[G__33946__i] = arguments[G__33946__i + 0]; ++G__33946__i;}
G__33945 = new cljs.core.IndexedSeq(G__33946__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__33945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__33947__i = 0, G__33947__a = new Array(arguments.length -  0);
while (G__33947__i < G__33947__a.length) {G__33947__a[G__33947__i] = arguments[G__33947__i + 0]; ++G__33947__i;}
  keys = new cljs.core.IndexedSeq(G__33947__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__33948){
var keys = cljs.core.seq(arglist__33948);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__33949__i = 0, G__33949__a = new Array(arguments.length -  1);
while (G__33949__i < G__33949__a.length) {G__33949__a[G__33949__i] = arguments[G__33949__i + 1]; ++G__33949__i;}
  keys = new cljs.core.IndexedSeq(G__33949__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__33950){
var comparator = cljs.core.first(arglist__33950);
var keys = cljs.core.rest(arglist__33950);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33951_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__33951_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__33951_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__33952_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__33952_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__33952_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__33973 = null;
var G__33973__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33973__1 = (function (result){
var G__33963 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33963) : rf.call(null,G__33963));
});
var G__33973__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__33964 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33964) : cljs.core.deref.call(null,G__33964));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__33965 = result;
var G__33966 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33965,G__33966) : rf.call(null,G__33965,G__33966));
}
});
G__33973 = function(result,input){
switch(arguments.length){
case 0:
return G__33973__0.call(this);
case 1:
return G__33973__1.call(this,result);
case 2:
return G__33973__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33973.cljs$core$IFn$_invoke$arity$0 = G__33973__0;
G__33973.cljs$core$IFn$_invoke$arity$1 = G__33973__1;
G__33973.cljs$core$IFn$_invoke$arity$2 = G__33973__2;
return G__33973;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__33971,seen__$1){
while(true){
var vec__33972 = p__33971;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33972,(0),null);
var xs__$1 = vec__33972;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__33974 = cljs.core.rest(s);
var G__33975 = seen__$1;
p__33971 = G__33974;
seen__$1 = G__33975;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__33976 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__33977 = cljs.core.next(s__$1);
ret = G__33976;
s__$1 = G__33977;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__33979 = x;
if(G__33979){
var bit__4485__auto__ = (G__33979.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__33979.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__33980 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__33981 = cljs.core.next(ks);
var G__33982 = cljs.core.next(vs);
map = G__33980;
ks = G__33981;
vs = G__33982;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__33993 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33993) : k.call(null,G__33993));
})() > (function (){var G__33994 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33994) : k.call(null,G__33994));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__33995__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__33983_SHARP_,p2__33984_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__33983_SHARP_,p2__33984_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__33995 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__33996__i = 0, G__33996__a = new Array(arguments.length -  3);
while (G__33996__i < G__33996__a.length) {G__33996__a[G__33996__i] = arguments[G__33996__i + 3]; ++G__33996__i;}
  more = new cljs.core.IndexedSeq(G__33996__a,0);
} 
return G__33995__delegate.call(this,k,x,y,more);};
G__33995.cljs$lang$maxFixedArity = 3;
G__33995.cljs$lang$applyTo = (function (arglist__33997){
var k = cljs.core.first(arglist__33997);
arglist__33997 = cljs.core.next(arglist__33997);
var x = cljs.core.first(arglist__33997);
arglist__33997 = cljs.core.next(arglist__33997);
var y = cljs.core.first(arglist__33997);
var more = cljs.core.rest(arglist__33997);
return G__33995__delegate(k,x,y,more);
});
G__33995.cljs$core$IFn$_invoke$arity$variadic = G__33995__delegate;
return G__33995;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__33998 = null;
if (arguments.length > 3) {
var G__33999__i = 0, G__33999__a = new Array(arguments.length -  3);
while (G__33999__i < G__33999__a.length) {G__33999__a[G__33999__i] = arguments[G__33999__i + 3]; ++G__33999__i;}
G__33998 = new cljs.core.IndexedSeq(G__33999__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__33998);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__34010 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34010) : k.call(null,G__34010));
})() < (function (){var G__34011 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34011) : k.call(null,G__34011));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__34012__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34000_SHARP_,p2__34001_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__34000_SHARP_,p2__34001_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__34012 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__34013__i = 0, G__34013__a = new Array(arguments.length -  3);
while (G__34013__i < G__34013__a.length) {G__34013__a[G__34013__i] = arguments[G__34013__i + 3]; ++G__34013__i;}
  more = new cljs.core.IndexedSeq(G__34013__a,0);
} 
return G__34012__delegate.call(this,k,x,y,more);};
G__34012.cljs$lang$maxFixedArity = 3;
G__34012.cljs$lang$applyTo = (function (arglist__34014){
var k = cljs.core.first(arglist__34014);
arglist__34014 = cljs.core.next(arglist__34014);
var x = cljs.core.first(arglist__34014);
arglist__34014 = cljs.core.next(arglist__34014);
var y = cljs.core.first(arglist__34014);
var more = cljs.core.rest(arglist__34014);
return G__34012__delegate(k,x,y,more);
});
G__34012.cljs$core$IFn$_invoke$arity$variadic = G__34012__delegate;
return G__34012;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__34015 = null;
if (arguments.length > 3) {
var G__34016__i = 0, G__34016__a = new Array(arguments.length -  3);
while (G__34016__i < G__34016__a.length) {G__34016__a[G__34016__i] = arguments[G__34016__i + 3]; ++G__34016__i;}
G__34015 = new cljs.core.IndexedSeq(G__34016__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__34015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__34033 = null;
var G__34033__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34033__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34028 = result;
var G__34029 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34028,G__34029) : rf.call(null,G__34028,G__34029));
})());
})());
var G__34030 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34030) : rf.call(null,G__34030));
});
var G__34033__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__34031 = result;
var G__34032 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34031,G__34032) : rf.call(null,G__34031,G__34032));
} else {
return result;
}
});
G__34033 = function(result,input){
switch(arguments.length){
case 0:
return G__34033__0.call(this);
case 1:
return G__34033__1.call(this,result);
case 2:
return G__34033__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34033.cljs$core$IFn$_invoke$arity$0 = G__34033__0;
G__34033.cljs$core$IFn$_invoke$arity$1 = G__34033__1;
G__34033.cljs$core$IFn$_invoke$arity$2 = G__34033__2;
return G__34033;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__34046 = null;
var G__34046__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34046__1 = (function (result){
var G__34041 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34041) : rf.call(null,G__34041));
});
var G__34046__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34042 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34042) : pred.call(null,G__34042));
})())){
var G__34043 = result;
var G__34044 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34043,G__34044) : rf.call(null,G__34043,G__34044));
} else {
return cljs.core.reduced(result);
}
});
G__34046 = function(result,input){
switch(arguments.length){
case 0:
return G__34046__0.call(this);
case 1:
return G__34046__1.call(this,result);
case 2:
return G__34046__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34046.cljs$core$IFn$_invoke$arity$0 = G__34046__0;
G__34046.cljs$core$IFn$_invoke$arity$1 = G__34046__1;
G__34046.cljs$core$IFn$_invoke$arity$2 = G__34046__2;
return G__34046;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__34045 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34045) : pred.call(null,G__34045));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__34051 = (function (){var G__34053 = cljs.core._entry_key(sc,e);
var G__34054 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34053,G__34054) : comp.call(null,G__34053,G__34054));
})();
var G__34052 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__34051,G__34052) : test.call(null,G__34051,G__34052));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34058 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34058,(0),null);
var s = vec__34058;
if(cljs.core.truth_((function (){var G__34059 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34059) : include.call(null,G__34059));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34060 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34060,(0),null);
var s = vec__34060;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34064 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34064,(0),null);
var s = vec__34064;
if(cljs.core.truth_((function (){var G__34065 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34065) : include.call(null,G__34065));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34066 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34066,(0),null);
var s = vec__34066;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__34067 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__34067) : Math.ceil.call(null,G__34067));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__34068 = ret;
var G__34069 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34068,G__34069) : f.call(null,G__34068,G__34069));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__34070 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34070) : cljs.core.deref.call(null,G__34070));
} else {
var G__34071 = (i + self__.step);
var G__34072 = ret__$1;
i = G__34071;
ret = G__34072;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34090 = null;
var G__34090__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34090__1 = (function (result){
var G__34087 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34087) : rf.call(null,G__34087));
});
var G__34090__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__34088 = result;
var G__34089 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34088,G__34089) : rf.call(null,G__34088,G__34089));
} else {
return result;
}
});
G__34090 = function(result,input){
switch(arguments.length){
case 0:
return G__34090__0.call(this);
case 1:
return G__34090__1.call(this,result);
case 2:
return G__34090__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34090.cljs$core$IFn$_invoke$arity$0 = G__34090__0;
G__34090.cljs$core$IFn$_invoke$arity$1 = G__34090__1;
G__34090.cljs$core$IFn$_invoke$arity$2 = G__34090__2;
return G__34090;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$79);
return ((function (a,pa){
return (function() {
var G__34112 = null;
var G__34112__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34112__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34103 = result;
var G__34104 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34103,G__34104) : rf.call(null,G__34103,G__34104));
})());
})());
var G__34105 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34105) : rf.call(null,G__34105));
});
var G__34112__2 = (function (result,input){
var pval = (function (){var G__34106 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34106) : cljs.core.deref.call(null,G__34106));
})();
var val = (function (){var G__34107 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34107) : f.call(null,G__34107));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$79)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__34108 = result;
var G__34109 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34108,G__34109) : rf.call(null,G__34108,G__34109));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__34112 = function(result,input){
switch(arguments.length){
case 0:
return G__34112__0.call(this);
case 1:
return G__34112__1.call(this,result);
case 2:
return G__34112__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34112.cljs$core$IFn$_invoke$arity$0 = G__34112__0;
G__34112.cljs$core$IFn$_invoke$arity$1 = G__34112__1;
G__34112.cljs$core$IFn$_invoke$arity$2 = G__34112__2;
return G__34112;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__34110 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34110) : f.call(null,G__34110));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__34091_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__34111 = p1__34091_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34111) : f.call(null,G__34111));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__34121 = init;
var G__34122 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34121,G__34122) : f.call(null,G__34121,G__34122));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__34217 = null;
var G__34217__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__34217__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34175 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34175) : f.call(null,G__34175));
})()],null));
});
var G__34217__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34176 = x;
var G__34177 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34176,G__34177) : f.call(null,G__34176,G__34177));
})()],null));
});
var G__34217__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34178 = x;
var G__34179 = y;
var G__34180 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34178,G__34179,G__34180) : f.call(null,G__34178,G__34179,G__34180));
})()],null));
});
var G__34217__4 = (function() { 
var G__34218__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__34218 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34219__i = 0, G__34219__a = new Array(arguments.length -  3);
while (G__34219__i < G__34219__a.length) {G__34219__a[G__34219__i] = arguments[G__34219__i + 3]; ++G__34219__i;}
  args = new cljs.core.IndexedSeq(G__34219__a,0);
} 
return G__34218__delegate.call(this,x,y,z,args);};
G__34218.cljs$lang$maxFixedArity = 3;
G__34218.cljs$lang$applyTo = (function (arglist__34220){
var x = cljs.core.first(arglist__34220);
arglist__34220 = cljs.core.next(arglist__34220);
var y = cljs.core.first(arglist__34220);
arglist__34220 = cljs.core.next(arglist__34220);
var z = cljs.core.first(arglist__34220);
var args = cljs.core.rest(arglist__34220);
return G__34218__delegate(x,y,z,args);
});
G__34218.cljs$core$IFn$_invoke$arity$variadic = G__34218__delegate;
return G__34218;
})()
;
G__34217 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34217__0.call(this);
case 1:
return G__34217__1.call(this,x);
case 2:
return G__34217__2.call(this,x,y);
case 3:
return G__34217__3.call(this,x,y,z);
default:
var G__34221 = null;
if (arguments.length > 3) {
var G__34222__i = 0, G__34222__a = new Array(arguments.length -  3);
while (G__34222__i < G__34222__a.length) {G__34222__a[G__34222__i] = arguments[G__34222__i + 3]; ++G__34222__i;}
G__34221 = new cljs.core.IndexedSeq(G__34222__a,0);
}
return G__34217__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34217.cljs$lang$maxFixedArity = 3;
G__34217.cljs$lang$applyTo = G__34217__4.cljs$lang$applyTo;
G__34217.cljs$core$IFn$_invoke$arity$0 = G__34217__0;
G__34217.cljs$core$IFn$_invoke$arity$1 = G__34217__1;
G__34217.cljs$core$IFn$_invoke$arity$2 = G__34217__2;
G__34217.cljs$core$IFn$_invoke$arity$3 = G__34217__3;
G__34217.cljs$core$IFn$_invoke$arity$variadic = G__34217__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34217;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__34223 = null;
var G__34223__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__34223__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34181 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34181) : f.call(null,G__34181));
})(),(function (){var G__34182 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34182) : g.call(null,G__34182));
})()],null));
});
var G__34223__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34183 = x;
var G__34184 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34183,G__34184) : f.call(null,G__34183,G__34184));
})(),(function (){var G__34185 = x;
var G__34186 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34185,G__34186) : g.call(null,G__34185,G__34186));
})()],null));
});
var G__34223__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34187 = x;
var G__34188 = y;
var G__34189 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34187,G__34188,G__34189) : f.call(null,G__34187,G__34188,G__34189));
})(),(function (){var G__34190 = x;
var G__34191 = y;
var G__34192 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34190,G__34191,G__34192) : g.call(null,G__34190,G__34191,G__34192));
})()],null));
});
var G__34223__4 = (function() { 
var G__34224__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__34224 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34225__i = 0, G__34225__a = new Array(arguments.length -  3);
while (G__34225__i < G__34225__a.length) {G__34225__a[G__34225__i] = arguments[G__34225__i + 3]; ++G__34225__i;}
  args = new cljs.core.IndexedSeq(G__34225__a,0);
} 
return G__34224__delegate.call(this,x,y,z,args);};
G__34224.cljs$lang$maxFixedArity = 3;
G__34224.cljs$lang$applyTo = (function (arglist__34226){
var x = cljs.core.first(arglist__34226);
arglist__34226 = cljs.core.next(arglist__34226);
var y = cljs.core.first(arglist__34226);
arglist__34226 = cljs.core.next(arglist__34226);
var z = cljs.core.first(arglist__34226);
var args = cljs.core.rest(arglist__34226);
return G__34224__delegate(x,y,z,args);
});
G__34224.cljs$core$IFn$_invoke$arity$variadic = G__34224__delegate;
return G__34224;
})()
;
G__34223 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34223__0.call(this);
case 1:
return G__34223__1.call(this,x);
case 2:
return G__34223__2.call(this,x,y);
case 3:
return G__34223__3.call(this,x,y,z);
default:
var G__34227 = null;
if (arguments.length > 3) {
var G__34228__i = 0, G__34228__a = new Array(arguments.length -  3);
while (G__34228__i < G__34228__a.length) {G__34228__a[G__34228__i] = arguments[G__34228__i + 3]; ++G__34228__i;}
G__34227 = new cljs.core.IndexedSeq(G__34228__a,0);
}
return G__34223__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34223.cljs$lang$maxFixedArity = 3;
G__34223.cljs$lang$applyTo = G__34223__4.cljs$lang$applyTo;
G__34223.cljs$core$IFn$_invoke$arity$0 = G__34223__0;
G__34223.cljs$core$IFn$_invoke$arity$1 = G__34223__1;
G__34223.cljs$core$IFn$_invoke$arity$2 = G__34223__2;
G__34223.cljs$core$IFn$_invoke$arity$3 = G__34223__3;
G__34223.cljs$core$IFn$_invoke$arity$variadic = G__34223__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34223;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__34229 = null;
var G__34229__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__34229__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34193 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34193) : f.call(null,G__34193));
})(),(function (){var G__34194 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34194) : g.call(null,G__34194));
})(),(function (){var G__34195 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34195) : h.call(null,G__34195));
})()],null));
});
var G__34229__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34196 = x;
var G__34197 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34196,G__34197) : f.call(null,G__34196,G__34197));
})(),(function (){var G__34198 = x;
var G__34199 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34198,G__34199) : g.call(null,G__34198,G__34199));
})(),(function (){var G__34200 = x;
var G__34201 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34200,G__34201) : h.call(null,G__34200,G__34201));
})()],null));
});
var G__34229__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34202 = x;
var G__34203 = y;
var G__34204 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34202,G__34203,G__34204) : f.call(null,G__34202,G__34203,G__34204));
})(),(function (){var G__34205 = x;
var G__34206 = y;
var G__34207 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34205,G__34206,G__34207) : g.call(null,G__34205,G__34206,G__34207));
})(),(function (){var G__34208 = x;
var G__34209 = y;
var G__34210 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34208,G__34209,G__34210) : h.call(null,G__34208,G__34209,G__34210));
})()],null));
});
var G__34229__4 = (function() { 
var G__34230__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__34230 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34231__i = 0, G__34231__a = new Array(arguments.length -  3);
while (G__34231__i < G__34231__a.length) {G__34231__a[G__34231__i] = arguments[G__34231__i + 3]; ++G__34231__i;}
  args = new cljs.core.IndexedSeq(G__34231__a,0);
} 
return G__34230__delegate.call(this,x,y,z,args);};
G__34230.cljs$lang$maxFixedArity = 3;
G__34230.cljs$lang$applyTo = (function (arglist__34232){
var x = cljs.core.first(arglist__34232);
arglist__34232 = cljs.core.next(arglist__34232);
var y = cljs.core.first(arglist__34232);
arglist__34232 = cljs.core.next(arglist__34232);
var z = cljs.core.first(arglist__34232);
var args = cljs.core.rest(arglist__34232);
return G__34230__delegate(x,y,z,args);
});
G__34230.cljs$core$IFn$_invoke$arity$variadic = G__34230__delegate;
return G__34230;
})()
;
G__34229 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34229__0.call(this);
case 1:
return G__34229__1.call(this,x);
case 2:
return G__34229__2.call(this,x,y);
case 3:
return G__34229__3.call(this,x,y,z);
default:
var G__34233 = null;
if (arguments.length > 3) {
var G__34234__i = 0, G__34234__a = new Array(arguments.length -  3);
while (G__34234__i < G__34234__a.length) {G__34234__a[G__34234__i] = arguments[G__34234__i + 3]; ++G__34234__i;}
G__34233 = new cljs.core.IndexedSeq(G__34234__a,0);
}
return G__34229__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34229.cljs$lang$maxFixedArity = 3;
G__34229.cljs$lang$applyTo = G__34229__4.cljs$lang$applyTo;
G__34229.cljs$core$IFn$_invoke$arity$0 = G__34229__0;
G__34229.cljs$core$IFn$_invoke$arity$1 = G__34229__1;
G__34229.cljs$core$IFn$_invoke$arity$2 = G__34229__2;
G__34229.cljs$core$IFn$_invoke$arity$3 = G__34229__3;
G__34229.cljs$core$IFn$_invoke$arity$variadic = G__34229__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34229;
})()
});
var juxt__4 = (function() { 
var G__34235__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__34236 = null;
var G__34236__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34123_SHARP_,p2__34124_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34123_SHARP_,(function (){return (p2__34124_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__34124_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__34124_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34236__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34125_SHARP_,p2__34126_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34125_SHARP_,(function (){var G__34211 = x;
return (p2__34126_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__34126_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34211) : p2__34126_SHARP_.call(null,G__34211));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34236__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34127_SHARP_,p2__34128_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34127_SHARP_,(function (){var G__34212 = x;
var G__34213 = y;
return (p2__34128_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__34128_SHARP_.cljs$core$IFn$_invoke$arity$2(G__34212,G__34213) : p2__34128_SHARP_.call(null,G__34212,G__34213));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34236__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34129_SHARP_,p2__34130_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34129_SHARP_,(function (){var G__34214 = x;
var G__34215 = y;
var G__34216 = z;
return (p2__34130_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__34130_SHARP_.cljs$core$IFn$_invoke$arity$3(G__34214,G__34215,G__34216) : p2__34130_SHARP_.call(null,G__34214,G__34215,G__34216));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34236__4 = (function() { 
var G__34237__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34131_SHARP_,p2__34132_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34131_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__34132_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__34237 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34238__i = 0, G__34238__a = new Array(arguments.length -  3);
while (G__34238__i < G__34238__a.length) {G__34238__a[G__34238__i] = arguments[G__34238__i + 3]; ++G__34238__i;}
  args = new cljs.core.IndexedSeq(G__34238__a,0);
} 
return G__34237__delegate.call(this,x,y,z,args);};
G__34237.cljs$lang$maxFixedArity = 3;
G__34237.cljs$lang$applyTo = (function (arglist__34239){
var x = cljs.core.first(arglist__34239);
arglist__34239 = cljs.core.next(arglist__34239);
var y = cljs.core.first(arglist__34239);
arglist__34239 = cljs.core.next(arglist__34239);
var z = cljs.core.first(arglist__34239);
var args = cljs.core.rest(arglist__34239);
return G__34237__delegate(x,y,z,args);
});
G__34237.cljs$core$IFn$_invoke$arity$variadic = G__34237__delegate;
return G__34237;
})()
;
G__34236 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34236__0.call(this);
case 1:
return G__34236__1.call(this,x);
case 2:
return G__34236__2.call(this,x,y);
case 3:
return G__34236__3.call(this,x,y,z);
default:
var G__34240 = null;
if (arguments.length > 3) {
var G__34241__i = 0, G__34241__a = new Array(arguments.length -  3);
while (G__34241__i < G__34241__a.length) {G__34241__a[G__34241__i] = arguments[G__34241__i + 3]; ++G__34241__i;}
G__34240 = new cljs.core.IndexedSeq(G__34241__a,0);
}
return G__34236__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34236.cljs$lang$maxFixedArity = 3;
G__34236.cljs$lang$applyTo = G__34236__4.cljs$lang$applyTo;
G__34236.cljs$core$IFn$_invoke$arity$0 = G__34236__0;
G__34236.cljs$core$IFn$_invoke$arity$1 = G__34236__1;
G__34236.cljs$core$IFn$_invoke$arity$2 = G__34236__2;
G__34236.cljs$core$IFn$_invoke$arity$3 = G__34236__3;
G__34236.cljs$core$IFn$_invoke$arity$variadic = G__34236__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34236;
})()
;})(fs__$1))
};
var G__34235 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34242__i = 0, G__34242__a = new Array(arguments.length -  3);
while (G__34242__i < G__34242__a.length) {G__34242__a[G__34242__i] = arguments[G__34242__i + 3]; ++G__34242__i;}
  fs = new cljs.core.IndexedSeq(G__34242__a,0);
} 
return G__34235__delegate.call(this,f,g,h,fs);};
G__34235.cljs$lang$maxFixedArity = 3;
G__34235.cljs$lang$applyTo = (function (arglist__34243){
var f = cljs.core.first(arglist__34243);
arglist__34243 = cljs.core.next(arglist__34243);
var g = cljs.core.first(arglist__34243);
arglist__34243 = cljs.core.next(arglist__34243);
var h = cljs.core.first(arglist__34243);
var fs = cljs.core.rest(arglist__34243);
return G__34235__delegate(f,g,h,fs);
});
G__34235.cljs$core$IFn$_invoke$arity$variadic = G__34235__delegate;
return G__34235;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__34244 = null;
if (arguments.length > 3) {
var G__34245__i = 0, G__34245__a = new Array(arguments.length -  3);
while (G__34245__i < G__34245__a.length) {G__34245__a[G__34245__i] = arguments[G__34245__i + 3]; ++G__34245__i;}
G__34244 = new cljs.core.IndexedSeq(G__34245__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__34244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__34246 = cljs.core.next(coll);
coll = G__34246;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__34247 = (n - (1));
var G__34248 = cljs.core.next(coll);
n = G__34247;
coll = G__34248;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__34252 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34252,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34252,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34252,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_34260 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__34261_34267 = cljs.core.first(coll);
var G__34262_34268 = writer;
var G__34263_34269 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34261_34267,G__34262_34268,G__34263_34269) : print_one.call(null,G__34261_34267,G__34262_34268,G__34263_34269));
} else {
}

var coll_34270__$1 = cljs.core.next(coll);
var n_34271 = (cljs.core.constant$keyword$69.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_34270__$1) && (((n_34271 == null)) || (!((n_34271 === (0)))))){
cljs.core._write(writer,sep);

var G__34264_34272 = cljs.core.first(coll_34270__$1);
var G__34265_34273 = writer;
var G__34266_34274 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34264_34272,G__34265_34273,G__34266_34274) : print_one.call(null,G__34264_34272,G__34265_34273,G__34266_34274));

var G__34275 = cljs.core.next(coll_34270__$1);
var G__34276 = (n_34271 - (1));
coll_34270__$1 = G__34275;
n_34271 = G__34276;
continue;
} else {
if((cljs.core.seq(coll_34270__$1)) && ((n_34271 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_34260;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__34281 = cljs.core.seq(ss);
var chunk__34282 = null;
var count__34283 = (0);
var i__34284 = (0);
while(true){
if((i__34284 < count__34283)){
var s = chunk__34282.cljs$core$IIndexed$_nth$arity$2(null,i__34284);
cljs.core._write(writer,s);

var G__34285 = seq__34281;
var G__34286 = chunk__34282;
var G__34287 = count__34283;
var G__34288 = (i__34284 + (1));
seq__34281 = G__34285;
chunk__34282 = G__34286;
count__34283 = G__34287;
i__34284 = G__34288;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34281);
if(temp__4126__auto__){
var seq__34281__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34281__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__34281__$1);
var G__34289 = cljs.core.chunk_rest(seq__34281__$1);
var G__34290 = c__4598__auto__;
var G__34291 = cljs.core.count(c__4598__auto__);
var G__34292 = (0);
seq__34281 = G__34289;
chunk__34282 = G__34290;
count__34283 = G__34291;
i__34284 = G__34292;
continue;
} else {
var s = cljs.core.first(seq__34281__$1);
cljs.core._write(writer,s);

var G__34293 = cljs.core.next(seq__34281__$1);
var G__34294 = null;
var G__34295 = (0);
var G__34296 = (0);
seq__34281 = G__34293;
chunk__34282 = G__34294;
count__34283 = G__34295;
i__34284 = G__34296;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__34297__i = 0, G__34297__a = new Array(arguments.length -  1);
while (G__34297__i < G__34297__a.length) {G__34297__a[G__34297__i] = arguments[G__34297__i + 1]; ++G__34297__i;}
  ss = new cljs.core.IndexedSeq(G__34297__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__34298){
var writer = cljs.core.first(arglist__34298);
var ss = cljs.core.rest(arglist__34298);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj34300 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj34300;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__34303 = "[\\\\\"\b\f\n\r\t]";
var G__34304 = "g";
return RegExp(G__34303,G__34304);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$67);
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__34318 = obj;
if(G__34318){
var bit__4492__auto__ = (G__34318.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__34318.cljs$core$IMeta$)){
return true;
} else {
if((!G__34318.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__34318);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__34318);
}
})();
if(and__3799__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__34319 = obj;
if(G__34319){
var bit__4485__auto__ = (G__34319.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4485__auto__) || (G__34319.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__34320 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__34321 = pr_writer;
var G__34322 = writer;
var G__34323 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__34320,G__34321,G__34322,G__34323) : cljs.core.print_map.call(null,G__34320,G__34321,G__34322,G__34323));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__34324 = obj;
return goog.isString(G__34324);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$66.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__34326 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__34326;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__34325 = obj;
if(G__34325){
var bit__4492__auto__ = (G__34325.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4492__auto__) || (G__34325.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__34325.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__34325);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__34325);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__34331 = cljs.core.seq(cljs.core.next(objs));
var chunk__34332 = null;
var count__34333 = (0);
var i__34334 = (0);
while(true){
if((i__34334 < count__34333)){
var obj = chunk__34332.cljs$core$IIndexed$_nth$arity$2(null,i__34334);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__34335 = seq__34331;
var G__34336 = chunk__34332;
var G__34337 = count__34333;
var G__34338 = (i__34334 + (1));
seq__34331 = G__34335;
chunk__34332 = G__34336;
count__34333 = G__34337;
i__34334 = G__34338;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34331);
if(temp__4126__auto__){
var seq__34331__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34331__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__34331__$1);
var G__34339 = cljs.core.chunk_rest(seq__34331__$1);
var G__34340 = c__4598__auto__;
var G__34341 = cljs.core.count(c__4598__auto__);
var G__34342 = (0);
seq__34331 = G__34339;
chunk__34332 = G__34340;
count__34333 = G__34341;
i__34334 = G__34342;
continue;
} else {
var obj = cljs.core.first(seq__34331__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__34343 = cljs.core.next(seq__34331__$1);
var G__34344 = null;
var G__34345 = (0);
var G__34346 = (0);
seq__34331 = G__34343;
chunk__34332 = G__34344;
count__34333 = G__34345;
i__34334 = G__34346;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$65))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34347__i = 0, G__34347__a = new Array(arguments.length -  0);
while (G__34347__i < G__34347__a.length) {G__34347__a[G__34347__i] = arguments[G__34347__i + 0]; ++G__34347__i;}
  objs = new cljs.core.IndexedSeq(G__34347__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__34348){
var objs = cljs.core.seq(arglist__34348);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34349__i = 0, G__34349__a = new Array(arguments.length -  0);
while (G__34349__i < G__34349__a.length) {G__34349__a[G__34349__i] = arguments[G__34349__i + 0]; ++G__34349__i;}
  objs = new cljs.core.IndexedSeq(G__34349__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__34350){
var objs = cljs.core.seq(arglist__34350);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34351__i = 0, G__34351__a = new Array(arguments.length -  0);
while (G__34351__i < G__34351__a.length) {G__34351__a[G__34351__i] = arguments[G__34351__i + 0]; ++G__34351__i;}
  objs = new cljs.core.IndexedSeq(G__34351__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__34352){
var objs = cljs.core.seq(arglist__34352);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$66,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34353__i = 0, G__34353__a = new Array(arguments.length -  0);
while (G__34353__i < G__34353__a.length) {G__34353__a[G__34353__i] = arguments[G__34353__i + 0]; ++G__34353__i;}
  objs = new cljs.core.IndexedSeq(G__34353__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__34354){
var objs = cljs.core.seq(arglist__34354);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$66,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34355__i = 0, G__34355__a = new Array(arguments.length -  0);
while (G__34355__i < G__34355__a.length) {G__34355__a[G__34355__i] = arguments[G__34355__i + 0]; ++G__34355__i;}
  objs = new cljs.core.IndexedSeq(G__34355__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__34356){
var objs = cljs.core.seq(arglist__34356);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$66,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34357__i = 0, G__34357__a = new Array(arguments.length -  0);
while (G__34357__i < G__34357__a.length) {G__34357__a[G__34357__i] = arguments[G__34357__i + 0]; ++G__34357__i;}
  objs = new cljs.core.IndexedSeq(G__34357__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__34358){
var objs = cljs.core.seq(arglist__34358);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$66,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34359__i = 0, G__34359__a = new Array(arguments.length -  0);
while (G__34359__i < G__34359__a.length) {G__34359__a[G__34359__i] = arguments[G__34359__i + 0]; ++G__34359__i;}
  objs = new cljs.core.IndexedSeq(G__34359__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__34360){
var objs = cljs.core.seq(arglist__34360);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34361__i = 0, G__34361__a = new Array(arguments.length -  0);
while (G__34361__i < G__34361__a.length) {G__34361__a[G__34361__i] = arguments[G__34361__i + 0]; ++G__34361__i;}
  objs = new cljs.core.IndexedSeq(G__34361__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__34362){
var objs = cljs.core.seq(arglist__34362);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__34369_34375 = cljs.core.key(e);
var G__34370_34376 = w;
var G__34371_34377 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34369_34375,G__34370_34376,G__34371_34377) : print_one.call(null,G__34369_34375,G__34370_34376,G__34371_34377));

cljs.core._write(w," ");

var G__34372 = cljs.core.val(e);
var G__34373 = w;
var G__34374 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34372,G__34373,G__34374) : print_one.call(null,G__34372,G__34373,G__34374));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__34378__i = 0, G__34378__a = new Array(arguments.length -  2);
while (G__34378__i < G__34378__a.length) {G__34378__a[G__34378__i] = arguments[G__34378__i + 2]; ++G__34378__i;}
  args = new cljs.core.IndexedSeq(G__34378__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__34379){
var iref = cljs.core.first(arglist__34379);
arglist__34379 = cljs.core.next(arglist__34379);
var f = cljs.core.first(arglist__34379);
var args = cljs.core.rest(arglist__34379);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__34382 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34382) : cljs.core.atom.call(null,G__34382));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__34384 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34384) : cljs.core.deref.call(null,G__34384));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__34385_SHARP_,p2__34386_SHARP_){
var ret = (function (){var G__34389 = p1__34385_SHARP_;
var G__34390 = p2__34386_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34389,G__34390) : rf.call(null,G__34389,G__34390));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__34393 = null;
var G__34393__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34393__1 = (function (result){
var G__34392 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34392) : rf.call(null,G__34392));
});
var G__34393__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__34393 = function(result,input){
switch(arguments.length){
case 0:
return G__34393__0.call(this);
case 1:
return G__34393__1.call(this,result);
case 2:
return G__34393__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34393.cljs$core$IFn$_invoke$arity$0 = G__34393__0;
G__34393.cljs$core$IFn$_invoke$arity$1 = G__34393__1;
G__34393.cljs$core$IFn$_invoke$arity$2 = G__34393__2;
return G__34393;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$79);
return ((function (pa){
return (function() {
var G__34402 = null;
var G__34402__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34402__1 = (function (result){
var G__34398 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34398) : rf.call(null,G__34398));
});
var G__34402__2 = (function (result,input){
var prior = (function (){var G__34399 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34399) : cljs.core.deref.call(null,G__34399));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__34400 = result;
var G__34401 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34400,G__34401) : rf.call(null,G__34400,G__34401));
}
});
G__34402 = function(result,input){
switch(arguments.length){
case 0:
return G__34402__0.call(this);
case 1:
return G__34402__1.call(this,result);
case 2:
return G__34402__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34402.cljs$core$IFn$_invoke$arity$0 = G__34402__0;
G__34402.cljs$core$IFn$_invoke$arity$1 = G__34402__1;
G__34402.cljs$core$IFn$_invoke$arity$2 = G__34402__2;
return G__34402;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34404_SHARP_,p2__34403_SHARP_){
var G__34406 = p2__34403_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__34406) : proc.call(null,G__34406));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj34408 = {};
return obj34408;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._clj__GT_js[(function (){var G__34412 = x__4455__auto__;
return goog.typeOf(G__34412);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._key__GT_js[(function (){var G__34416 = x__4455__auto__;
return goog.typeOf(G__34416);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__34419 = k;
if(G__34419){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__34419.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__34419.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34419);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34419);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__34420 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__34420) : cljs.core.clj__GT_js.call(null,G__34420));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__34436 = x;
if(G__34436){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__34436.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__34436.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34436);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34436);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj34438 = {};
return obj34438;
})();
var seq__34439_34449 = cljs.core.seq(x);
var chunk__34440_34450 = null;
var count__34441_34451 = (0);
var i__34442_34452 = (0);
while(true){
if((i__34442_34452 < count__34441_34451)){
var vec__34443_34453 = chunk__34440_34450.cljs$core$IIndexed$_nth$arity$2(null,i__34442_34452);
var k_34454 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34443_34453,(0),null);
var v_34455 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34443_34453,(1),null);
(m[cljs.core.key__GT_js(k_34454)] = clj__GT_js(v_34455));

var G__34456 = seq__34439_34449;
var G__34457 = chunk__34440_34450;
var G__34458 = count__34441_34451;
var G__34459 = (i__34442_34452 + (1));
seq__34439_34449 = G__34456;
chunk__34440_34450 = G__34457;
count__34441_34451 = G__34458;
i__34442_34452 = G__34459;
continue;
} else {
var temp__4126__auto___34460 = cljs.core.seq(seq__34439_34449);
if(temp__4126__auto___34460){
var seq__34439_34461__$1 = temp__4126__auto___34460;
if(cljs.core.chunked_seq_QMARK_(seq__34439_34461__$1)){
var c__4598__auto___34462 = cljs.core.chunk_first(seq__34439_34461__$1);
var G__34463 = cljs.core.chunk_rest(seq__34439_34461__$1);
var G__34464 = c__4598__auto___34462;
var G__34465 = cljs.core.count(c__4598__auto___34462);
var G__34466 = (0);
seq__34439_34449 = G__34463;
chunk__34440_34450 = G__34464;
count__34441_34451 = G__34465;
i__34442_34452 = G__34466;
continue;
} else {
var vec__34444_34467 = cljs.core.first(seq__34439_34461__$1);
var k_34468 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34444_34467,(0),null);
var v_34469 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34444_34467,(1),null);
(m[cljs.core.key__GT_js(k_34468)] = clj__GT_js(v_34469));

var G__34470 = cljs.core.next(seq__34439_34461__$1);
var G__34471 = null;
var G__34472 = (0);
var G__34473 = (0);
seq__34439_34449 = G__34470;
chunk__34440_34450 = G__34471;
count__34441_34451 = G__34472;
i__34442_34452 = G__34473;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__34445_34474 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__34446_34475 = null;
var count__34447_34476 = (0);
var i__34448_34477 = (0);
while(true){
if((i__34448_34477 < count__34447_34476)){
var x_34478__$1 = chunk__34446_34475.cljs$core$IIndexed$_nth$arity$2(null,i__34448_34477);
arr.push(x_34478__$1);

var G__34479 = seq__34445_34474;
var G__34480 = chunk__34446_34475;
var G__34481 = count__34447_34476;
var G__34482 = (i__34448_34477 + (1));
seq__34445_34474 = G__34479;
chunk__34446_34475 = G__34480;
count__34447_34476 = G__34481;
i__34448_34477 = G__34482;
continue;
} else {
var temp__4126__auto___34483 = cljs.core.seq(seq__34445_34474);
if(temp__4126__auto___34483){
var seq__34445_34484__$1 = temp__4126__auto___34483;
if(cljs.core.chunked_seq_QMARK_(seq__34445_34484__$1)){
var c__4598__auto___34485 = cljs.core.chunk_first(seq__34445_34484__$1);
var G__34486 = cljs.core.chunk_rest(seq__34445_34484__$1);
var G__34487 = c__4598__auto___34485;
var G__34488 = cljs.core.count(c__4598__auto___34485);
var G__34489 = (0);
seq__34445_34474 = G__34486;
chunk__34446_34475 = G__34487;
count__34447_34476 = G__34488;
i__34448_34477 = G__34489;
continue;
} else {
var x_34490__$1 = cljs.core.first(seq__34445_34484__$1);
arr.push(x_34490__$1);

var G__34491 = cljs.core.next(seq__34445_34484__$1);
var G__34492 = null;
var G__34493 = (0);
var G__34494 = (0);
seq__34445_34474 = G__34491;
chunk__34446_34475 = G__34492;
count__34447_34476 = G__34493;
i__34448_34477 = G__34494;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj34496 = {};
return obj34496;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._js__GT_clj[(function (){var G__34500 = x__4455__auto__;
return goog.typeOf(G__34500);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$80,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__34557__delegate = function (x,opts){
var map__34530 = opts;
var map__34530__$1 = ((cljs.core.seq_QMARK_(map__34530))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34530):map__34530);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34530__$1,cljs.core.constant$keyword$80);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__34530,map__34530__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__34546 = x__$1;
if(G__34546){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__34546.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__34546.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34546);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4567__auto__ = ((function (map__34530,map__34530__$1,keywordize_keys,keyfn){
return (function iter__34547(s__34548){
return (new cljs.core.LazySeq(null,((function (map__34530,map__34530__$1,keywordize_keys,keyfn){
return (function (){
var s__34548__$1 = s__34548;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__34548__$1);
if(temp__4126__auto__){
var s__34548__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__34548__$2)){
var c__4565__auto__ = cljs.core.chunk_first(s__34548__$2);
var size__4566__auto__ = cljs.core.count(c__4565__auto__);
var b__34550 = cljs.core.chunk_buffer(size__4566__auto__);
if((function (){var i__34549 = (0);
while(true){
if((i__34549 < size__4566__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4565__auto__,i__34549);
cljs.core.chunk_append(b__34550,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34555 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34555) : keyfn.call(null,G__34555));
})(),thisfn((x__$1[k]))], null));

var G__34558 = (i__34549 + (1));
i__34549 = G__34558;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__34550),iter__34547(cljs.core.chunk_rest(s__34548__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__34550),null);
}
} else {
var k = cljs.core.first(s__34548__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34556 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34556) : keyfn.call(null,G__34556));
})(),thisfn((x__$1[k]))], null),iter__34547(cljs.core.rest(s__34548__$2)));
}
} else {
return null;
}
break;
}
});})(map__34530,map__34530__$1,keywordize_keys,keyfn))
,null,null));
});})(map__34530,map__34530__$1,keywordize_keys,keyfn))
;
return iter__4567__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__34530,map__34530__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__34557 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__34559__i = 0, G__34559__a = new Array(arguments.length -  1);
while (G__34559__i < G__34559__a.length) {G__34559__a[G__34559__i] = arguments[G__34559__i + 1]; ++G__34559__i;}
  opts = new cljs.core.IndexedSeq(G__34559__a,0);
} 
return G__34557__delegate.call(this,x,opts);};
G__34557.cljs$lang$maxFixedArity = 1;
G__34557.cljs$lang$applyTo = (function (arglist__34560){
var x = cljs.core.first(arglist__34560);
var opts = cljs.core.rest(arglist__34560);
return G__34557__delegate(x,opts);
});
G__34557.cljs$core$IFn$_invoke$arity$variadic = G__34557__delegate;
return G__34557;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__34561 = null;
if (arguments.length > 1) {
var G__34562__i = 0, G__34562__a = new Array(arguments.length -  1);
while (G__34562__i < G__34562__a.length) {G__34562__a[G__34562__i] = arguments[G__34562__i + 1]; ++G__34562__i;}
G__34561 = new cljs.core.IndexedSeq(G__34562__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__34565 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34565) : cljs.core.atom.call(null,G__34565));
})();
return ((function (mem){
return (function() { 
var G__34567__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__34566 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34566) : cljs.core.deref.call(null,G__34566));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__34567 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34568__i = 0, G__34568__a = new Array(arguments.length -  0);
while (G__34568__i < G__34568__a.length) {G__34568__a[G__34568__i] = arguments[G__34568__i + 0]; ++G__34568__i;}
  args = new cljs.core.IndexedSeq(G__34568__a,0);
} 
return G__34567__delegate.call(this,args);};
G__34567.cljs$lang$maxFixedArity = 0;
G__34567.cljs$lang$applyTo = (function (arglist__34569){
var args = cljs.core.seq(arglist__34569);
return G__34567__delegate(args);
});
G__34567.cljs$core$IFn$_invoke$arity$variadic = G__34567__delegate;
return G__34567;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__34571 = ret;
f = G__34571;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__34572__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__34572 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34573__i = 0, G__34573__a = new Array(arguments.length -  1);
while (G__34573__i < G__34573__a.length) {G__34573__a[G__34573__i] = arguments[G__34573__i + 1]; ++G__34573__i;}
  args = new cljs.core.IndexedSeq(G__34573__a,0);
} 
return G__34572__delegate.call(this,f,args);};
G__34572.cljs$lang$maxFixedArity = 1;
G__34572.cljs$lang$applyTo = (function (arglist__34574){
var f = cljs.core.first(arglist__34574);
var args = cljs.core.rest(arglist__34574);
return G__34572__delegate(f,args);
});
G__34572.cljs$core$IFn$_invoke$arity$variadic = G__34572__delegate;
return G__34572;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__34575 = null;
if (arguments.length > 1) {
var G__34576__i = 0, G__34576__a = new Array(arguments.length -  1);
while (G__34576__i < G__34576__a.length) {G__34576__a[G__34576__i] = arguments[G__34576__i + 1]; ++G__34576__i;}
G__34575 = new cljs.core.IndexedSeq(G__34576__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__34579 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__34579) : Math.floor.call(null,G__34579));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__34581 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34581) : f.call(null,G__34581));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$81,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$82,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$83,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__34583 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34583) : cljs.core.atom.call(null,G__34583));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34584__i = 0, G__34584__a = new Array(arguments.length -  1);
while (G__34584__i < G__34584__a.length) {G__34584__a[G__34584__i] = arguments[G__34584__i + 1]; ++G__34584__i;}
  args = new cljs.core.IndexedSeq(G__34584__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__34585){
var f = cljs.core.first(arglist__34585);
var args = cljs.core.rest(arglist__34585);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34650 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34650) : cljs.core.deref.call(null,G__34650));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3811__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$83.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
var and__3799__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3799__auto__){
var and__3799__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3799__auto____$1){
var and__3799__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3799__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__34675 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__34673 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__34673) : child.call(null,G__34673));
})(),(function (){var G__34674 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__34674) : parent.call(null,G__34674));
})());
var G__34676 = (i + (1));
ret = G__34675;
i = G__34676;
continue;
}
break;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__34680 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34680) : cljs.core.deref.call(null,G__34680));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$81.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__34684 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34684) : cljs.core.deref.call(null,G__34684));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$83.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__34688 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34688) : cljs.core.deref.call(null,G__34688));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$82.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$81.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$82.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$83.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__34697 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__34697) : targets.call(null,G__34697));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__34698 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__34698) : sources.call(null,G__34698));
})()));
});})(tp,td,ta))
;
var or__3811__auto__ = ((cljs.core.contains_QMARK_((function (){var G__34702 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__34702) : tp.call(null,G__34702));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__34703 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34703) : ta.call(null,G__34703));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__34704 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34704) : ta.call(null,G__34704));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$81,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$81.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$83,tf(cljs.core.constant$keyword$83.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$82,tf(cljs.core.constant$keyword$82.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$81.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__34711 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34711) : parentMap.call(null,G__34711));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__34712 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34712) : parentMap.call(null,G__34712));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__34705_SHARP_){
return cljs.core.cons(cljs.core.first(p1__34705_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__34705_SHARP_),cljs.core.second(p1__34705_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__34713 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34713) : parentMap.call(null,G__34713));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__34706_SHARP_,p2__34707_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__34706_SHARP_,p2__34707_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__34716 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34716) : cljs.core.deref.call(null,G__34716));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__34717 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34717) : cljs.core.deref.call(null,G__34717));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__34733 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34733) : cljs.core.deref.call(null,G__34733));
})().call(null,x);
var or__3811__auto__ = (cljs.core.truth_((function (){var and__3799__auto__ = xprefs;
if(cljs.core.truth_(and__3799__auto__)){
var G__34735 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__34735) : xprefs.call(null,G__34735));
} else {
return and__3799__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__34736 = cljs.core.rest(ps);
ps = G__34736;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__34737 = cljs.core.rest(ps);
ps = G__34737;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3811__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__34751){
var vec__34752 = p__34751;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34752,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34752,(1),null);
var e = vec__34752;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34753 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34753) : cljs.core.deref.call(null,G__34753));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3811__auto__ = (be == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__34754 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34754) : cljs.core.deref.call(null,G__34754));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34755 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34755) : cljs.core.deref.call(null,G__34755));
})(),(function (){var G__34756 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34756) : cljs.core.deref.call(null,G__34756));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj34758 = {};
return obj34758;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._reset[(function (){var G__34762 = x__4455__auto__;
return goog.typeOf(G__34762);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._add_method[(function (){var G__34766 = x__4455__auto__;
return goog.typeOf(G__34766);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._remove_method[(function (){var G__34770 = x__4455__auto__;
return goog.typeOf(G__34770);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefer_method[(function (){var G__34774 = x__4455__auto__;
return goog.typeOf(G__34774);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._get_method[(function (){var G__34778 = x__4455__auto__;
return goog.typeOf(G__34778);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._get_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._methods[(function (){var G__34782 = x__4455__auto__;
return goog.typeOf(G__34782);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._methods["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefers[(function (){var G__34786 = x__4455__auto__;
return goog.typeOf(G__34786);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefers["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34788 = this$__$1;
return goog.getUid(G__34788);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34789 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34789) : cljs.core.deref.call(null,G__34789));
})(),(function (){var G__34790 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34790) : cljs.core.deref.call(null,G__34790));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__34791 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34791) : cljs.core.deref.call(null,G__34791));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__34792 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34792) : cljs.core.deref.call(null,G__34792));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34793 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34793) : cljs.core.deref.call(null,G__34793));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34794 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34794) : cljs.core.deref.call(null,G__34794));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__35635 = null;
var G__35635__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__35635__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34795 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__34795) : self__.dispatch_fn.call(null,G__34795));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34796 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__34796) : target_fn.call(null,G__34796));
});
var G__35635__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34797 = a;
var G__34798 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__34797,G__34798) : self__.dispatch_fn.call(null,G__34797,G__34798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34799 = a;
var G__34800 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__34799,G__34800) : target_fn.call(null,G__34799,G__34800));
});
var G__35635__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34801 = a;
var G__34802 = b;
var G__34803 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__34801,G__34802,G__34803) : self__.dispatch_fn.call(null,G__34801,G__34802,G__34803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34804 = a;
var G__34805 = b;
var G__34806 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__34804,G__34805,G__34806) : target_fn.call(null,G__34804,G__34805,G__34806));
});
var G__35635__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34807 = a;
var G__34808 = b;
var G__34809 = c;
var G__34810 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__34807,G__34808,G__34809,G__34810) : self__.dispatch_fn.call(null,G__34807,G__34808,G__34809,G__34810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34811 = a;
var G__34812 = b;
var G__34813 = c;
var G__34814 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__34811,G__34812,G__34813,G__34814) : target_fn.call(null,G__34811,G__34812,G__34813,G__34814));
});
var G__35635__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34815 = a;
var G__34816 = b;
var G__34817 = c;
var G__34818 = d;
var G__34819 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__34815,G__34816,G__34817,G__34818,G__34819) : self__.dispatch_fn.call(null,G__34815,G__34816,G__34817,G__34818,G__34819));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34820 = a;
var G__34821 = b;
var G__34822 = c;
var G__34823 = d;
var G__34824 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__34820,G__34821,G__34822,G__34823,G__34824) : target_fn.call(null,G__34820,G__34821,G__34822,G__34823,G__34824));
});
var G__35635__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34825 = a;
var G__34826 = b;
var G__34827 = c;
var G__34828 = d;
var G__34829 = e;
var G__34830 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__34825,G__34826,G__34827,G__34828,G__34829,G__34830) : self__.dispatch_fn.call(null,G__34825,G__34826,G__34827,G__34828,G__34829,G__34830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34831 = a;
var G__34832 = b;
var G__34833 = c;
var G__34834 = d;
var G__34835 = e;
var G__34836 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__34831,G__34832,G__34833,G__34834,G__34835,G__34836) : target_fn.call(null,G__34831,G__34832,G__34833,G__34834,G__34835,G__34836));
});
var G__35635__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34837 = a;
var G__34838 = b;
var G__34839 = c;
var G__34840 = d;
var G__34841 = e;
var G__34842 = f;
var G__34843 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__34837,G__34838,G__34839,G__34840,G__34841,G__34842,G__34843) : self__.dispatch_fn.call(null,G__34837,G__34838,G__34839,G__34840,G__34841,G__34842,G__34843));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34844 = a;
var G__34845 = b;
var G__34846 = c;
var G__34847 = d;
var G__34848 = e;
var G__34849 = f;
var G__34850 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__34844,G__34845,G__34846,G__34847,G__34848,G__34849,G__34850) : target_fn.call(null,G__34844,G__34845,G__34846,G__34847,G__34848,G__34849,G__34850));
});
var G__35635__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34851 = a;
var G__34852 = b;
var G__34853 = c;
var G__34854 = d;
var G__34855 = e;
var G__34856 = f;
var G__34857 = g;
var G__34858 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__34851,G__34852,G__34853,G__34854,G__34855,G__34856,G__34857,G__34858) : self__.dispatch_fn.call(null,G__34851,G__34852,G__34853,G__34854,G__34855,G__34856,G__34857,G__34858));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34859 = a;
var G__34860 = b;
var G__34861 = c;
var G__34862 = d;
var G__34863 = e;
var G__34864 = f;
var G__34865 = g;
var G__34866 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__34859,G__34860,G__34861,G__34862,G__34863,G__34864,G__34865,G__34866) : target_fn.call(null,G__34859,G__34860,G__34861,G__34862,G__34863,G__34864,G__34865,G__34866));
});
var G__35635__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34867 = a;
var G__34868 = b;
var G__34869 = c;
var G__34870 = d;
var G__34871 = e;
var G__34872 = f;
var G__34873 = g;
var G__34874 = h;
var G__34875 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__34867,G__34868,G__34869,G__34870,G__34871,G__34872,G__34873,G__34874,G__34875) : self__.dispatch_fn.call(null,G__34867,G__34868,G__34869,G__34870,G__34871,G__34872,G__34873,G__34874,G__34875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34876 = a;
var G__34877 = b;
var G__34878 = c;
var G__34879 = d;
var G__34880 = e;
var G__34881 = f;
var G__34882 = g;
var G__34883 = h;
var G__34884 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__34876,G__34877,G__34878,G__34879,G__34880,G__34881,G__34882,G__34883,G__34884) : target_fn.call(null,G__34876,G__34877,G__34878,G__34879,G__34880,G__34881,G__34882,G__34883,G__34884));
});
var G__35635__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34885 = a;
var G__34886 = b;
var G__34887 = c;
var G__34888 = d;
var G__34889 = e;
var G__34890 = f;
var G__34891 = g;
var G__34892 = h;
var G__34893 = i;
var G__34894 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__34885,G__34886,G__34887,G__34888,G__34889,G__34890,G__34891,G__34892,G__34893,G__34894) : self__.dispatch_fn.call(null,G__34885,G__34886,G__34887,G__34888,G__34889,G__34890,G__34891,G__34892,G__34893,G__34894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34895 = a;
var G__34896 = b;
var G__34897 = c;
var G__34898 = d;
var G__34899 = e;
var G__34900 = f;
var G__34901 = g;
var G__34902 = h;
var G__34903 = i;
var G__34904 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903,G__34904) : target_fn.call(null,G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903,G__34904));
});
var G__35635__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34905 = a;
var G__34906 = b;
var G__34907 = c;
var G__34908 = d;
var G__34909 = e;
var G__34910 = f;
var G__34911 = g;
var G__34912 = h;
var G__34913 = i;
var G__34914 = j;
var G__34915 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915) : self__.dispatch_fn.call(null,G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34916 = a;
var G__34917 = b;
var G__34918 = c;
var G__34919 = d;
var G__34920 = e;
var G__34921 = f;
var G__34922 = g;
var G__34923 = h;
var G__34924 = i;
var G__34925 = j;
var G__34926 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__34916,G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926) : target_fn.call(null,G__34916,G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926));
});
var G__35635__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34927 = a;
var G__34928 = b;
var G__34929 = c;
var G__34930 = d;
var G__34931 = e;
var G__34932 = f;
var G__34933 = g;
var G__34934 = h;
var G__34935 = i;
var G__34936 = j;
var G__34937 = k;
var G__34938 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__34927,G__34928,G__34929,G__34930,G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938) : self__.dispatch_fn.call(null,G__34927,G__34928,G__34929,G__34930,G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34939 = a;
var G__34940 = b;
var G__34941 = c;
var G__34942 = d;
var G__34943 = e;
var G__34944 = f;
var G__34945 = g;
var G__34946 = h;
var G__34947 = i;
var G__34948 = j;
var G__34949 = k;
var G__34950 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__34939,G__34940,G__34941,G__34942,G__34943,G__34944,G__34945,G__34946,G__34947,G__34948,G__34949,G__34950) : target_fn.call(null,G__34939,G__34940,G__34941,G__34942,G__34943,G__34944,G__34945,G__34946,G__34947,G__34948,G__34949,G__34950));
});
var G__35635__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34951 = a;
var G__34952 = b;
var G__34953 = c;
var G__34954 = d;
var G__34955 = e;
var G__34956 = f;
var G__34957 = g;
var G__34958 = h;
var G__34959 = i;
var G__34960 = j;
var G__34961 = k;
var G__34962 = l;
var G__34963 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959,G__34960,G__34961,G__34962,G__34963) : self__.dispatch_fn.call(null,G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959,G__34960,G__34961,G__34962,G__34963));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34964 = a;
var G__34965 = b;
var G__34966 = c;
var G__34967 = d;
var G__34968 = e;
var G__34969 = f;
var G__34970 = g;
var G__34971 = h;
var G__34972 = i;
var G__34973 = j;
var G__34974 = k;
var G__34975 = l;
var G__34976 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974,G__34975,G__34976) : target_fn.call(null,G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974,G__34975,G__34976));
});
var G__35635__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34977 = a;
var G__34978 = b;
var G__34979 = c;
var G__34980 = d;
var G__34981 = e;
var G__34982 = f;
var G__34983 = g;
var G__34984 = h;
var G__34985 = i;
var G__34986 = j;
var G__34987 = k;
var G__34988 = l;
var G__34989 = m;
var G__34990 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__34977,G__34978,G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990) : self__.dispatch_fn.call(null,G__34977,G__34978,G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34991 = a;
var G__34992 = b;
var G__34993 = c;
var G__34994 = d;
var G__34995 = e;
var G__34996 = f;
var G__34997 = g;
var G__34998 = h;
var G__34999 = i;
var G__35000 = j;
var G__35001 = k;
var G__35002 = l;
var G__35003 = m;
var G__35004 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__34991,G__34992,G__34993,G__34994,G__34995,G__34996,G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004) : target_fn.call(null,G__34991,G__34992,G__34993,G__34994,G__34995,G__34996,G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004));
});
var G__35635__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35005 = a;
var G__35006 = b;
var G__35007 = c;
var G__35008 = d;
var G__35009 = e;
var G__35010 = f;
var G__35011 = g;
var G__35012 = h;
var G__35013 = i;
var G__35014 = j;
var G__35015 = k;
var G__35016 = l;
var G__35017 = m;
var G__35018 = n;
var G__35019 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__35005,G__35006,G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015,G__35016,G__35017,G__35018,G__35019) : self__.dispatch_fn.call(null,G__35005,G__35006,G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015,G__35016,G__35017,G__35018,G__35019));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35020 = a;
var G__35021 = b;
var G__35022 = c;
var G__35023 = d;
var G__35024 = e;
var G__35025 = f;
var G__35026 = g;
var G__35027 = h;
var G__35028 = i;
var G__35029 = j;
var G__35030 = k;
var G__35031 = l;
var G__35032 = m;
var G__35033 = n;
var G__35034 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__35020,G__35021,G__35022,G__35023,G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034) : target_fn.call(null,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034));
});
var G__35635__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35035 = a;
var G__35036 = b;
var G__35037 = c;
var G__35038 = d;
var G__35039 = e;
var G__35040 = f;
var G__35041 = g;
var G__35042 = h;
var G__35043 = i;
var G__35044 = j;
var G__35045 = k;
var G__35046 = l;
var G__35047 = m;
var G__35048 = n;
var G__35049 = o;
var G__35050 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__35035,G__35036,G__35037,G__35038,G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050) : self__.dispatch_fn.call(null,G__35035,G__35036,G__35037,G__35038,G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35051 = a;
var G__35052 = b;
var G__35053 = c;
var G__35054 = d;
var G__35055 = e;
var G__35056 = f;
var G__35057 = g;
var G__35058 = h;
var G__35059 = i;
var G__35060 = j;
var G__35061 = k;
var G__35062 = l;
var G__35063 = m;
var G__35064 = n;
var G__35065 = o;
var G__35066 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057,G__35058,G__35059,G__35060,G__35061,G__35062,G__35063,G__35064,G__35065,G__35066) : target_fn.call(null,G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057,G__35058,G__35059,G__35060,G__35061,G__35062,G__35063,G__35064,G__35065,G__35066));
});
var G__35635__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35067 = a;
var G__35068 = b;
var G__35069 = c;
var G__35070 = d;
var G__35071 = e;
var G__35072 = f;
var G__35073 = g;
var G__35074 = h;
var G__35075 = i;
var G__35076 = j;
var G__35077 = k;
var G__35078 = l;
var G__35079 = m;
var G__35080 = n;
var G__35081 = o;
var G__35082 = p;
var G__35083 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35067,G__35068,G__35069,G__35070,G__35071,G__35072,G__35073,G__35074,G__35075,G__35076,G__35077,G__35078,G__35079,G__35080,G__35081,G__35082,G__35083) : self__.dispatch_fn.call(null,G__35067,G__35068,G__35069,G__35070,G__35071,G__35072,G__35073,G__35074,G__35075,G__35076,G__35077,G__35078,G__35079,G__35080,G__35081,G__35082,G__35083));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35084 = a;
var G__35085 = b;
var G__35086 = c;
var G__35087 = d;
var G__35088 = e;
var G__35089 = f;
var G__35090 = g;
var G__35091 = h;
var G__35092 = i;
var G__35093 = j;
var G__35094 = k;
var G__35095 = l;
var G__35096 = m;
var G__35097 = n;
var G__35098 = o;
var G__35099 = p;
var G__35100 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35084,G__35085,G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093,G__35094,G__35095,G__35096,G__35097,G__35098,G__35099,G__35100) : target_fn.call(null,G__35084,G__35085,G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093,G__35094,G__35095,G__35096,G__35097,G__35098,G__35099,G__35100));
});
var G__35635__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35101 = a;
var G__35102 = b;
var G__35103 = c;
var G__35104 = d;
var G__35105 = e;
var G__35106 = f;
var G__35107 = g;
var G__35108 = h;
var G__35109 = i;
var G__35110 = j;
var G__35111 = k;
var G__35112 = l;
var G__35113 = m;
var G__35114 = n;
var G__35115 = o;
var G__35116 = p;
var G__35117 = q;
var G__35118 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112,G__35113,G__35114,G__35115,G__35116,G__35117,G__35118) : self__.dispatch_fn.call(null,G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112,G__35113,G__35114,G__35115,G__35116,G__35117,G__35118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35119 = a;
var G__35120 = b;
var G__35121 = c;
var G__35122 = d;
var G__35123 = e;
var G__35124 = f;
var G__35125 = g;
var G__35126 = h;
var G__35127 = i;
var G__35128 = j;
var G__35129 = k;
var G__35130 = l;
var G__35131 = m;
var G__35132 = n;
var G__35133 = o;
var G__35134 = p;
var G__35135 = q;
var G__35136 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35119,G__35120,G__35121,G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134,G__35135,G__35136) : target_fn.call(null,G__35119,G__35120,G__35121,G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134,G__35135,G__35136));
});
var G__35635__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35137 = a;
var G__35138 = b;
var G__35139 = c;
var G__35140 = d;
var G__35141 = e;
var G__35142 = f;
var G__35143 = g;
var G__35144 = h;
var G__35145 = i;
var G__35146 = j;
var G__35147 = k;
var G__35148 = l;
var G__35149 = m;
var G__35150 = n;
var G__35151 = o;
var G__35152 = p;
var G__35153 = q;
var G__35154 = r;
var G__35155 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155) : self__.dispatch_fn.call(null,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35156 = a;
var G__35157 = b;
var G__35158 = c;
var G__35159 = d;
var G__35160 = e;
var G__35161 = f;
var G__35162 = g;
var G__35163 = h;
var G__35164 = i;
var G__35165 = j;
var G__35166 = k;
var G__35167 = l;
var G__35168 = m;
var G__35169 = n;
var G__35170 = o;
var G__35171 = p;
var G__35172 = q;
var G__35173 = r;
var G__35174 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35156,G__35157,G__35158,G__35159,G__35160,G__35161,G__35162,G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171,G__35172,G__35173,G__35174) : target_fn.call(null,G__35156,G__35157,G__35158,G__35159,G__35160,G__35161,G__35162,G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171,G__35172,G__35173,G__35174));
});
var G__35635__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35175 = a;
var G__35176 = b;
var G__35177 = c;
var G__35178 = d;
var G__35179 = e;
var G__35180 = f;
var G__35181 = g;
var G__35182 = h;
var G__35183 = i;
var G__35184 = j;
var G__35185 = k;
var G__35186 = l;
var G__35187 = m;
var G__35188 = n;
var G__35189 = o;
var G__35190 = p;
var G__35191 = q;
var G__35192 = r;
var G__35193 = s;
var G__35194 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35175,G__35176,G__35177,G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185,G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193,G__35194) : self__.dispatch_fn.call(null,G__35175,G__35176,G__35177,G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185,G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193,G__35194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35195 = a;
var G__35196 = b;
var G__35197 = c;
var G__35198 = d;
var G__35199 = e;
var G__35200 = f;
var G__35201 = g;
var G__35202 = h;
var G__35203 = i;
var G__35204 = j;
var G__35205 = k;
var G__35206 = l;
var G__35207 = m;
var G__35208 = n;
var G__35209 = o;
var G__35210 = p;
var G__35211 = q;
var G__35212 = r;
var G__35213 = s;
var G__35214 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35195,G__35196,G__35197,G__35198,G__35199,G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210,G__35211,G__35212,G__35213,G__35214) : target_fn.call(null,G__35195,G__35196,G__35197,G__35198,G__35199,G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210,G__35211,G__35212,G__35213,G__35214));
});
var G__35635__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__35635 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__35635__1.call(this,self__);
case 2:
return G__35635__2.call(this,self__,a);
case 3:
return G__35635__3.call(this,self__,a,b);
case 4:
return G__35635__4.call(this,self__,a,b,c);
case 5:
return G__35635__5.call(this,self__,a,b,c,d);
case 6:
return G__35635__6.call(this,self__,a,b,c,d,e);
case 7:
return G__35635__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__35635__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__35635__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__35635__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__35635__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__35635__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__35635__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__35635__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__35635__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__35635__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__35635__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__35635__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__35635__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__35635__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__35635__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__35635__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35635.cljs$core$IFn$_invoke$arity$1 = G__35635__1;
G__35635.cljs$core$IFn$_invoke$arity$2 = G__35635__2;
G__35635.cljs$core$IFn$_invoke$arity$3 = G__35635__3;
G__35635.cljs$core$IFn$_invoke$arity$4 = G__35635__4;
G__35635.cljs$core$IFn$_invoke$arity$5 = G__35635__5;
G__35635.cljs$core$IFn$_invoke$arity$6 = G__35635__6;
G__35635.cljs$core$IFn$_invoke$arity$7 = G__35635__7;
G__35635.cljs$core$IFn$_invoke$arity$8 = G__35635__8;
G__35635.cljs$core$IFn$_invoke$arity$9 = G__35635__9;
G__35635.cljs$core$IFn$_invoke$arity$10 = G__35635__10;
G__35635.cljs$core$IFn$_invoke$arity$11 = G__35635__11;
G__35635.cljs$core$IFn$_invoke$arity$12 = G__35635__12;
G__35635.cljs$core$IFn$_invoke$arity$13 = G__35635__13;
G__35635.cljs$core$IFn$_invoke$arity$14 = G__35635__14;
G__35635.cljs$core$IFn$_invoke$arity$15 = G__35635__15;
G__35635.cljs$core$IFn$_invoke$arity$16 = G__35635__16;
G__35635.cljs$core$IFn$_invoke$arity$17 = G__35635__17;
G__35635.cljs$core$IFn$_invoke$arity$18 = G__35635__18;
G__35635.cljs$core$IFn$_invoke$arity$19 = G__35635__19;
G__35635.cljs$core$IFn$_invoke$arity$20 = G__35635__20;
G__35635.cljs$core$IFn$_invoke$arity$21 = G__35635__21;
G__35635.cljs$core$IFn$_invoke$arity$22 = G__35635__22;
return G__35635;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args34787){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34787)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35215 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__35215) : self__.dispatch_fn.call(null,G__35215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35216 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__35216) : target_fn.call(null,G__35216));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35217 = a;
var G__35218 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__35217,G__35218) : self__.dispatch_fn.call(null,G__35217,G__35218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35219 = a;
var G__35220 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__35219,G__35220) : target_fn.call(null,G__35219,G__35220));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35221 = a;
var G__35222 = b;
var G__35223 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__35221,G__35222,G__35223) : self__.dispatch_fn.call(null,G__35221,G__35222,G__35223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35224 = a;
var G__35225 = b;
var G__35226 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__35224,G__35225,G__35226) : target_fn.call(null,G__35224,G__35225,G__35226));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35227 = a;
var G__35228 = b;
var G__35229 = c;
var G__35230 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35227,G__35228,G__35229,G__35230) : self__.dispatch_fn.call(null,G__35227,G__35228,G__35229,G__35230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35231 = a;
var G__35232 = b;
var G__35233 = c;
var G__35234 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35231,G__35232,G__35233,G__35234) : target_fn.call(null,G__35231,G__35232,G__35233,G__35234));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35235 = a;
var G__35236 = b;
var G__35237 = c;
var G__35238 = d;
var G__35239 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35235,G__35236,G__35237,G__35238,G__35239) : self__.dispatch_fn.call(null,G__35235,G__35236,G__35237,G__35238,G__35239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35240 = a;
var G__35241 = b;
var G__35242 = c;
var G__35243 = d;
var G__35244 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35240,G__35241,G__35242,G__35243,G__35244) : target_fn.call(null,G__35240,G__35241,G__35242,G__35243,G__35244));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35245 = a;
var G__35246 = b;
var G__35247 = c;
var G__35248 = d;
var G__35249 = e;
var G__35250 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35245,G__35246,G__35247,G__35248,G__35249,G__35250) : self__.dispatch_fn.call(null,G__35245,G__35246,G__35247,G__35248,G__35249,G__35250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35251 = a;
var G__35252 = b;
var G__35253 = c;
var G__35254 = d;
var G__35255 = e;
var G__35256 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35251,G__35252,G__35253,G__35254,G__35255,G__35256) : target_fn.call(null,G__35251,G__35252,G__35253,G__35254,G__35255,G__35256));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35257 = a;
var G__35258 = b;
var G__35259 = c;
var G__35260 = d;
var G__35261 = e;
var G__35262 = f;
var G__35263 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__35257,G__35258,G__35259,G__35260,G__35261,G__35262,G__35263) : self__.dispatch_fn.call(null,G__35257,G__35258,G__35259,G__35260,G__35261,G__35262,G__35263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35264 = a;
var G__35265 = b;
var G__35266 = c;
var G__35267 = d;
var G__35268 = e;
var G__35269 = f;
var G__35270 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__35264,G__35265,G__35266,G__35267,G__35268,G__35269,G__35270) : target_fn.call(null,G__35264,G__35265,G__35266,G__35267,G__35268,G__35269,G__35270));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35271 = a;
var G__35272 = b;
var G__35273 = c;
var G__35274 = d;
var G__35275 = e;
var G__35276 = f;
var G__35277 = g;
var G__35278 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278) : self__.dispatch_fn.call(null,G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35279 = a;
var G__35280 = b;
var G__35281 = c;
var G__35282 = d;
var G__35283 = e;
var G__35284 = f;
var G__35285 = g;
var G__35286 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286) : target_fn.call(null,G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35287 = a;
var G__35288 = b;
var G__35289 = c;
var G__35290 = d;
var G__35291 = e;
var G__35292 = f;
var G__35293 = g;
var G__35294 = h;
var G__35295 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__35287,G__35288,G__35289,G__35290,G__35291,G__35292,G__35293,G__35294,G__35295) : self__.dispatch_fn.call(null,G__35287,G__35288,G__35289,G__35290,G__35291,G__35292,G__35293,G__35294,G__35295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35296 = a;
var G__35297 = b;
var G__35298 = c;
var G__35299 = d;
var G__35300 = e;
var G__35301 = f;
var G__35302 = g;
var G__35303 = h;
var G__35304 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__35296,G__35297,G__35298,G__35299,G__35300,G__35301,G__35302,G__35303,G__35304) : target_fn.call(null,G__35296,G__35297,G__35298,G__35299,G__35300,G__35301,G__35302,G__35303,G__35304));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35305 = a;
var G__35306 = b;
var G__35307 = c;
var G__35308 = d;
var G__35309 = e;
var G__35310 = f;
var G__35311 = g;
var G__35312 = h;
var G__35313 = i;
var G__35314 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__35305,G__35306,G__35307,G__35308,G__35309,G__35310,G__35311,G__35312,G__35313,G__35314) : self__.dispatch_fn.call(null,G__35305,G__35306,G__35307,G__35308,G__35309,G__35310,G__35311,G__35312,G__35313,G__35314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35315 = a;
var G__35316 = b;
var G__35317 = c;
var G__35318 = d;
var G__35319 = e;
var G__35320 = f;
var G__35321 = g;
var G__35322 = h;
var G__35323 = i;
var G__35324 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__35315,G__35316,G__35317,G__35318,G__35319,G__35320,G__35321,G__35322,G__35323,G__35324) : target_fn.call(null,G__35315,G__35316,G__35317,G__35318,G__35319,G__35320,G__35321,G__35322,G__35323,G__35324));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35325 = a;
var G__35326 = b;
var G__35327 = c;
var G__35328 = d;
var G__35329 = e;
var G__35330 = f;
var G__35331 = g;
var G__35332 = h;
var G__35333 = i;
var G__35334 = j;
var G__35335 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__35325,G__35326,G__35327,G__35328,G__35329,G__35330,G__35331,G__35332,G__35333,G__35334,G__35335) : self__.dispatch_fn.call(null,G__35325,G__35326,G__35327,G__35328,G__35329,G__35330,G__35331,G__35332,G__35333,G__35334,G__35335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35336 = a;
var G__35337 = b;
var G__35338 = c;
var G__35339 = d;
var G__35340 = e;
var G__35341 = f;
var G__35342 = g;
var G__35343 = h;
var G__35344 = i;
var G__35345 = j;
var G__35346 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__35336,G__35337,G__35338,G__35339,G__35340,G__35341,G__35342,G__35343,G__35344,G__35345,G__35346) : target_fn.call(null,G__35336,G__35337,G__35338,G__35339,G__35340,G__35341,G__35342,G__35343,G__35344,G__35345,G__35346));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35347 = a;
var G__35348 = b;
var G__35349 = c;
var G__35350 = d;
var G__35351 = e;
var G__35352 = f;
var G__35353 = g;
var G__35354 = h;
var G__35355 = i;
var G__35356 = j;
var G__35357 = k;
var G__35358 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__35347,G__35348,G__35349,G__35350,G__35351,G__35352,G__35353,G__35354,G__35355,G__35356,G__35357,G__35358) : self__.dispatch_fn.call(null,G__35347,G__35348,G__35349,G__35350,G__35351,G__35352,G__35353,G__35354,G__35355,G__35356,G__35357,G__35358));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35359 = a;
var G__35360 = b;
var G__35361 = c;
var G__35362 = d;
var G__35363 = e;
var G__35364 = f;
var G__35365 = g;
var G__35366 = h;
var G__35367 = i;
var G__35368 = j;
var G__35369 = k;
var G__35370 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__35359,G__35360,G__35361,G__35362,G__35363,G__35364,G__35365,G__35366,G__35367,G__35368,G__35369,G__35370) : target_fn.call(null,G__35359,G__35360,G__35361,G__35362,G__35363,G__35364,G__35365,G__35366,G__35367,G__35368,G__35369,G__35370));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35371 = a;
var G__35372 = b;
var G__35373 = c;
var G__35374 = d;
var G__35375 = e;
var G__35376 = f;
var G__35377 = g;
var G__35378 = h;
var G__35379 = i;
var G__35380 = j;
var G__35381 = k;
var G__35382 = l;
var G__35383 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__35371,G__35372,G__35373,G__35374,G__35375,G__35376,G__35377,G__35378,G__35379,G__35380,G__35381,G__35382,G__35383) : self__.dispatch_fn.call(null,G__35371,G__35372,G__35373,G__35374,G__35375,G__35376,G__35377,G__35378,G__35379,G__35380,G__35381,G__35382,G__35383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35384 = a;
var G__35385 = b;
var G__35386 = c;
var G__35387 = d;
var G__35388 = e;
var G__35389 = f;
var G__35390 = g;
var G__35391 = h;
var G__35392 = i;
var G__35393 = j;
var G__35394 = k;
var G__35395 = l;
var G__35396 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__35384,G__35385,G__35386,G__35387,G__35388,G__35389,G__35390,G__35391,G__35392,G__35393,G__35394,G__35395,G__35396) : target_fn.call(null,G__35384,G__35385,G__35386,G__35387,G__35388,G__35389,G__35390,G__35391,G__35392,G__35393,G__35394,G__35395,G__35396));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35397 = a;
var G__35398 = b;
var G__35399 = c;
var G__35400 = d;
var G__35401 = e;
var G__35402 = f;
var G__35403 = g;
var G__35404 = h;
var G__35405 = i;
var G__35406 = j;
var G__35407 = k;
var G__35408 = l;
var G__35409 = m;
var G__35410 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__35397,G__35398,G__35399,G__35400,G__35401,G__35402,G__35403,G__35404,G__35405,G__35406,G__35407,G__35408,G__35409,G__35410) : self__.dispatch_fn.call(null,G__35397,G__35398,G__35399,G__35400,G__35401,G__35402,G__35403,G__35404,G__35405,G__35406,G__35407,G__35408,G__35409,G__35410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35411 = a;
var G__35412 = b;
var G__35413 = c;
var G__35414 = d;
var G__35415 = e;
var G__35416 = f;
var G__35417 = g;
var G__35418 = h;
var G__35419 = i;
var G__35420 = j;
var G__35421 = k;
var G__35422 = l;
var G__35423 = m;
var G__35424 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__35411,G__35412,G__35413,G__35414,G__35415,G__35416,G__35417,G__35418,G__35419,G__35420,G__35421,G__35422,G__35423,G__35424) : target_fn.call(null,G__35411,G__35412,G__35413,G__35414,G__35415,G__35416,G__35417,G__35418,G__35419,G__35420,G__35421,G__35422,G__35423,G__35424));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35425 = a;
var G__35426 = b;
var G__35427 = c;
var G__35428 = d;
var G__35429 = e;
var G__35430 = f;
var G__35431 = g;
var G__35432 = h;
var G__35433 = i;
var G__35434 = j;
var G__35435 = k;
var G__35436 = l;
var G__35437 = m;
var G__35438 = n;
var G__35439 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__35425,G__35426,G__35427,G__35428,G__35429,G__35430,G__35431,G__35432,G__35433,G__35434,G__35435,G__35436,G__35437,G__35438,G__35439) : self__.dispatch_fn.call(null,G__35425,G__35426,G__35427,G__35428,G__35429,G__35430,G__35431,G__35432,G__35433,G__35434,G__35435,G__35436,G__35437,G__35438,G__35439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35440 = a;
var G__35441 = b;
var G__35442 = c;
var G__35443 = d;
var G__35444 = e;
var G__35445 = f;
var G__35446 = g;
var G__35447 = h;
var G__35448 = i;
var G__35449 = j;
var G__35450 = k;
var G__35451 = l;
var G__35452 = m;
var G__35453 = n;
var G__35454 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__35440,G__35441,G__35442,G__35443,G__35444,G__35445,G__35446,G__35447,G__35448,G__35449,G__35450,G__35451,G__35452,G__35453,G__35454) : target_fn.call(null,G__35440,G__35441,G__35442,G__35443,G__35444,G__35445,G__35446,G__35447,G__35448,G__35449,G__35450,G__35451,G__35452,G__35453,G__35454));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35455 = a;
var G__35456 = b;
var G__35457 = c;
var G__35458 = d;
var G__35459 = e;
var G__35460 = f;
var G__35461 = g;
var G__35462 = h;
var G__35463 = i;
var G__35464 = j;
var G__35465 = k;
var G__35466 = l;
var G__35467 = m;
var G__35468 = n;
var G__35469 = o;
var G__35470 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__35455,G__35456,G__35457,G__35458,G__35459,G__35460,G__35461,G__35462,G__35463,G__35464,G__35465,G__35466,G__35467,G__35468,G__35469,G__35470) : self__.dispatch_fn.call(null,G__35455,G__35456,G__35457,G__35458,G__35459,G__35460,G__35461,G__35462,G__35463,G__35464,G__35465,G__35466,G__35467,G__35468,G__35469,G__35470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35471 = a;
var G__35472 = b;
var G__35473 = c;
var G__35474 = d;
var G__35475 = e;
var G__35476 = f;
var G__35477 = g;
var G__35478 = h;
var G__35479 = i;
var G__35480 = j;
var G__35481 = k;
var G__35482 = l;
var G__35483 = m;
var G__35484 = n;
var G__35485 = o;
var G__35486 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__35471,G__35472,G__35473,G__35474,G__35475,G__35476,G__35477,G__35478,G__35479,G__35480,G__35481,G__35482,G__35483,G__35484,G__35485,G__35486) : target_fn.call(null,G__35471,G__35472,G__35473,G__35474,G__35475,G__35476,G__35477,G__35478,G__35479,G__35480,G__35481,G__35482,G__35483,G__35484,G__35485,G__35486));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35487 = a;
var G__35488 = b;
var G__35489 = c;
var G__35490 = d;
var G__35491 = e;
var G__35492 = f;
var G__35493 = g;
var G__35494 = h;
var G__35495 = i;
var G__35496 = j;
var G__35497 = k;
var G__35498 = l;
var G__35499 = m;
var G__35500 = n;
var G__35501 = o;
var G__35502 = p;
var G__35503 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35487,G__35488,G__35489,G__35490,G__35491,G__35492,G__35493,G__35494,G__35495,G__35496,G__35497,G__35498,G__35499,G__35500,G__35501,G__35502,G__35503) : self__.dispatch_fn.call(null,G__35487,G__35488,G__35489,G__35490,G__35491,G__35492,G__35493,G__35494,G__35495,G__35496,G__35497,G__35498,G__35499,G__35500,G__35501,G__35502,G__35503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35504 = a;
var G__35505 = b;
var G__35506 = c;
var G__35507 = d;
var G__35508 = e;
var G__35509 = f;
var G__35510 = g;
var G__35511 = h;
var G__35512 = i;
var G__35513 = j;
var G__35514 = k;
var G__35515 = l;
var G__35516 = m;
var G__35517 = n;
var G__35518 = o;
var G__35519 = p;
var G__35520 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35504,G__35505,G__35506,G__35507,G__35508,G__35509,G__35510,G__35511,G__35512,G__35513,G__35514,G__35515,G__35516,G__35517,G__35518,G__35519,G__35520) : target_fn.call(null,G__35504,G__35505,G__35506,G__35507,G__35508,G__35509,G__35510,G__35511,G__35512,G__35513,G__35514,G__35515,G__35516,G__35517,G__35518,G__35519,G__35520));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35521 = a;
var G__35522 = b;
var G__35523 = c;
var G__35524 = d;
var G__35525 = e;
var G__35526 = f;
var G__35527 = g;
var G__35528 = h;
var G__35529 = i;
var G__35530 = j;
var G__35531 = k;
var G__35532 = l;
var G__35533 = m;
var G__35534 = n;
var G__35535 = o;
var G__35536 = p;
var G__35537 = q;
var G__35538 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35521,G__35522,G__35523,G__35524,G__35525,G__35526,G__35527,G__35528,G__35529,G__35530,G__35531,G__35532,G__35533,G__35534,G__35535,G__35536,G__35537,G__35538) : self__.dispatch_fn.call(null,G__35521,G__35522,G__35523,G__35524,G__35525,G__35526,G__35527,G__35528,G__35529,G__35530,G__35531,G__35532,G__35533,G__35534,G__35535,G__35536,G__35537,G__35538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35539 = a;
var G__35540 = b;
var G__35541 = c;
var G__35542 = d;
var G__35543 = e;
var G__35544 = f;
var G__35545 = g;
var G__35546 = h;
var G__35547 = i;
var G__35548 = j;
var G__35549 = k;
var G__35550 = l;
var G__35551 = m;
var G__35552 = n;
var G__35553 = o;
var G__35554 = p;
var G__35555 = q;
var G__35556 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35539,G__35540,G__35541,G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548,G__35549,G__35550,G__35551,G__35552,G__35553,G__35554,G__35555,G__35556) : target_fn.call(null,G__35539,G__35540,G__35541,G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548,G__35549,G__35550,G__35551,G__35552,G__35553,G__35554,G__35555,G__35556));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35557 = a;
var G__35558 = b;
var G__35559 = c;
var G__35560 = d;
var G__35561 = e;
var G__35562 = f;
var G__35563 = g;
var G__35564 = h;
var G__35565 = i;
var G__35566 = j;
var G__35567 = k;
var G__35568 = l;
var G__35569 = m;
var G__35570 = n;
var G__35571 = o;
var G__35572 = p;
var G__35573 = q;
var G__35574 = r;
var G__35575 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564,G__35565,G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573,G__35574,G__35575) : self__.dispatch_fn.call(null,G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564,G__35565,G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573,G__35574,G__35575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35576 = a;
var G__35577 = b;
var G__35578 = c;
var G__35579 = d;
var G__35580 = e;
var G__35581 = f;
var G__35582 = g;
var G__35583 = h;
var G__35584 = i;
var G__35585 = j;
var G__35586 = k;
var G__35587 = l;
var G__35588 = m;
var G__35589 = n;
var G__35590 = o;
var G__35591 = p;
var G__35592 = q;
var G__35593 = r;
var G__35594 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35576,G__35577,G__35578,G__35579,G__35580,G__35581,G__35582,G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591,G__35592,G__35593,G__35594) : target_fn.call(null,G__35576,G__35577,G__35578,G__35579,G__35580,G__35581,G__35582,G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591,G__35592,G__35593,G__35594));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35595 = a;
var G__35596 = b;
var G__35597 = c;
var G__35598 = d;
var G__35599 = e;
var G__35600 = f;
var G__35601 = g;
var G__35602 = h;
var G__35603 = i;
var G__35604 = j;
var G__35605 = k;
var G__35606 = l;
var G__35607 = m;
var G__35608 = n;
var G__35609 = o;
var G__35610 = p;
var G__35611 = q;
var G__35612 = r;
var G__35613 = s;
var G__35614 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602,G__35603,G__35604,G__35605,G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613,G__35614) : self__.dispatch_fn.call(null,G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602,G__35603,G__35604,G__35605,G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613,G__35614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35615 = a;
var G__35616 = b;
var G__35617 = c;
var G__35618 = d;
var G__35619 = e;
var G__35620 = f;
var G__35621 = g;
var G__35622 = h;
var G__35623 = i;
var G__35624 = j;
var G__35625 = k;
var G__35626 = l;
var G__35627 = m;
var G__35628 = n;
var G__35629 = o;
var G__35630 = p;
var G__35631 = q;
var G__35632 = r;
var G__35633 = s;
var G__35634 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35615,G__35616,G__35617,G__35618,G__35619,G__35620,G__35621,G__35622,G__35623,G__35624,G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634) : target_fn.call(null,G__35615,G__35616,G__35617,G__35618,G__35619,G__35620,G__35621,G__35622,G__35623,G__35624,G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__35636 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__35636);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__35641 = msg;
return Error(G__35641);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__35646 = x;
var G__35647 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35646,G__35647) : pred.call(null,G__35646,G__35647));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__35648 = y;
var G__35649 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35648,G__35649) : pred.call(null,G__35648,G__35649));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$84;
} else {
return cljs.core.constant$keyword$85;
}
});
