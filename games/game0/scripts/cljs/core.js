// Compiled by ClojureScript 0.0-2719 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2719";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__10590__delegate = function (args){
return console.log.apply(console,(function (){var G__10589 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10589) : cljs.core.into_array.call(null,G__10589));
})());
};
var G__10590 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10591__i = 0, G__10591__a = new Array(arguments.length -  0);
while (G__10591__i < G__10591__a.length) {G__10591__a[G__10591__i] = arguments[G__10591__i + 0]; ++G__10591__i;}
  args = new cljs.core.IndexedSeq(G__10591__a,0);
} 
return G__10590__delegate.call(this,args);};
G__10590.cljs$lang$maxFixedArity = 0;
G__10590.cljs$lang$applyTo = (function (arglist__10592){
var args = cljs.core.seq(arglist__10592);
return G__10590__delegate(args);
});
G__10590.cljs$core$IFn$_invoke$arity$variadic = G__10590__delegate;
return G__10590;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__10594 = x;
return goog.isString(G__10594);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__10596 = x__$1;
return goog.typeOf(G__10596);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3799__auto__ = ty;
if(cljs.core.truth_(and__3799__auto__)){
return ty.cljs$lang$type;
} else {
return and__3799__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__10598 = obj;
return goog.typeOf(G__10598);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__10600 = Symbol;
return goog.typeOf(G__10600);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4698__auto___10602 = len;
var i_10603 = (0);
while(true){
if((i_10603 < n__4698__auto___10602)){
(new_arr[i_10603] = (arr[i_10603]));

var G__10604 = (i_10603 + (1));
i_10603 = G__10604;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__10605 = (i + (1));
i = G__10605;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__10614__delegate = function (array,i,idxs){
var G__10611 = aget;
var G__10612 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__10613 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10611,G__10612,G__10613) : cljs.core.apply.call(null,G__10611,G__10612,G__10613));
};
var G__10614 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__10615__i = 0, G__10615__a = new Array(arguments.length -  2);
while (G__10615__i < G__10615__a.length) {G__10615__a[G__10615__i] = arguments[G__10615__i + 2]; ++G__10615__i;}
  idxs = new cljs.core.IndexedSeq(G__10615__a,0);
} 
return G__10614__delegate.call(this,array,i,idxs);};
G__10614.cljs$lang$maxFixedArity = 2;
G__10614.cljs$lang$applyTo = (function (arglist__10616){
var array = cljs.core.first(arglist__10616);
arglist__10616 = cljs.core.next(arglist__10616);
var i = cljs.core.first(arglist__10616);
var idxs = cljs.core.rest(arglist__10616);
return G__10614__delegate(array,i,idxs);
});
G__10614.cljs$core$IFn$_invoke$arity$variadic = G__10614__delegate;
return G__10614;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__10617 = null;
if (arguments.length > 2) {
var G__10618__i = 0, G__10618__a = new Array(arguments.length -  2);
while (G__10618__i < G__10618__a.length) {G__10618__a[G__10618__i] = arguments[G__10618__i + 2]; ++G__10618__i;}
G__10617 = new cljs.core.IndexedSeq(G__10618__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__10617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__10627__delegate = function (array,idx,idx2,idxv){
var G__10623 = aset;
var G__10624 = (array[idx]);
var G__10625 = idx2;
var G__10626 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10623,G__10624,G__10625,G__10626) : cljs.core.apply.call(null,G__10623,G__10624,G__10625,G__10626));
};
var G__10627 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__10628__i = 0, G__10628__a = new Array(arguments.length -  3);
while (G__10628__i < G__10628__a.length) {G__10628__a[G__10628__i] = arguments[G__10628__i + 3]; ++G__10628__i;}
  idxv = new cljs.core.IndexedSeq(G__10628__a,0);
} 
return G__10627__delegate.call(this,array,idx,idx2,idxv);};
G__10627.cljs$lang$maxFixedArity = 3;
G__10627.cljs$lang$applyTo = (function (arglist__10629){
var array = cljs.core.first(arglist__10629);
arglist__10629 = cljs.core.next(arglist__10629);
var idx = cljs.core.first(arglist__10629);
arglist__10629 = cljs.core.next(arglist__10629);
var idx2 = cljs.core.first(arglist__10629);
var idxv = cljs.core.rest(arglist__10629);
return G__10627__delegate(array,idx,idx2,idxv);
});
G__10627.cljs$core$IFn$_invoke$arity$variadic = G__10627__delegate;
return G__10627;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__10630 = null;
if (arguments.length > 3) {
var G__10631__i = 0, G__10631__a = new Array(arguments.length -  3);
while (G__10631__i < G__10631__a.length) {G__10631__a[G__10631__i] = arguments[G__10631__i + 3]; ++G__10631__i;}
G__10630 = new cljs.core.IndexedSeq(G__10631__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__10630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__10637 = (function (a,x){
a.push(x);

return a;
});
var G__10638 = [];
var G__10639 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10637,G__10638,G__10639) : cljs.core.reduce.call(null,G__10637,G__10638,G__10639));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__10640__i = 0, G__10640__a = new Array(arguments.length -  2);
while (G__10640__i < G__10640__a.length) {G__10640__a[G__10640__i] = arguments[G__10640__i + 2]; ++G__10640__i;}
  args = new cljs.core.IndexedSeq(G__10640__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__10641){
var obj = cljs.core.first(arglist__10641);
arglist__10641 = cljs.core.next(arglist__10641);
var s = cljs.core.first(arglist__10641);
var args = cljs.core.rest(arglist__10641);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj10643 = {};
return obj10643;
})();


cljs.core.IFn = (function (){var obj10645 = {};
return obj10645;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10691 = x__4455__auto__;
return goog.typeOf(G__10691);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10693 = x__4455__auto__;
return goog.typeOf(G__10693);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10695 = x__4455__auto__;
return goog.typeOf(G__10695);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10697 = x__4455__auto__;
return goog.typeOf(G__10697);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10699 = x__4455__auto__;
return goog.typeOf(G__10699);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10701 = x__4455__auto__;
return goog.typeOf(G__10701);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10703 = x__4455__auto__;
return goog.typeOf(G__10703);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10705 = x__4455__auto__;
return goog.typeOf(G__10705);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10707 = x__4455__auto__;
return goog.typeOf(G__10707);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10709 = x__4455__auto__;
return goog.typeOf(G__10709);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10711 = x__4455__auto__;
return goog.typeOf(G__10711);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10713 = x__4455__auto__;
return goog.typeOf(G__10713);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10715 = x__4455__auto__;
return goog.typeOf(G__10715);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10717 = x__4455__auto__;
return goog.typeOf(G__10717);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10719 = x__4455__auto__;
return goog.typeOf(G__10719);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10721 = x__4455__auto__;
return goog.typeOf(G__10721);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10723 = x__4455__auto__;
return goog.typeOf(G__10723);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10725 = x__4455__auto__;
return goog.typeOf(G__10725);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10727 = x__4455__auto__;
return goog.typeOf(G__10727);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10729 = x__4455__auto__;
return goog.typeOf(G__10729);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10731 = x__4455__auto__;
return goog.typeOf(G__10731);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__10733 = x__4455__auto__;
return goog.typeOf(G__10733);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj10735 = {};
return obj10735;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3799__auto__ = value;
if(and__3799__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3799__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4455__auto__ = (((value == null))?null:value);
return (function (){var or__3811__auto__ = (cljs.core._clone[(function (){var G__10739 = x__4455__auto__;
return goog.typeOf(G__10739);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clone["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj10741 = {};
return obj10741;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._count[(function (){var G__10745 = x__4455__auto__;
return goog.typeOf(G__10745);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._count["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj10747 = {};
return obj10747;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._empty[(function (){var G__10751 = x__4455__auto__;
return goog.typeOf(G__10751);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._empty["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj10753 = {};
return obj10753;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._conj[(function (){var G__10757 = x__4455__auto__;
return goog.typeOf(G__10757);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj10759 = {};
return obj10759;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__10765 = x__4455__auto__;
return goog.typeOf(G__10765);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__10767 = x__4455__auto__;
return goog.typeOf(G__10767);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj10769 = {};
return obj10769;
})();


cljs.core.ISeq = (function (){var obj10771 = {};
return obj10771;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._first[(function (){var G__10775 = x__4455__auto__;
return goog.typeOf(G__10775);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rest[(function (){var G__10779 = x__4455__auto__;
return goog.typeOf(G__10779);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj10781 = {};
return obj10781;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._next[(function (){var G__10785 = x__4455__auto__;
return goog.typeOf(G__10785);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj10787 = {};
return obj10787;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__10793 = x__4455__auto__;
return goog.typeOf(G__10793);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__10795 = x__4455__auto__;
return goog.typeOf(G__10795);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj10797 = {};
return obj10797;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__10801 = x__4455__auto__;
return goog.typeOf(G__10801);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc[(function (){var G__10805 = x__4455__auto__;
return goog.typeOf(G__10805);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj10807 = {};
return obj10807;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc[(function (){var G__10811 = x__4455__auto__;
return goog.typeOf(G__10811);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj10813 = {};
return obj10813;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._key[(function (){var G__10817 = x__4455__auto__;
return goog.typeOf(G__10817);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._val[(function (){var G__10821 = x__4455__auto__;
return goog.typeOf(G__10821);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._val["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj10823 = {};
return obj10823;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin[(function (){var G__10827 = x__4455__auto__;
return goog.typeOf(G__10827);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj10829 = {};
return obj10829;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._peek[(function (){var G__10833 = x__4455__auto__;
return goog.typeOf(G__10833);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._peek["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._pop[(function (){var G__10837 = x__4455__auto__;
return goog.typeOf(G__10837);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj10839 = {};
return obj10839;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n[(function (){var G__10843 = x__4455__auto__;
return goog.typeOf(G__10843);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj10845 = {};
return obj10845;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref[(function (){var G__10849 = x__4455__auto__;
return goog.typeOf(G__10849);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj10851 = {};
return obj10851;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref_with_timeout[(function (){var G__10855 = x__4455__auto__;
return goog.typeOf(G__10855);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj10857 = {};
return obj10857;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._meta[(function (){var G__10861 = x__4455__auto__;
return goog.typeOf(G__10861);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj10863 = {};
return obj10863;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._with_meta[(function (){var G__10867 = x__4455__auto__;
return goog.typeOf(G__10867);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj10869 = {};
return obj10869;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__10875 = x__4455__auto__;
return goog.typeOf(G__10875);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__10877 = x__4455__auto__;
return goog.typeOf(G__10877);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj10879 = {};
return obj10879;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._kv_reduce[(function (){var G__10883 = x__4455__auto__;
return goog.typeOf(G__10883);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj10885 = {};
return obj10885;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._equiv[(function (){var G__10889 = x__4455__auto__;
return goog.typeOf(G__10889);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._equiv["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj10891 = {};
return obj10891;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._hash[(function (){var G__10895 = x__4455__auto__;
return goog.typeOf(G__10895);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._hash["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj10897 = {};
return obj10897;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._seq[(function (){var G__10901 = x__4455__auto__;
return goog.typeOf(G__10901);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj10903 = {};
return obj10903;
})();


cljs.core.IList = (function (){var obj10905 = {};
return obj10905;
})();


cljs.core.IRecord = (function (){var obj10907 = {};
return obj10907;
})();


cljs.core.IReversible = (function (){var obj10909 = {};
return obj10909;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rseq[(function (){var G__10913 = x__4455__auto__;
return goog.typeOf(G__10913);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rseq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj10915 = {};
return obj10915;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq[(function (){var G__10919 = x__4455__auto__;
return goog.typeOf(G__10919);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq_from[(function (){var G__10923 = x__4455__auto__;
return goog.typeOf(G__10923);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._entry_key[(function (){var G__10927 = x__4455__auto__;
return goog.typeOf(G__10927);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._comparator[(function (){var G__10931 = x__4455__auto__;
return goog.typeOf(G__10931);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._comparator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj10933 = {};
return obj10933;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._write[(function (){var G__10937 = x__4455__auto__;
return goog.typeOf(G__10937);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._write["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._flush[(function (){var G__10941 = x__4455__auto__;
return goog.typeOf(G__10941);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._flush["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj10943 = {};
return obj10943;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._pr_writer[(function (){var G__10947 = x__4455__auto__;
return goog.typeOf(G__10947);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj10949 = {};
return obj10949;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3799__auto__ = d;
if(and__3799__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4455__auto__ = (((d == null))?null:d);
return (function (){var or__3811__auto__ = (cljs.core._realized_QMARK_[(function (){var G__10953 = x__4455__auto__;
return goog.typeOf(G__10953);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj10955 = {};
return obj10955;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._notify_watches[(function (){var G__10959 = x__4455__auto__;
return goog.typeOf(G__10959);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._add_watch[(function (){var G__10963 = x__4455__auto__;
return goog.typeOf(G__10963);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._remove_watch[(function (){var G__10967 = x__4455__auto__;
return goog.typeOf(G__10967);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj10969 = {};
return obj10969;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._as_transient[(function (){var G__10973 = x__4455__auto__;
return goog.typeOf(G__10973);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj10975 = {};
return obj10975;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._conj_BANG_[(function (){var G__10979 = x__4455__auto__;
return goog.typeOf(G__10979);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._persistent_BANG_[(function (){var G__10983 = x__4455__auto__;
return goog.typeOf(G__10983);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj10985 = {};
return obj10985;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_BANG_[(function (){var G__10989 = x__4455__auto__;
return goog.typeOf(G__10989);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj10991 = {};
return obj10991;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__10995 = x__4455__auto__;
return goog.typeOf(G__10995);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj10997 = {};
return obj10997;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11001 = x__4455__auto__;
return goog.typeOf(G__11001);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._pop_BANG_[(function (){var G__11005 = x__4455__auto__;
return goog.typeOf(G__11005);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11007 = {};
return obj11007;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11011 = x__4455__auto__;
return goog.typeOf(G__11011);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11013 = {};
return obj11013;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._compare[(function (){var G__11017 = x__4455__auto__;
return goog.typeOf(G__11017);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._compare["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11019 = {};
return obj11019;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._drop_first[(function (){var G__11023 = x__4455__auto__;
return goog.typeOf(G__11023);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11025 = {};
return obj11025;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_first[(function (){var G__11029 = x__4455__auto__;
return goog.typeOf(G__11029);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_rest[(function (){var G__11033 = x__4455__auto__;
return goog.typeOf(G__11033);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11035 = {};
return obj11035;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_next[(function (){var G__11039 = x__4455__auto__;
return goog.typeOf(G__11039);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11041 = {};
return obj11041;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._name[(function (){var G__11045 = x__4455__auto__;
return goog.typeOf(G__11045);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._name["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._namespace[(function (){var G__11049 = x__4455__auto__;
return goog.typeOf(G__11049);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._namespace["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11051 = {};
return obj11051;
})();


cljs.core.IReset = (function (){var obj11053 = {};
return obj11053;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._reset_BANG_[(function (){var G__11057 = x__4455__auto__;
return goog.typeOf(G__11057);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11059 = {};
return obj11059;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11069 = x__4455__auto__;
return goog.typeOf(G__11069);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11071 = x__4455__auto__;
return goog.typeOf(G__11071);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11073 = x__4455__auto__;
return goog.typeOf(G__11073);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11075 = x__4455__auto__;
return goog.typeOf(G__11075);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11077 = {};
return obj11077;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11081 = x__4455__auto__;
return goog.typeOf(G__11081);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11083 = {};
return obj11083;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._iterator[(function (){var G__11087 = x__4455__auto__;
return goog.typeOf(G__11087);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._iterator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11090 = (4294967295);
var G__11091 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11090,G__11091) : Math.imul.call(null,G__11090,G__11091));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11094 = a;
var G__11095 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11094,G__11095) : Math.imul.call(null,G__11094,G__11095));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11096 = (i + (2));
var G__11097 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11096;
h1 = G__11097;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11099 = {};
return obj11099;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11100 = (i + (1));
var G__11101 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11100;
hash = G__11101;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11105 = {};
return obj11105;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11108 = o;
if(G__11108){
var bit__4485__auto__ = (G__11108.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4485__auto__) || (G__11108.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11109 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11109) : Math.floor.call(null,G__11109));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11116 = a.ns;
var G__11117 = b.ns;
return goog.array.defaultCompare(G__11116,G__11117);
})();
if(((0) === nsc)){
var G__11118 = a.name;
var G__11119 = b.name;
return goog.array.defaultCompare(G__11118,G__11119);
} else {
return nsc;
}
}
} else {
var G__11120 = a.name;
var G__11121 = b.name;
return goog.array.defaultCompare(G__11120,G__11121);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11123 = null;
var G__11123__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11123__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11123 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11123__2.call(this,self__,coll);
case 3:
return G__11123__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11123.cljs$core$IFn$_invoke$arity$2 = G__11123__2;
G__11123.cljs$core$IFn$_invoke$arity$3 = G__11123__3;
return G__11123;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11122){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11122)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11171 = null;
var G__11171__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11171__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11171__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11171__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11171__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11171__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11171__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11171__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11171__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11171__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11171__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11171__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11171__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11171__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11171__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11171__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11171__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11171__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11171__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11171__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11171__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11171__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11127 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11128 = a;
var G__11129 = b;
var G__11130 = c;
var G__11131 = d;
var G__11132 = e;
var G__11133 = f;
var G__11134 = g;
var G__11135 = h;
var G__11136 = i;
var G__11137 = j;
var G__11138 = k;
var G__11139 = l;
var G__11140 = m;
var G__11141 = n;
var G__11142 = o;
var G__11143 = p;
var G__11144 = q;
var G__11145 = r;
var G__11146 = s;
var G__11147 = t;
var G__11148 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148) : cljs.core.apply.call(null,G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148));
});
G__11171 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11171__1.call(this,self__);
case 2:
return G__11171__2.call(this,self__,a);
case 3:
return G__11171__3.call(this,self__,a,b);
case 4:
return G__11171__4.call(this,self__,a,b,c);
case 5:
return G__11171__5.call(this,self__,a,b,c,d);
case 6:
return G__11171__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11171__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11171__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11171__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11171__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11171__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11171__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11171__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11171__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11171__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11171__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11171__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11171__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11171__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11171__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11171__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11171__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11171.cljs$core$IFn$_invoke$arity$1 = G__11171__1;
G__11171.cljs$core$IFn$_invoke$arity$2 = G__11171__2;
G__11171.cljs$core$IFn$_invoke$arity$3 = G__11171__3;
G__11171.cljs$core$IFn$_invoke$arity$4 = G__11171__4;
G__11171.cljs$core$IFn$_invoke$arity$5 = G__11171__5;
G__11171.cljs$core$IFn$_invoke$arity$6 = G__11171__6;
G__11171.cljs$core$IFn$_invoke$arity$7 = G__11171__7;
G__11171.cljs$core$IFn$_invoke$arity$8 = G__11171__8;
G__11171.cljs$core$IFn$_invoke$arity$9 = G__11171__9;
G__11171.cljs$core$IFn$_invoke$arity$10 = G__11171__10;
G__11171.cljs$core$IFn$_invoke$arity$11 = G__11171__11;
G__11171.cljs$core$IFn$_invoke$arity$12 = G__11171__12;
G__11171.cljs$core$IFn$_invoke$arity$13 = G__11171__13;
G__11171.cljs$core$IFn$_invoke$arity$14 = G__11171__14;
G__11171.cljs$core$IFn$_invoke$arity$15 = G__11171__15;
G__11171.cljs$core$IFn$_invoke$arity$16 = G__11171__16;
G__11171.cljs$core$IFn$_invoke$arity$17 = G__11171__17;
G__11171.cljs$core$IFn$_invoke$arity$18 = G__11171__18;
G__11171.cljs$core$IFn$_invoke$arity$19 = G__11171__19;
G__11171.cljs$core$IFn$_invoke$arity$20 = G__11171__20;
G__11171.cljs$core$IFn$_invoke$arity$21 = G__11171__21;
G__11171.cljs$core$IFn$_invoke$arity$22 = G__11171__22;
return G__11171;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11126){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11126)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11149 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11150 = a;
var G__11151 = b;
var G__11152 = c;
var G__11153 = d;
var G__11154 = e;
var G__11155 = f;
var G__11156 = g;
var G__11157 = h;
var G__11158 = i;
var G__11159 = j;
var G__11160 = k;
var G__11161 = l;
var G__11162 = m;
var G__11163 = n;
var G__11164 = o;
var G__11165 = p;
var G__11166 = q;
var G__11167 = r;
var G__11168 = s;
var G__11169 = t;
var G__11170 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170) : cljs.core.apply.call(null,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11173 = x;
if(G__11173){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__11173.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11173.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11173);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11175 = value;
if(G__11175){
var bit__4492__auto__ = (G__11175.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4492__auto__) || (G__11175.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11175.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11175);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11177 = coll;
if(G__11177){
var bit__4485__auto__ = (G__11177.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4485__auto__) || (G__11177.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11179 = coll;
if(G__11179){
var bit__4485__auto__ = (G__11179.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__11179.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11181 = coll;
if(G__11181){
var bit__4485__auto__ = (G__11181.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__11181.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11183 = coll;
if(G__11183){
var bit__4485__auto__ = (G__11183.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4485__auto__) || (G__11183.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11188__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11189 = y;
var G__11190 = cljs.core.first(more);
var G__11191 = cljs.core.next(more);
x = G__11189;
y = G__11190;
more = G__11191;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11188 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11192__i = 0, G__11192__a = new Array(arguments.length -  2);
while (G__11192__i < G__11192__a.length) {G__11192__a[G__11192__i] = arguments[G__11192__i + 2]; ++G__11192__i;}
  more = new cljs.core.IndexedSeq(G__11192__a,0);
} 
return G__11188__delegate.call(this,x,y,more);};
G__11188.cljs$lang$maxFixedArity = 2;
G__11188.cljs$lang$applyTo = (function (arglist__11193){
var x = cljs.core.first(arglist__11193);
arglist__11193 = cljs.core.next(arglist__11193);
var y = cljs.core.first(arglist__11193);
var more = cljs.core.rest(arglist__11193);
return G__11188__delegate(x,y,more);
});
G__11188.cljs$core$IFn$_invoke$arity$variadic = G__11188__delegate;
return G__11188;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11194 = null;
if (arguments.length > 2) {
var G__11195__i = 0, G__11195__a = new Array(arguments.length -  2);
while (G__11195__i < G__11195__a.length) {G__11195__a[G__11195__i] = arguments[G__11195__i + 2]; ++G__11195__i;}
G__11194 = new cljs.core.IndexedSeq(G__11195__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11196 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11196) : cljs.core.es6_iterator_seq.call(null,G__11196));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11197 = (n + (1));
var G__11198 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11199 = cljs.core.next(coll__$1);
n = G__11197;
hash_code = G__11198;
coll__$1 = G__11199;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11200 = (n + (1));
var G__11201 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11202 = cljs.core.next(coll__$1);
n = G__11200;
hash_code = G__11201;
coll__$1 = G__11202;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11203 = o;
return goog.getUid(G__11203);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11205 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11205) : cljs.core.deref.call(null,G__11205));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11212 = val;
var G__11213 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11212,G__11213) : f.call(null,G__11212,G__11213));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11218 = nval;
var G__11219 = (n + (1));
val = G__11218;
n = G__11219;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11214 = val__$1;
var G__11215 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11214,G__11215) : f.call(null,G__11214,G__11215));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11220 = nval;
var G__11221 = (n + (1));
val__$1 = G__11220;
n = G__11221;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11216 = val__$1;
var G__11217 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11216,G__11217) : f.call(null,G__11216,G__11217));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11222 = nval;
var G__11223 = (n + (1));
val__$1 = G__11222;
n = G__11223;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11230 = val;
var G__11231 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11230,G__11231) : f.call(null,G__11230,G__11231));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11236 = nval;
var G__11237 = (n + (1));
val = G__11236;
n = G__11237;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11232 = val__$1;
var G__11233 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11232,G__11233) : f.call(null,G__11232,G__11233));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11238 = nval;
var G__11239 = (n + (1));
val__$1 = G__11238;
n = G__11239;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11234 = val__$1;
var G__11235 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11234,G__11235) : f.call(null,G__11234,G__11235));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11240 = nval;
var G__11241 = (n + (1));
val__$1 = G__11240;
n = G__11241;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11243 = x;
if(G__11243){
var bit__4492__auto__ = (G__11243.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4492__auto__) || (G__11243.cljs$core$ICounted$)){
return true;
} else {
if((!G__11243.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11243);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11243);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11245 = x;
if(G__11245){
var bit__4492__auto__ = (G__11245.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4492__auto__) || (G__11245.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11245.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11245);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11245);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11246 = coll__$1;
var G__11247 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11246,G__11247) : cljs.core.equiv_sequential.call(null,G__11246,G__11247));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11248 = o;
var G__11249 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11248,G__11249) : cljs.core.cons.call(null,G__11248,G__11249));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11252 = coll__$1;
var G__11253 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11252,G__11253) : cljs.core.equiv_sequential.call(null,G__11252,G__11253));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11254 = cljs.core.List.EMPTY;
var G__11255 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11254,G__11255) : cljs.core.with_meta.call(null,G__11254,G__11255));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11256 = f;
var G__11257 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11256,G__11257) : cljs.core.seq_reduce.call(null,G__11256,G__11257));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11258 = f;
var G__11259 = start;
var G__11260 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11258,G__11259,G__11260) : cljs.core.seq_reduce.call(null,G__11258,G__11259,G__11260));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11261 = o;
var G__11262 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11261,G__11262) : cljs.core.cons.call(null,G__11261,G__11262));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11263 = sn;
s = G__11263;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11268__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11269 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11270 = cljs.core.first(xs);
var G__11271 = cljs.core.next(xs);
coll = G__11269;
x = G__11270;
xs = G__11271;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11268 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11272__i = 0, G__11272__a = new Array(arguments.length -  2);
while (G__11272__i < G__11272__a.length) {G__11272__a[G__11272__i] = arguments[G__11272__i + 2]; ++G__11272__i;}
  xs = new cljs.core.IndexedSeq(G__11272__a,0);
} 
return G__11268__delegate.call(this,coll,x,xs);};
G__11268.cljs$lang$maxFixedArity = 2;
G__11268.cljs$lang$applyTo = (function (arglist__11273){
var coll = cljs.core.first(arglist__11273);
arglist__11273 = cljs.core.next(arglist__11273);
var x = cljs.core.first(arglist__11273);
var xs = cljs.core.rest(arglist__11273);
return G__11268__delegate(coll,x,xs);
});
G__11268.cljs$core$IFn$_invoke$arity$variadic = G__11268__delegate;
return G__11268;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11274 = null;
if (arguments.length > 2) {
var G__11275__i = 0, G__11275__a = new Array(arguments.length -  2);
while (G__11275__i < G__11275__a.length) {G__11275__a[G__11275__i] = arguments[G__11275__i + 2]; ++G__11275__i;}
G__11274 = new cljs.core.IndexedSeq(G__11275__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11276 = cljs.core.next(s);
var G__11277 = (acc + (1));
s = G__11276;
acc = G__11277;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11279 = coll;
if(G__11279){
var bit__4485__auto__ = (G__11279.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4485__auto__) || (G__11279.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11280 = cljs.core.next(coll);
var G__11281 = (n - (1));
coll = G__11280;
n = G__11281;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11282 = cljs.core.next(coll);
var G__11283 = (n - (1));
var G__11284 = not_found;
coll = G__11282;
n = G__11283;
not_found = G__11284;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11289 = coll;
if(G__11289){
var bit__4485__auto__ = (G__11289.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__11289.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11290 = coll;
if(G__11290){
var bit__4492__auto__ = (G__11290.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__11290.cljs$core$ISeq$)){
return true;
} else {
if((!G__11290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11290);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11291 = coll;
if(G__11291){
var bit__4485__auto__ = (G__11291.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__11291.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11292 = coll;
if(G__11292){
var bit__4492__auto__ = (G__11292.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__11292.cljs$core$ISeq$)){
return true;
} else {
if((!G__11292.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11292);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11293 = (n__$1 - (1));
var G__11294 = cljs.core.rest(xs);
n__$1 = G__11293;
xs = G__11294;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11297 = o;
if(G__11297){
var bit__4485__auto__ = (G__11297.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__11297.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11298 = o;
if(G__11298){
var bit__4485__auto__ = (G__11298.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__11298.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11302__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11303 = ret;
var G__11304 = cljs.core.first(kvs);
var G__11305 = cljs.core.second(kvs);
var G__11306 = cljs.core.nnext(kvs);
coll = G__11303;
k = G__11304;
v = G__11305;
kvs = G__11306;
continue;
} else {
return ret;
}
break;
}
};
var G__11302 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11307__i = 0, G__11307__a = new Array(arguments.length -  3);
while (G__11307__i < G__11307__a.length) {G__11307__a[G__11307__i] = arguments[G__11307__i + 3]; ++G__11307__i;}
  kvs = new cljs.core.IndexedSeq(G__11307__a,0);
} 
return G__11302__delegate.call(this,coll,k,v,kvs);};
G__11302.cljs$lang$maxFixedArity = 3;
G__11302.cljs$lang$applyTo = (function (arglist__11308){
var coll = cljs.core.first(arglist__11308);
arglist__11308 = cljs.core.next(arglist__11308);
var k = cljs.core.first(arglist__11308);
arglist__11308 = cljs.core.next(arglist__11308);
var v = cljs.core.first(arglist__11308);
var kvs = cljs.core.rest(arglist__11308);
return G__11302__delegate(coll,k,v,kvs);
});
G__11302.cljs$core$IFn$_invoke$arity$variadic = G__11302__delegate;
return G__11302;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11309 = null;
if (arguments.length > 3) {
var G__11310__i = 0, G__11310__a = new Array(arguments.length -  3);
while (G__11310__i < G__11310__a.length) {G__11310__a[G__11310__i] = arguments[G__11310__i + 3]; ++G__11310__i;}
G__11309 = new cljs.core.IndexedSeq(G__11310__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11313__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11314 = ret;
var G__11315 = cljs.core.first(ks);
var G__11316 = cljs.core.next(ks);
coll = G__11314;
k = G__11315;
ks = G__11316;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11313 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11317__i = 0, G__11317__a = new Array(arguments.length -  2);
while (G__11317__i < G__11317__a.length) {G__11317__a[G__11317__i] = arguments[G__11317__i + 2]; ++G__11317__i;}
  ks = new cljs.core.IndexedSeq(G__11317__a,0);
} 
return G__11313__delegate.call(this,coll,k,ks);};
G__11313.cljs$lang$maxFixedArity = 2;
G__11313.cljs$lang$applyTo = (function (arglist__11318){
var coll = cljs.core.first(arglist__11318);
arglist__11318 = cljs.core.next(arglist__11318);
var k = cljs.core.first(arglist__11318);
var ks = cljs.core.rest(arglist__11318);
return G__11313__delegate(coll,k,ks);
});
G__11313.cljs$core$IFn$_invoke$arity$variadic = G__11313__delegate;
return G__11313;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11319 = null;
if (arguments.length > 2) {
var G__11320__i = 0, G__11320__a = new Array(arguments.length -  2);
while (G__11320__i < G__11320__a.length) {G__11320__a[G__11320__i] = arguments[G__11320__i + 2]; ++G__11320__i;}
G__11319 = new cljs.core.IndexedSeq(G__11320__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3811__auto__ = (function (){var G__11325 = f;
return goog.isFunction(G__11325);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__11326 = f;
if(G__11326){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto____$1 = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
return G__11326.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11326.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11326);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11326);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__11792 = null;
var G__11792__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__11792__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11328 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11328) : self__.afn.call(null,G__11328));
});
var G__11792__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11329 = a;
var G__11330 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11329,G__11330) : self__.afn.call(null,G__11329,G__11330));
});
var G__11792__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11331 = a;
var G__11332 = b;
var G__11333 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11331,G__11332,G__11333) : self__.afn.call(null,G__11331,G__11332,G__11333));
});
var G__11792__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11334 = a;
var G__11335 = b;
var G__11336 = c;
var G__11337 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11334,G__11335,G__11336,G__11337) : self__.afn.call(null,G__11334,G__11335,G__11336,G__11337));
});
var G__11792__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11338 = a;
var G__11339 = b;
var G__11340 = c;
var G__11341 = d;
var G__11342 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11338,G__11339,G__11340,G__11341,G__11342) : self__.afn.call(null,G__11338,G__11339,G__11340,G__11341,G__11342));
});
var G__11792__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11343 = a;
var G__11344 = b;
var G__11345 = c;
var G__11346 = d;
var G__11347 = e;
var G__11348 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11343,G__11344,G__11345,G__11346,G__11347,G__11348) : self__.afn.call(null,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348));
});
var G__11792__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11349 = a;
var G__11350 = b;
var G__11351 = c;
var G__11352 = d;
var G__11353 = e;
var G__11354 = f;
var G__11355 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355) : self__.afn.call(null,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355));
});
var G__11792__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11356 = a;
var G__11357 = b;
var G__11358 = c;
var G__11359 = d;
var G__11360 = e;
var G__11361 = f;
var G__11362 = g;
var G__11363 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363) : self__.afn.call(null,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363));
});
var G__11792__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11364 = a;
var G__11365 = b;
var G__11366 = c;
var G__11367 = d;
var G__11368 = e;
var G__11369 = f;
var G__11370 = g;
var G__11371 = h;
var G__11372 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372) : self__.afn.call(null,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372));
});
var G__11792__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11373 = a;
var G__11374 = b;
var G__11375 = c;
var G__11376 = d;
var G__11377 = e;
var G__11378 = f;
var G__11379 = g;
var G__11380 = h;
var G__11381 = i;
var G__11382 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382) : self__.afn.call(null,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382));
});
var G__11792__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11383 = a;
var G__11384 = b;
var G__11385 = c;
var G__11386 = d;
var G__11387 = e;
var G__11388 = f;
var G__11389 = g;
var G__11390 = h;
var G__11391 = i;
var G__11392 = j;
var G__11393 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393) : self__.afn.call(null,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393));
});
var G__11792__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11394 = a;
var G__11395 = b;
var G__11396 = c;
var G__11397 = d;
var G__11398 = e;
var G__11399 = f;
var G__11400 = g;
var G__11401 = h;
var G__11402 = i;
var G__11403 = j;
var G__11404 = k;
var G__11405 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405) : self__.afn.call(null,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405));
});
var G__11792__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11406 = a;
var G__11407 = b;
var G__11408 = c;
var G__11409 = d;
var G__11410 = e;
var G__11411 = f;
var G__11412 = g;
var G__11413 = h;
var G__11414 = i;
var G__11415 = j;
var G__11416 = k;
var G__11417 = l;
var G__11418 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418) : self__.afn.call(null,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418));
});
var G__11792__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11419 = a;
var G__11420 = b;
var G__11421 = c;
var G__11422 = d;
var G__11423 = e;
var G__11424 = f;
var G__11425 = g;
var G__11426 = h;
var G__11427 = i;
var G__11428 = j;
var G__11429 = k;
var G__11430 = l;
var G__11431 = m;
var G__11432 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432) : self__.afn.call(null,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432));
});
var G__11792__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11433 = a;
var G__11434 = b;
var G__11435 = c;
var G__11436 = d;
var G__11437 = e;
var G__11438 = f;
var G__11439 = g;
var G__11440 = h;
var G__11441 = i;
var G__11442 = j;
var G__11443 = k;
var G__11444 = l;
var G__11445 = m;
var G__11446 = n;
var G__11447 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447) : self__.afn.call(null,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447));
});
var G__11792__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11448 = a;
var G__11449 = b;
var G__11450 = c;
var G__11451 = d;
var G__11452 = e;
var G__11453 = f;
var G__11454 = g;
var G__11455 = h;
var G__11456 = i;
var G__11457 = j;
var G__11458 = k;
var G__11459 = l;
var G__11460 = m;
var G__11461 = n;
var G__11462 = o;
var G__11463 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463) : self__.afn.call(null,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463));
});
var G__11792__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11464 = a;
var G__11465 = b;
var G__11466 = c;
var G__11467 = d;
var G__11468 = e;
var G__11469 = f;
var G__11470 = g;
var G__11471 = h;
var G__11472 = i;
var G__11473 = j;
var G__11474 = k;
var G__11475 = l;
var G__11476 = m;
var G__11477 = n;
var G__11478 = o;
var G__11479 = p;
var G__11480 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480) : self__.afn.call(null,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480));
});
var G__11792__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11481 = a;
var G__11482 = b;
var G__11483 = c;
var G__11484 = d;
var G__11485 = e;
var G__11486 = f;
var G__11487 = g;
var G__11488 = h;
var G__11489 = i;
var G__11490 = j;
var G__11491 = k;
var G__11492 = l;
var G__11493 = m;
var G__11494 = n;
var G__11495 = o;
var G__11496 = p;
var G__11497 = q;
var G__11498 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498) : self__.afn.call(null,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498));
});
var G__11792__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11499 = a;
var G__11500 = b;
var G__11501 = c;
var G__11502 = d;
var G__11503 = e;
var G__11504 = f;
var G__11505 = g;
var G__11506 = h;
var G__11507 = i;
var G__11508 = j;
var G__11509 = k;
var G__11510 = l;
var G__11511 = m;
var G__11512 = n;
var G__11513 = o;
var G__11514 = p;
var G__11515 = q;
var G__11516 = r;
var G__11517 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517) : self__.afn.call(null,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517));
});
var G__11792__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11518 = a;
var G__11519 = b;
var G__11520 = c;
var G__11521 = d;
var G__11522 = e;
var G__11523 = f;
var G__11524 = g;
var G__11525 = h;
var G__11526 = i;
var G__11527 = j;
var G__11528 = k;
var G__11529 = l;
var G__11530 = m;
var G__11531 = n;
var G__11532 = o;
var G__11533 = p;
var G__11534 = q;
var G__11535 = r;
var G__11536 = s;
var G__11537 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537) : self__.afn.call(null,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537));
});
var G__11792__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11538 = self__.afn;
var G__11539 = a;
var G__11540 = b;
var G__11541 = c;
var G__11542 = d;
var G__11543 = e;
var G__11544 = f;
var G__11545 = g;
var G__11546 = h;
var G__11547 = i;
var G__11548 = j;
var G__11549 = k;
var G__11550 = l;
var G__11551 = m;
var G__11552 = n;
var G__11553 = o;
var G__11554 = p;
var G__11555 = q;
var G__11556 = r;
var G__11557 = s;
var G__11558 = t;
var G__11559 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559) : cljs.core.apply.call(null,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559));
});
G__11792 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11792__1.call(this,self__);
case 2:
return G__11792__2.call(this,self__,a);
case 3:
return G__11792__3.call(this,self__,a,b);
case 4:
return G__11792__4.call(this,self__,a,b,c);
case 5:
return G__11792__5.call(this,self__,a,b,c,d);
case 6:
return G__11792__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11792__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11792__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11792__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11792__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11792__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11792__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11792__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11792__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11792__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11792__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11792__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11792__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11792__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11792__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11792__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11792__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11792.cljs$core$IFn$_invoke$arity$1 = G__11792__1;
G__11792.cljs$core$IFn$_invoke$arity$2 = G__11792__2;
G__11792.cljs$core$IFn$_invoke$arity$3 = G__11792__3;
G__11792.cljs$core$IFn$_invoke$arity$4 = G__11792__4;
G__11792.cljs$core$IFn$_invoke$arity$5 = G__11792__5;
G__11792.cljs$core$IFn$_invoke$arity$6 = G__11792__6;
G__11792.cljs$core$IFn$_invoke$arity$7 = G__11792__7;
G__11792.cljs$core$IFn$_invoke$arity$8 = G__11792__8;
G__11792.cljs$core$IFn$_invoke$arity$9 = G__11792__9;
G__11792.cljs$core$IFn$_invoke$arity$10 = G__11792__10;
G__11792.cljs$core$IFn$_invoke$arity$11 = G__11792__11;
G__11792.cljs$core$IFn$_invoke$arity$12 = G__11792__12;
G__11792.cljs$core$IFn$_invoke$arity$13 = G__11792__13;
G__11792.cljs$core$IFn$_invoke$arity$14 = G__11792__14;
G__11792.cljs$core$IFn$_invoke$arity$15 = G__11792__15;
G__11792.cljs$core$IFn$_invoke$arity$16 = G__11792__16;
G__11792.cljs$core$IFn$_invoke$arity$17 = G__11792__17;
G__11792.cljs$core$IFn$_invoke$arity$18 = G__11792__18;
G__11792.cljs$core$IFn$_invoke$arity$19 = G__11792__19;
G__11792.cljs$core$IFn$_invoke$arity$20 = G__11792__20;
G__11792.cljs$core$IFn$_invoke$arity$21 = G__11792__21;
G__11792.cljs$core$IFn$_invoke$arity$22 = G__11792__22;
return G__11792;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11327){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11327)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__11560 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11560) : self__.afn.call(null,G__11560));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__11561 = a;
var G__11562 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11561,G__11562) : self__.afn.call(null,G__11561,G__11562));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__11563 = a;
var G__11564 = b;
var G__11565 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11563,G__11564,G__11565) : self__.afn.call(null,G__11563,G__11564,G__11565));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__11566 = a;
var G__11567 = b;
var G__11568 = c;
var G__11569 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11566,G__11567,G__11568,G__11569) : self__.afn.call(null,G__11566,G__11567,G__11568,G__11569));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__11570 = a;
var G__11571 = b;
var G__11572 = c;
var G__11573 = d;
var G__11574 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11570,G__11571,G__11572,G__11573,G__11574) : self__.afn.call(null,G__11570,G__11571,G__11572,G__11573,G__11574));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__11575 = a;
var G__11576 = b;
var G__11577 = c;
var G__11578 = d;
var G__11579 = e;
var G__11580 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11575,G__11576,G__11577,G__11578,G__11579,G__11580) : self__.afn.call(null,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__11581 = a;
var G__11582 = b;
var G__11583 = c;
var G__11584 = d;
var G__11585 = e;
var G__11586 = f;
var G__11587 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587) : self__.afn.call(null,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__11588 = a;
var G__11589 = b;
var G__11590 = c;
var G__11591 = d;
var G__11592 = e;
var G__11593 = f;
var G__11594 = g;
var G__11595 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595) : self__.afn.call(null,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__11596 = a;
var G__11597 = b;
var G__11598 = c;
var G__11599 = d;
var G__11600 = e;
var G__11601 = f;
var G__11602 = g;
var G__11603 = h;
var G__11604 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604) : self__.afn.call(null,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__11605 = a;
var G__11606 = b;
var G__11607 = c;
var G__11608 = d;
var G__11609 = e;
var G__11610 = f;
var G__11611 = g;
var G__11612 = h;
var G__11613 = i;
var G__11614 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614) : self__.afn.call(null,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__11615 = a;
var G__11616 = b;
var G__11617 = c;
var G__11618 = d;
var G__11619 = e;
var G__11620 = f;
var G__11621 = g;
var G__11622 = h;
var G__11623 = i;
var G__11624 = j;
var G__11625 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625) : self__.afn.call(null,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__11626 = a;
var G__11627 = b;
var G__11628 = c;
var G__11629 = d;
var G__11630 = e;
var G__11631 = f;
var G__11632 = g;
var G__11633 = h;
var G__11634 = i;
var G__11635 = j;
var G__11636 = k;
var G__11637 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637) : self__.afn.call(null,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__11638 = a;
var G__11639 = b;
var G__11640 = c;
var G__11641 = d;
var G__11642 = e;
var G__11643 = f;
var G__11644 = g;
var G__11645 = h;
var G__11646 = i;
var G__11647 = j;
var G__11648 = k;
var G__11649 = l;
var G__11650 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650) : self__.afn.call(null,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__11651 = a;
var G__11652 = b;
var G__11653 = c;
var G__11654 = d;
var G__11655 = e;
var G__11656 = f;
var G__11657 = g;
var G__11658 = h;
var G__11659 = i;
var G__11660 = j;
var G__11661 = k;
var G__11662 = l;
var G__11663 = m;
var G__11664 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664) : self__.afn.call(null,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__11665 = a;
var G__11666 = b;
var G__11667 = c;
var G__11668 = d;
var G__11669 = e;
var G__11670 = f;
var G__11671 = g;
var G__11672 = h;
var G__11673 = i;
var G__11674 = j;
var G__11675 = k;
var G__11676 = l;
var G__11677 = m;
var G__11678 = n;
var G__11679 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679) : self__.afn.call(null,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__11680 = a;
var G__11681 = b;
var G__11682 = c;
var G__11683 = d;
var G__11684 = e;
var G__11685 = f;
var G__11686 = g;
var G__11687 = h;
var G__11688 = i;
var G__11689 = j;
var G__11690 = k;
var G__11691 = l;
var G__11692 = m;
var G__11693 = n;
var G__11694 = o;
var G__11695 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695) : self__.afn.call(null,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__11696 = a;
var G__11697 = b;
var G__11698 = c;
var G__11699 = d;
var G__11700 = e;
var G__11701 = f;
var G__11702 = g;
var G__11703 = h;
var G__11704 = i;
var G__11705 = j;
var G__11706 = k;
var G__11707 = l;
var G__11708 = m;
var G__11709 = n;
var G__11710 = o;
var G__11711 = p;
var G__11712 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712) : self__.afn.call(null,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__11713 = a;
var G__11714 = b;
var G__11715 = c;
var G__11716 = d;
var G__11717 = e;
var G__11718 = f;
var G__11719 = g;
var G__11720 = h;
var G__11721 = i;
var G__11722 = j;
var G__11723 = k;
var G__11724 = l;
var G__11725 = m;
var G__11726 = n;
var G__11727 = o;
var G__11728 = p;
var G__11729 = q;
var G__11730 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730) : self__.afn.call(null,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__11731 = a;
var G__11732 = b;
var G__11733 = c;
var G__11734 = d;
var G__11735 = e;
var G__11736 = f;
var G__11737 = g;
var G__11738 = h;
var G__11739 = i;
var G__11740 = j;
var G__11741 = k;
var G__11742 = l;
var G__11743 = m;
var G__11744 = n;
var G__11745 = o;
var G__11746 = p;
var G__11747 = q;
var G__11748 = r;
var G__11749 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749) : self__.afn.call(null,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__11750 = a;
var G__11751 = b;
var G__11752 = c;
var G__11753 = d;
var G__11754 = e;
var G__11755 = f;
var G__11756 = g;
var G__11757 = h;
var G__11758 = i;
var G__11759 = j;
var G__11760 = k;
var G__11761 = l;
var G__11762 = m;
var G__11763 = n;
var G__11764 = o;
var G__11765 = p;
var G__11766 = q;
var G__11767 = r;
var G__11768 = s;
var G__11769 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769) : self__.afn.call(null,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11770 = self__.afn;
var G__11771 = a;
var G__11772 = b;
var G__11773 = c;
var G__11774 = d;
var G__11775 = e;
var G__11776 = f;
var G__11777 = g;
var G__11778 = h;
var G__11779 = i;
var G__11780 = j;
var G__11781 = k;
var G__11782 = l;
var G__11783 = m;
var G__11784 = n;
var G__11785 = o;
var G__11786 = p;
var G__11787 = q;
var G__11788 = r;
var G__11789 = s;
var G__11790 = t;
var G__11791 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791) : cljs.core.apply.call(null,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__11796 = o;
if(G__11796){
var bit__4492__auto__ = (G__11796.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4492__auto__) || (G__11796.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__11796.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11796);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11796);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3799__auto__ = !((o == null));
if(and__3799__auto__){
var G__11800 = o;
if(G__11800){
var bit__4492__auto__ = (G__11800.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__11800.cljs$core$IMeta$)){
return true;
} else {
if((!G__11800.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11800);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11800);
}
} else {
return and__3799__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__11803__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11804 = ret;
var G__11805 = cljs.core.first(ks);
var G__11806 = cljs.core.next(ks);
coll = G__11804;
k = G__11805;
ks = G__11806;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11803 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11807__i = 0, G__11807__a = new Array(arguments.length -  2);
while (G__11807__i < G__11807__a.length) {G__11807__a[G__11807__i] = arguments[G__11807__i + 2]; ++G__11807__i;}
  ks = new cljs.core.IndexedSeq(G__11807__a,0);
} 
return G__11803__delegate.call(this,coll,k,ks);};
G__11803.cljs$lang$maxFixedArity = 2;
G__11803.cljs$lang$applyTo = (function (arglist__11808){
var coll = cljs.core.first(arglist__11808);
arglist__11808 = cljs.core.next(arglist__11808);
var k = cljs.core.first(arglist__11808);
var ks = cljs.core.rest(arglist__11808);
return G__11803__delegate(coll,k,ks);
});
G__11803.cljs$core$IFn$_invoke$arity$variadic = G__11803__delegate;
return G__11803;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__11809 = null;
if (arguments.length > 2) {
var G__11810__i = 0, G__11810__a = new Array(arguments.length -  2);
while (G__11810__i < G__11810__a.length) {G__11810__a[G__11810__i] = arguments[G__11810__i + 2]; ++G__11810__i;}
G__11809 = new cljs.core.IndexedSeq(G__11810__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11812 = x;
if(G__11812){
var bit__4492__auto__ = (G__11812.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4492__auto__) || (G__11812.cljs$core$ICollection$)){
return true;
} else {
if((!G__11812.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11812);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11812);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11814 = x;
if(G__11814){
var bit__4492__auto__ = (G__11814.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4492__auto__) || (G__11814.cljs$core$ISet$)){
return true;
} else {
if((!G__11814.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11814);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11814);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__11816 = x;
if(G__11816){
var bit__4492__auto__ = (G__11816.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4492__auto__) || (G__11816.cljs$core$IAssociative$)){
return true;
} else {
if((!G__11816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11816);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__11818 = x;
if(G__11818){
var bit__4492__auto__ = (G__11818.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4492__auto__) || (G__11818.cljs$core$ISequential$)){
return true;
} else {
if((!G__11818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11818);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__11820 = x;
if(G__11820){
var bit__4492__auto__ = (G__11820.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4492__auto__) || (G__11820.cljs$core$ISorted$)){
return true;
} else {
if((!G__11820.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11820);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__11822 = x;
if(G__11822){
var bit__4492__auto__ = (G__11822.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4492__auto__) || (G__11822.cljs$core$IReduce$)){
return true;
} else {
if((!G__11822.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11822);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11824 = x;
if(G__11824){
var bit__4492__auto__ = (G__11824.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4492__auto__) || (G__11824.cljs$core$IMap$)){
return true;
} else {
if((!G__11824.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11824);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__11826 = x;
if(G__11826){
var bit__4492__auto__ = (G__11826.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4492__auto__) || (G__11826.cljs$core$IVector$)){
return true;
} else {
if((!G__11826.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11826);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11826);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__11828 = x;
if(G__11828){
var bit__4485__auto__ = (G__11828.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4485__auto__) || (G__11828.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj11834 = {};
return obj11834;
});
var js_obj__1 = (function() { 
var G__11837__delegate = function (keyvals){
var G__11835 = goog.object.create;
var G__11836 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11835,G__11836) : cljs.core.apply.call(null,G__11835,G__11836));
};
var G__11837 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11838__i = 0, G__11838__a = new Array(arguments.length -  0);
while (G__11838__i < G__11838__a.length) {G__11838__a[G__11838__i] = arguments[G__11838__i + 0]; ++G__11838__i;}
  keyvals = new cljs.core.IndexedSeq(G__11838__a,0);
} 
return G__11837__delegate.call(this,keyvals);};
G__11837.cljs$lang$maxFixedArity = 0;
G__11837.cljs$lang$applyTo = (function (arglist__11839){
var keyvals = cljs.core.seq(arglist__11839);
return G__11837__delegate(keyvals);
});
G__11837.cljs$core$IFn$_invoke$arity$variadic = G__11837__delegate;
return G__11837;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__11840 = null;
if (arguments.length > 0) {
var G__11841__i = 0, G__11841__a = new Array(arguments.length -  0);
while (G__11841__i < G__11841__a.length) {G__11841__a[G__11841__i] = arguments[G__11841__i + 0]; ++G__11841__i;}
G__11840 = new cljs.core.IndexedSeq(G__11841__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11840);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__11844_11846 = obj;
var G__11845_11847 = ((function (G__11844_11846,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__11844_11846,keys))
;
goog.object.forEach(G__11844_11846,G__11845_11847);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11848 = (i__$1 + (1));
var G__11849 = (j__$1 + (1));
var G__11850 = (len__$1 - (1));
i__$1 = G__11848;
j__$1 = G__11849;
len__$1 = G__11850;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11851 = (i__$1 - (1));
var G__11852 = (j__$1 - (1));
var G__11853 = (len__$1 - (1));
i__$1 = G__11851;
j__$1 = G__11852;
len__$1 = G__11853;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj11855 = {};
return obj11855;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__11857 = s;
if(G__11857){
var bit__4492__auto__ = (G__11857.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__11857.cljs$core$ISeq$)){
return true;
} else {
if((!G__11857.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11857);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__11859 = s;
if(G__11859){
var bit__4492__auto__ = (G__11859.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4492__auto__) || (G__11859.cljs$core$ISeqable$)){
return true;
} else {
if((!G__11859.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11859);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11859);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3811__auto__ = cljs.core.fn_QMARK_(f);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__11863 = f;
if(G__11863){
var bit__4492__auto__ = (G__11863.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4492__auto__) || (G__11863.cljs$core$IFn$)){
return true;
} else {
if((!G__11863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11863);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__11876 = n;
return isNaN(G__11876);
})())) && (!((n === Infinity))) && (((function (){var G__11877 = n;
return parseFloat(G__11877);
})() === (function (){var G__11878 = n;
var G__11879 = (10);
return parseInt(G__11878,G__11879);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__11880__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__11881 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__11882 = etc;
s = G__11881;
xs = G__11882;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__11880 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11883__i = 0, G__11883__a = new Array(arguments.length -  2);
while (G__11883__i < G__11883__a.length) {G__11883__a[G__11883__i] = arguments[G__11883__i + 2]; ++G__11883__i;}
  more = new cljs.core.IndexedSeq(G__11883__a,0);
} 
return G__11880__delegate.call(this,x,y,more);};
G__11880.cljs$lang$maxFixedArity = 2;
G__11880.cljs$lang$applyTo = (function (arglist__11884){
var x = cljs.core.first(arglist__11884);
arglist__11884 = cljs.core.next(arglist__11884);
var y = cljs.core.first(arglist__11884);
var more = cljs.core.rest(arglist__11884);
return G__11880__delegate(x,y,more);
});
G__11880.cljs$core$IFn$_invoke$arity$variadic = G__11880__delegate;
return G__11880;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__11885 = null;
if (arguments.length > 2) {
var G__11886__i = 0, G__11886__a = new Array(arguments.length -  2);
while (G__11886__i < G__11886__a.length) {G__11886__a[G__11886__i] = arguments[G__11886__i + 2]; ++G__11886__i;}
G__11885 = new cljs.core.IndexedSeq(G__11886__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__11890 = x;
if(G__11890){
var bit__4485__auto__ = (G__11890.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4485__auto__) || (G__11890.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__11891 = x;
var G__11892 = y;
return goog.array.defaultCompare(G__11891,G__11892);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__11897 = xs;
var G__11898 = ys;
var G__11899 = len;
var G__11900 = (n + (1));
xs = G__11897;
ys = G__11898;
len = G__11899;
n = G__11900;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__11905 = x;
var G__11906 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11905,G__11906) : f.call(null,G__11905,G__11906));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11907 = y;
var G__11908 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11907,G__11908) : f.call(null,G__11907,G__11908));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__11914 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11914) : cljs.core.to_array.call(null,G__11914));
})();
var G__11915_11917 = a;
var G__11916_11918 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__11915_11917,G__11916_11918);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__11924 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11924) : keyfn.call(null,G__11924));
})(),(function (){var G__11925 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11925) : keyfn.call(null,G__11925));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__11931 = f;
var G__11932 = cljs.core.first(s);
var G__11933 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11931,G__11932,G__11933) : cljs.core.reduce.call(null,G__11931,G__11932,G__11933));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__11934 = val__$1;
var G__11935 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11934,G__11935) : f.call(null,G__11934,G__11935));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11936 = nval;
var G__11937 = cljs.core.next(coll__$1);
val__$1 = G__11936;
coll__$1 = G__11937;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__11941 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11941) : cljs.core.to_array.call(null,G__11941));
})();
var G__11942_11944 = a;
goog.array.shuffle(G__11942_11944);

var G__11943 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11943) : cljs.core.vec.call(null,G__11943));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__11947 = coll;
if(G__11947){
var bit__4485__auto__ = (G__11947.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__11947.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__11948 = coll;
if(G__11948){
var bit__4485__auto__ = (G__11948.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__11948.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__11957 = null;
var G__11957__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__11957__1 = (function (x){
var G__11954 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11954) : cf.call(null,G__11954));
});
var G__11957__2 = (function (x,y){
var G__11955 = x;
var G__11956 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11955,G__11956) : f.call(null,G__11955,G__11956));
});
G__11957 = function(x,y){
switch(arguments.length){
case 0:
return G__11957__0.call(this);
case 1:
return G__11957__1.call(this,x);
case 2:
return G__11957__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11957.cljs$core$IFn$_invoke$arity$0 = G__11957__0;
G__11957.cljs$core$IFn$_invoke$arity$1 = G__11957__1;
G__11957.cljs$core$IFn$_invoke$arity$2 = G__11957__2;
return G__11957;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__11964 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11964) : xform.call(null,G__11964));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__11965 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11965) : f__$1.call(null,G__11965));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__11966__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__11966 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11967__i = 0, G__11967__a = new Array(arguments.length -  2);
while (G__11967__i < G__11967__a.length) {G__11967__a[G__11967__i] = arguments[G__11967__i + 2]; ++G__11967__i;}
  more = new cljs.core.IndexedSeq(G__11967__a,0);
} 
return G__11966__delegate.call(this,x,y,more);};
G__11966.cljs$lang$maxFixedArity = 2;
G__11966.cljs$lang$applyTo = (function (arglist__11968){
var x = cljs.core.first(arglist__11968);
arglist__11968 = cljs.core.next(arglist__11968);
var y = cljs.core.first(arglist__11968);
var more = cljs.core.rest(arglist__11968);
return G__11966__delegate(x,y,more);
});
G__11966.cljs$core$IFn$_invoke$arity$variadic = G__11966__delegate;
return G__11966;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__11969 = null;
if (arguments.length > 2) {
var G__11970__i = 0, G__11970__a = new Array(arguments.length -  2);
while (G__11970__i < G__11970__a.length) {G__11970__a[G__11970__i] = arguments[G__11970__i + 2]; ++G__11970__i;}
G__11969 = new cljs.core.IndexedSeq(G__11970__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__11971__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__11971 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11972__i = 0, G__11972__a = new Array(arguments.length -  2);
while (G__11972__i < G__11972__a.length) {G__11972__a[G__11972__i] = arguments[G__11972__i + 2]; ++G__11972__i;}
  more = new cljs.core.IndexedSeq(G__11972__a,0);
} 
return G__11971__delegate.call(this,x,y,more);};
G__11971.cljs$lang$maxFixedArity = 2;
G__11971.cljs$lang$applyTo = (function (arglist__11973){
var x = cljs.core.first(arglist__11973);
arglist__11973 = cljs.core.next(arglist__11973);
var y = cljs.core.first(arglist__11973);
var more = cljs.core.rest(arglist__11973);
return G__11971__delegate(x,y,more);
});
G__11971.cljs$core$IFn$_invoke$arity$variadic = G__11971__delegate;
return G__11971;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__11974 = null;
if (arguments.length > 2) {
var G__11975__i = 0, G__11975__a = new Array(arguments.length -  2);
while (G__11975__i < G__11975__a.length) {G__11975__a[G__11975__i] = arguments[G__11975__i + 2]; ++G__11975__i;}
G__11974 = new cljs.core.IndexedSeq(G__11975__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__11976__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__11976 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11977__i = 0, G__11977__a = new Array(arguments.length -  2);
while (G__11977__i < G__11977__a.length) {G__11977__a[G__11977__i] = arguments[G__11977__i + 2]; ++G__11977__i;}
  more = new cljs.core.IndexedSeq(G__11977__a,0);
} 
return G__11976__delegate.call(this,x,y,more);};
G__11976.cljs$lang$maxFixedArity = 2;
G__11976.cljs$lang$applyTo = (function (arglist__11978){
var x = cljs.core.first(arglist__11978);
arglist__11978 = cljs.core.next(arglist__11978);
var y = cljs.core.first(arglist__11978);
var more = cljs.core.rest(arglist__11978);
return G__11976__delegate(x,y,more);
});
G__11976.cljs$core$IFn$_invoke$arity$variadic = G__11976__delegate;
return G__11976;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__11979 = null;
if (arguments.length > 2) {
var G__11980__i = 0, G__11980__a = new Array(arguments.length -  2);
while (G__11980__i < G__11980__a.length) {G__11980__a[G__11980__i] = arguments[G__11980__i + 2]; ++G__11980__i;}
G__11979 = new cljs.core.IndexedSeq(G__11980__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__11985__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11985 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11986__i = 0, G__11986__a = new Array(arguments.length -  2);
while (G__11986__i < G__11986__a.length) {G__11986__a[G__11986__i] = arguments[G__11986__i + 2]; ++G__11986__i;}
  more = new cljs.core.IndexedSeq(G__11986__a,0);
} 
return G__11985__delegate.call(this,x,y,more);};
G__11985.cljs$lang$maxFixedArity = 2;
G__11985.cljs$lang$applyTo = (function (arglist__11987){
var x = cljs.core.first(arglist__11987);
arglist__11987 = cljs.core.next(arglist__11987);
var y = cljs.core.first(arglist__11987);
var more = cljs.core.rest(arglist__11987);
return G__11985__delegate(x,y,more);
});
G__11985.cljs$core$IFn$_invoke$arity$variadic = G__11985__delegate;
return G__11985;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__11988 = null;
if (arguments.length > 2) {
var G__11989__i = 0, G__11989__a = new Array(arguments.length -  2);
while (G__11989__i < G__11989__a.length) {G__11989__a[G__11989__i] = arguments[G__11989__i + 2]; ++G__11989__i;}
G__11988 = new cljs.core.IndexedSeq(G__11989__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__11990__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__11991 = y;
var G__11992 = cljs.core.first(more);
var G__11993 = cljs.core.next(more);
x = G__11991;
y = G__11992;
more = G__11993;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11990 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11994__i = 0, G__11994__a = new Array(arguments.length -  2);
while (G__11994__i < G__11994__a.length) {G__11994__a[G__11994__i] = arguments[G__11994__i + 2]; ++G__11994__i;}
  more = new cljs.core.IndexedSeq(G__11994__a,0);
} 
return G__11990__delegate.call(this,x,y,more);};
G__11990.cljs$lang$maxFixedArity = 2;
G__11990.cljs$lang$applyTo = (function (arglist__11995){
var x = cljs.core.first(arglist__11995);
arglist__11995 = cljs.core.next(arglist__11995);
var y = cljs.core.first(arglist__11995);
var more = cljs.core.rest(arglist__11995);
return G__11990__delegate(x,y,more);
});
G__11990.cljs$core$IFn$_invoke$arity$variadic = G__11990__delegate;
return G__11990;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__11996 = null;
if (arguments.length > 2) {
var G__11997__i = 0, G__11997__a = new Array(arguments.length -  2);
while (G__11997__i < G__11997__a.length) {G__11997__a[G__11997__i] = arguments[G__11997__i + 2]; ++G__11997__i;}
G__11996 = new cljs.core.IndexedSeq(G__11997__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__11998__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__11999 = y;
var G__12000 = cljs.core.first(more);
var G__12001 = cljs.core.next(more);
x = G__11999;
y = G__12000;
more = G__12001;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11998 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12002__i = 0, G__12002__a = new Array(arguments.length -  2);
while (G__12002__i < G__12002__a.length) {G__12002__a[G__12002__i] = arguments[G__12002__i + 2]; ++G__12002__i;}
  more = new cljs.core.IndexedSeq(G__12002__a,0);
} 
return G__11998__delegate.call(this,x,y,more);};
G__11998.cljs$lang$maxFixedArity = 2;
G__11998.cljs$lang$applyTo = (function (arglist__12003){
var x = cljs.core.first(arglist__12003);
arglist__12003 = cljs.core.next(arglist__12003);
var y = cljs.core.first(arglist__12003);
var more = cljs.core.rest(arglist__12003);
return G__11998__delegate(x,y,more);
});
G__11998.cljs$core$IFn$_invoke$arity$variadic = G__11998__delegate;
return G__11998;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12004 = null;
if (arguments.length > 2) {
var G__12005__i = 0, G__12005__a = new Array(arguments.length -  2);
while (G__12005__i < G__12005__a.length) {G__12005__a[G__12005__i] = arguments[G__12005__i + 2]; ++G__12005__i;}
G__12004 = new cljs.core.IndexedSeq(G__12005__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12006__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12007 = y;
var G__12008 = cljs.core.first(more);
var G__12009 = cljs.core.next(more);
x = G__12007;
y = G__12008;
more = G__12009;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12006 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12010__i = 0, G__12010__a = new Array(arguments.length -  2);
while (G__12010__i < G__12010__a.length) {G__12010__a[G__12010__i] = arguments[G__12010__i + 2]; ++G__12010__i;}
  more = new cljs.core.IndexedSeq(G__12010__a,0);
} 
return G__12006__delegate.call(this,x,y,more);};
G__12006.cljs$lang$maxFixedArity = 2;
G__12006.cljs$lang$applyTo = (function (arglist__12011){
var x = cljs.core.first(arglist__12011);
arglist__12011 = cljs.core.next(arglist__12011);
var y = cljs.core.first(arglist__12011);
var more = cljs.core.rest(arglist__12011);
return G__12006__delegate(x,y,more);
});
G__12006.cljs$core$IFn$_invoke$arity$variadic = G__12006__delegate;
return G__12006;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12012 = null;
if (arguments.length > 2) {
var G__12013__i = 0, G__12013__a = new Array(arguments.length -  2);
while (G__12013__i < G__12013__a.length) {G__12013__a[G__12013__i] = arguments[G__12013__i + 2]; ++G__12013__i;}
G__12012 = new cljs.core.IndexedSeq(G__12013__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12014__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12015 = y;
var G__12016 = cljs.core.first(more);
var G__12017 = cljs.core.next(more);
x = G__12015;
y = G__12016;
more = G__12017;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12014 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12018__i = 0, G__12018__a = new Array(arguments.length -  2);
while (G__12018__i < G__12018__a.length) {G__12018__a[G__12018__i] = arguments[G__12018__i + 2]; ++G__12018__i;}
  more = new cljs.core.IndexedSeq(G__12018__a,0);
} 
return G__12014__delegate.call(this,x,y,more);};
G__12014.cljs$lang$maxFixedArity = 2;
G__12014.cljs$lang$applyTo = (function (arglist__12019){
var x = cljs.core.first(arglist__12019);
arglist__12019 = cljs.core.next(arglist__12019);
var y = cljs.core.first(arglist__12019);
var more = cljs.core.rest(arglist__12019);
return G__12014__delegate(x,y,more);
});
G__12014.cljs$core$IFn$_invoke$arity$variadic = G__12014__delegate;
return G__12014;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12020 = null;
if (arguments.length > 2) {
var G__12021__i = 0, G__12021__a = new Array(arguments.length -  2);
while (G__12021__i < G__12021__a.length) {G__12021__a[G__12021__i] = arguments[G__12021__i + 2]; ++G__12021__i;}
G__12020 = new cljs.core.IndexedSeq(G__12021__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
});
var max__3 = (function() { 
var G__12022__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})(),more);
};
var G__12022 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12023__i = 0, G__12023__a = new Array(arguments.length -  2);
while (G__12023__i < G__12023__a.length) {G__12023__a[G__12023__i] = arguments[G__12023__i + 2]; ++G__12023__i;}
  more = new cljs.core.IndexedSeq(G__12023__a,0);
} 
return G__12022__delegate.call(this,x,y,more);};
G__12022.cljs$lang$maxFixedArity = 2;
G__12022.cljs$lang$applyTo = (function (arglist__12024){
var x = cljs.core.first(arglist__12024);
arglist__12024 = cljs.core.next(arglist__12024);
var y = cljs.core.first(arglist__12024);
var more = cljs.core.rest(arglist__12024);
return G__12022__delegate(x,y,more);
});
G__12022.cljs$core$IFn$_invoke$arity$variadic = G__12022__delegate;
return G__12022;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12025 = null;
if (arguments.length > 2) {
var G__12026__i = 0, G__12026__a = new Array(arguments.length -  2);
while (G__12026__i < G__12026__a.length) {G__12026__a[G__12026__i] = arguments[G__12026__i + 2]; ++G__12026__i;}
G__12025 = new cljs.core.IndexedSeq(G__12026__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12025);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
});
var min__3 = (function() { 
var G__12027__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
})(),more);
};
var G__12027 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12028__i = 0, G__12028__a = new Array(arguments.length -  2);
while (G__12028__i < G__12028__a.length) {G__12028__a[G__12028__i] = arguments[G__12028__i + 2]; ++G__12028__i;}
  more = new cljs.core.IndexedSeq(G__12028__a,0);
} 
return G__12027__delegate.call(this,x,y,more);};
G__12027.cljs$lang$maxFixedArity = 2;
G__12027.cljs$lang$applyTo = (function (arglist__12029){
var x = cljs.core.first(arglist__12029);
arglist__12029 = cljs.core.next(arglist__12029);
var y = cljs.core.first(arglist__12029);
var more = cljs.core.rest(arglist__12029);
return G__12027__delegate(x,y,more);
});
G__12027.cljs$core$IFn$_invoke$arity$variadic = G__12027__delegate;
return G__12027;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12030 = null;
if (arguments.length > 2) {
var G__12031__i = 0, G__12031__a = new Array(arguments.length -  2);
while (G__12031__i < G__12031__a.length) {G__12031__a[G__12031__i] = arguments[G__12031__i + 2]; ++G__12031__i;}
G__12030 = new cljs.core.IndexedSeq(G__12031__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12030);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12032__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12032 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12033__i = 0, G__12033__a = new Array(arguments.length -  2);
while (G__12033__i < G__12033__a.length) {G__12033__a[G__12033__i] = arguments[G__12033__i + 2]; ++G__12033__i;}
  more = new cljs.core.IndexedSeq(G__12033__a,0);
} 
return G__12032__delegate.call(this,x,y,more);};
G__12032.cljs$lang$maxFixedArity = 2;
G__12032.cljs$lang$applyTo = (function (arglist__12034){
var x = cljs.core.first(arglist__12034);
arglist__12034 = cljs.core.next(arglist__12034);
var y = cljs.core.first(arglist__12034);
var more = cljs.core.rest(arglist__12034);
return G__12032__delegate(x,y,more);
});
G__12032.cljs$core$IFn$_invoke$arity$variadic = G__12032__delegate;
return G__12032;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12035 = null;
if (arguments.length > 2) {
var G__12036__i = 0, G__12036__a = new Array(arguments.length -  2);
while (G__12036__i < G__12036__a.length) {G__12036__a[G__12036__i] = arguments[G__12036__i + 2]; ++G__12036__i;}
G__12035 = new cljs.core.IndexedSeq(G__12036__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12037__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12038__i = 0, G__12038__a = new Array(arguments.length -  2);
while (G__12038__i < G__12038__a.length) {G__12038__a[G__12038__i] = arguments[G__12038__i + 2]; ++G__12038__i;}
  more = new cljs.core.IndexedSeq(G__12038__a,0);
} 
return G__12037__delegate.call(this,x,y,more);};
G__12037.cljs$lang$maxFixedArity = 2;
G__12037.cljs$lang$applyTo = (function (arglist__12039){
var x = cljs.core.first(arglist__12039);
arglist__12039 = cljs.core.next(arglist__12039);
var y = cljs.core.first(arglist__12039);
var more = cljs.core.rest(arglist__12039);
return G__12037__delegate(x,y,more);
});
G__12037.cljs$core$IFn$_invoke$arity$variadic = G__12037__delegate;
return G__12037;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12040 = null;
if (arguments.length > 2) {
var G__12041__i = 0, G__12041__a = new Array(arguments.length -  2);
while (G__12041__i < G__12041__a.length) {G__12041__a[G__12041__i] = arguments[G__12041__i + 2]; ++G__12041__i;}
G__12040 = new cljs.core.IndexedSeq(G__12041__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12046__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12046 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12047__i = 0, G__12047__a = new Array(arguments.length -  2);
while (G__12047__i < G__12047__a.length) {G__12047__a[G__12047__i] = arguments[G__12047__i + 2]; ++G__12047__i;}
  more = new cljs.core.IndexedSeq(G__12047__a,0);
} 
return G__12046__delegate.call(this,x,y,more);};
G__12046.cljs$lang$maxFixedArity = 2;
G__12046.cljs$lang$applyTo = (function (arglist__12048){
var x = cljs.core.first(arglist__12048);
arglist__12048 = cljs.core.next(arglist__12048);
var y = cljs.core.first(arglist__12048);
var more = cljs.core.rest(arglist__12048);
return G__12046__delegate(x,y,more);
});
G__12046.cljs$core$IFn$_invoke$arity$variadic = G__12046__delegate;
return G__12046;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12049 = null;
if (arguments.length > 2) {
var G__12050__i = 0, G__12050__a = new Array(arguments.length -  2);
while (G__12050__i < G__12050__a.length) {G__12050__a[G__12050__i] = arguments[G__12050__i + 2]; ++G__12050__i;}
G__12049 = new cljs.core.IndexedSeq(G__12050__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12051__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12051 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12052__i = 0, G__12052__a = new Array(arguments.length -  2);
while (G__12052__i < G__12052__a.length) {G__12052__a[G__12052__i] = arguments[G__12052__i + 2]; ++G__12052__i;}
  more = new cljs.core.IndexedSeq(G__12052__a,0);
} 
return G__12051__delegate.call(this,x,y,more);};
G__12051.cljs$lang$maxFixedArity = 2;
G__12051.cljs$lang$applyTo = (function (arglist__12053){
var x = cljs.core.first(arglist__12053);
arglist__12053 = cljs.core.next(arglist__12053);
var y = cljs.core.first(arglist__12053);
var more = cljs.core.rest(arglist__12053);
return G__12051__delegate(x,y,more);
});
G__12051.cljs$core$IFn$_invoke$arity$variadic = G__12051__delegate;
return G__12051;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12054 = null;
if (arguments.length > 2) {
var G__12055__i = 0, G__12055__a = new Array(arguments.length -  2);
while (G__12055__i < G__12055__a.length) {G__12055__a[G__12055__i] = arguments[G__12055__i + 2]; ++G__12055__i;}
G__12054 = new cljs.core.IndexedSeq(G__12055__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12056__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12056 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12057__i = 0, G__12057__a = new Array(arguments.length -  2);
while (G__12057__i < G__12057__a.length) {G__12057__a[G__12057__i] = arguments[G__12057__i + 2]; ++G__12057__i;}
  more = new cljs.core.IndexedSeq(G__12057__a,0);
} 
return G__12056__delegate.call(this,x,y,more);};
G__12056.cljs$lang$maxFixedArity = 2;
G__12056.cljs$lang$applyTo = (function (arglist__12058){
var x = cljs.core.first(arglist__12058);
arglist__12058 = cljs.core.next(arglist__12058);
var y = cljs.core.first(arglist__12058);
var more = cljs.core.rest(arglist__12058);
return G__12056__delegate(x,y,more);
});
G__12056.cljs$core$IFn$_invoke$arity$variadic = G__12056__delegate;
return G__12056;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12059 = null;
if (arguments.length > 2) {
var G__12060__i = 0, G__12060__a = new Array(arguments.length -  2);
while (G__12060__i < G__12060__a.length) {G__12060__a[G__12060__i] = arguments[G__12060__i + 2]; ++G__12060__i;}
G__12059 = new cljs.core.IndexedSeq(G__12060__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12063 = x;
var G__12064 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12063,G__12064) : cljs.core.mod.call(null,G__12063,G__12064));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12065__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12065 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12066__i = 0, G__12066__a = new Array(arguments.length -  2);
while (G__12066__i < G__12066__a.length) {G__12066__a[G__12066__i] = arguments[G__12066__i + 2]; ++G__12066__i;}
  more = new cljs.core.IndexedSeq(G__12066__a,0);
} 
return G__12065__delegate.call(this,x,y,more);};
G__12065.cljs$lang$maxFixedArity = 2;
G__12065.cljs$lang$applyTo = (function (arglist__12067){
var x = cljs.core.first(arglist__12067);
arglist__12067 = cljs.core.next(arglist__12067);
var y = cljs.core.first(arglist__12067);
var more = cljs.core.rest(arglist__12067);
return G__12065__delegate(x,y,more);
});
G__12065.cljs$core$IFn$_invoke$arity$variadic = G__12065__delegate;
return G__12065;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12068 = null;
if (arguments.length > 2) {
var G__12069__i = 0, G__12069__a = new Array(arguments.length -  2);
while (G__12069__i < G__12069__a.length) {G__12069__a[G__12069__i] = arguments[G__12069__i + 2]; ++G__12069__i;}
G__12068 = new cljs.core.IndexedSeq(G__12069__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12070__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12070 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12071__i = 0, G__12071__a = new Array(arguments.length -  2);
while (G__12071__i < G__12071__a.length) {G__12071__a[G__12071__i] = arguments[G__12071__i + 2]; ++G__12071__i;}
  more = new cljs.core.IndexedSeq(G__12071__a,0);
} 
return G__12070__delegate.call(this,x,y,more);};
G__12070.cljs$lang$maxFixedArity = 2;
G__12070.cljs$lang$applyTo = (function (arglist__12072){
var x = cljs.core.first(arglist__12072);
arglist__12072 = cljs.core.next(arglist__12072);
var y = cljs.core.first(arglist__12072);
var more = cljs.core.rest(arglist__12072);
return G__12070__delegate(x,y,more);
});
G__12070.cljs$core$IFn$_invoke$arity$variadic = G__12070__delegate;
return G__12070;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12073 = null;
if (arguments.length > 2) {
var G__12074__i = 0, G__12074__a = new Array(arguments.length -  2);
while (G__12074__i < G__12074__a.length) {G__12074__a[G__12074__i] = arguments[G__12074__i + 2]; ++G__12074__i;}
G__12073 = new cljs.core.IndexedSeq(G__12074__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12077 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12077) : Math.floor.call(null,G__12077));
} else {
var G__12078 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12078) : Math.ceil.call(null,G__12078));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12079__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12079 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12080__i = 0, G__12080__a = new Array(arguments.length -  2);
while (G__12080__i < G__12080__a.length) {G__12080__a[G__12080__i] = arguments[G__12080__i + 2]; ++G__12080__i;}
  more = new cljs.core.IndexedSeq(G__12080__a,0);
} 
return G__12079__delegate.call(this,x,y,more);};
G__12079.cljs$lang$maxFixedArity = 2;
G__12079.cljs$lang$applyTo = (function (arglist__12081){
var x = cljs.core.first(arglist__12081);
arglist__12081 = cljs.core.next(arglist__12081);
var y = cljs.core.first(arglist__12081);
var more = cljs.core.rest(arglist__12081);
return G__12079__delegate(x,y,more);
});
G__12079.cljs$core$IFn$_invoke$arity$variadic = G__12079__delegate;
return G__12079;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12082 = null;
if (arguments.length > 2) {
var G__12083__i = 0, G__12083__a = new Array(arguments.length -  2);
while (G__12083__i < G__12083__a.length) {G__12083__a[G__12083__i] = arguments[G__12083__i + 2]; ++G__12083__i;}
G__12082 = new cljs.core.IndexedSeq(G__12083__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12084__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12084 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12085__i = 0, G__12085__a = new Array(arguments.length -  2);
while (G__12085__i < G__12085__a.length) {G__12085__a[G__12085__i] = arguments[G__12085__i + 2]; ++G__12085__i;}
  more = new cljs.core.IndexedSeq(G__12085__a,0);
} 
return G__12084__delegate.call(this,x,y,more);};
G__12084.cljs$lang$maxFixedArity = 2;
G__12084.cljs$lang$applyTo = (function (arglist__12086){
var x = cljs.core.first(arglist__12086);
arglist__12086 = cljs.core.next(arglist__12086);
var y = cljs.core.first(arglist__12086);
var more = cljs.core.rest(arglist__12086);
return G__12084__delegate(x,y,more);
});
G__12084.cljs$core$IFn$_invoke$arity$variadic = G__12084__delegate;
return G__12084;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12087 = null;
if (arguments.length > 2) {
var G__12088__i = 0, G__12088__a = new Array(arguments.length -  2);
while (G__12088__i < G__12088__a.length) {G__12088__a[G__12088__i] = arguments[G__12088__i + 2]; ++G__12088__i;}
G__12087 = new cljs.core.IndexedSeq(G__12088__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12089__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12089 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12090__i = 0, G__12090__a = new Array(arguments.length -  2);
while (G__12090__i < G__12090__a.length) {G__12090__a[G__12090__i] = arguments[G__12090__i + 2]; ++G__12090__i;}
  more = new cljs.core.IndexedSeq(G__12090__a,0);
} 
return G__12089__delegate.call(this,x,y,more);};
G__12089.cljs$lang$maxFixedArity = 2;
G__12089.cljs$lang$applyTo = (function (arglist__12091){
var x = cljs.core.first(arglist__12091);
arglist__12091 = cljs.core.next(arglist__12091);
var y = cljs.core.first(arglist__12091);
var more = cljs.core.rest(arglist__12091);
return G__12089__delegate(x,y,more);
});
G__12089.cljs$core$IFn$_invoke$arity$variadic = G__12089__delegate;
return G__12089;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12092 = null;
if (arguments.length > 2) {
var G__12093__i = 0, G__12093__a = new Array(arguments.length -  2);
while (G__12093__i < G__12093__a.length) {G__12093__a[G__12093__i] = arguments[G__12093__i + 2]; ++G__12093__i;}
G__12092 = new cljs.core.IndexedSeq(G__12093__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12094__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12094 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12095__i = 0, G__12095__a = new Array(arguments.length -  2);
while (G__12095__i < G__12095__a.length) {G__12095__a[G__12095__i] = arguments[G__12095__i + 2]; ++G__12095__i;}
  more = new cljs.core.IndexedSeq(G__12095__a,0);
} 
return G__12094__delegate.call(this,x,y,more);};
G__12094.cljs$lang$maxFixedArity = 2;
G__12094.cljs$lang$applyTo = (function (arglist__12096){
var x = cljs.core.first(arglist__12096);
arglist__12096 = cljs.core.next(arglist__12096);
var y = cljs.core.first(arglist__12096);
var more = cljs.core.rest(arglist__12096);
return G__12094__delegate(x,y,more);
});
G__12094.cljs$core$IFn$_invoke$arity$variadic = G__12094__delegate;
return G__12094;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12097 = null;
if (arguments.length > 2) {
var G__12098__i = 0, G__12098__a = new Array(arguments.length -  2);
while (G__12098__i < G__12098__a.length) {G__12098__a[G__12098__i] = arguments[G__12098__i + 2]; ++G__12098__i;}
G__12097 = new cljs.core.IndexedSeq(G__12098__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12097);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12103__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12104 = y;
var G__12105 = cljs.core.first(more);
var G__12106 = cljs.core.next(more);
x = G__12104;
y = G__12105;
more = G__12106;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12103 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12107__i = 0, G__12107__a = new Array(arguments.length -  2);
while (G__12107__i < G__12107__a.length) {G__12107__a[G__12107__i] = arguments[G__12107__i + 2]; ++G__12107__i;}
  more = new cljs.core.IndexedSeq(G__12107__a,0);
} 
return G__12103__delegate.call(this,x,y,more);};
G__12103.cljs$lang$maxFixedArity = 2;
G__12103.cljs$lang$applyTo = (function (arglist__12108){
var x = cljs.core.first(arglist__12108);
arglist__12108 = cljs.core.next(arglist__12108);
var y = cljs.core.first(arglist__12108);
var more = cljs.core.rest(arglist__12108);
return G__12103__delegate(x,y,more);
});
G__12103.cljs$core$IFn$_invoke$arity$variadic = G__12103__delegate;
return G__12103;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12109 = null;
if (arguments.length > 2) {
var G__12110__i = 0, G__12110__a = new Array(arguments.length -  2);
while (G__12110__i < G__12110__a.length) {G__12110__a[G__12110__i] = arguments[G__12110__i + 2]; ++G__12110__i;}
G__12109 = new cljs.core.IndexedSeq(G__12110__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12111 = (n__$1 - (1));
var G__12112 = cljs.core.next(xs);
n__$1 = G__12111;
xs = G__12112;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12116 = x;
return goog.string.buildString(G__12116);
}
});
var str__2 = (function() { 
var G__12117__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12118 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12119 = cljs.core.next(more);
sb = G__12118;
more = G__12119;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12117 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12120__i = 0, G__12120__a = new Array(arguments.length -  1);
while (G__12120__i < G__12120__a.length) {G__12120__a[G__12120__i] = arguments[G__12120__i + 1]; ++G__12120__i;}
  ys = new cljs.core.IndexedSeq(G__12120__a,0);
} 
return G__12117__delegate.call(this,x,ys);};
G__12117.cljs$lang$maxFixedArity = 1;
G__12117.cljs$lang$applyTo = (function (arglist__12121){
var x = cljs.core.first(arglist__12121);
var ys = cljs.core.rest(arglist__12121);
return G__12117__delegate(x,ys);
});
G__12117.cljs$core$IFn$_invoke$arity$variadic = G__12117__delegate;
return G__12117;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12122 = null;
if (arguments.length > 1) {
var G__12123__i = 0, G__12123__a = new Array(arguments.length -  1);
while (G__12123__i < G__12123__a.length) {G__12123__a[G__12123__i] = arguments[G__12123__i + 1]; ++G__12123__i;}
G__12122 = new cljs.core.IndexedSeq(G__12123__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12124 = cljs.core.next(xs);
var G__12125 = cljs.core.next(ys);
xs = G__12124;
ys = G__12125;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12126 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12127 = cljs.core.next(s);
res = G__12126;
s = G__12127;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12132 = ((h + (cljs.core.hash((function (){var G__12130 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12130) : cljs.core.key.call(null,G__12130));
})()) ^ cljs.core.hash((function (){var G__12131 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12131) : cljs.core.val.call(null,G__12131));
})()))) % (4503599627370496));
var G__12133 = cljs.core.next(s);
h = G__12132;
s = G__12133;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12134 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12135 = cljs.core.next(s__$1);
h = G__12134;
s__$1 = G__12135;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12146_12156 = cljs.core.seq(fn_map);
var chunk__12147_12157 = null;
var count__12148_12158 = (0);
var i__12149_12159 = (0);
while(true){
if((i__12149_12159 < count__12148_12158)){
var vec__12150_12160 = chunk__12147_12157.cljs$core$IIndexed$_nth$arity$2(null,i__12149_12159);
var key_name_12161 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12150_12160,(0),null);
var f_12162 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12150_12160,(1),null);
var str_name_12163 = (function (){var G__12151 = key_name_12161;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12151) : cljs.core.name.call(null,G__12151));
})();
(obj[str_name_12163] = f_12162);

var G__12164 = seq__12146_12156;
var G__12165 = chunk__12147_12157;
var G__12166 = count__12148_12158;
var G__12167 = (i__12149_12159 + (1));
seq__12146_12156 = G__12164;
chunk__12147_12157 = G__12165;
count__12148_12158 = G__12166;
i__12149_12159 = G__12167;
continue;
} else {
var temp__4126__auto___12168 = cljs.core.seq(seq__12146_12156);
if(temp__4126__auto___12168){
var seq__12146_12169__$1 = temp__4126__auto___12168;
if(cljs.core.chunked_seq_QMARK_(seq__12146_12169__$1)){
var c__4598__auto___12170 = (function (){var G__12152 = seq__12146_12169__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12152) : cljs.core.chunk_first.call(null,G__12152));
})();
var G__12171 = (function (){var G__12153 = seq__12146_12169__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12153) : cljs.core.chunk_rest.call(null,G__12153));
})();
var G__12172 = c__4598__auto___12170;
var G__12173 = cljs.core.count(c__4598__auto___12170);
var G__12174 = (0);
seq__12146_12156 = G__12171;
chunk__12147_12157 = G__12172;
count__12148_12158 = G__12173;
i__12149_12159 = G__12174;
continue;
} else {
var vec__12154_12175 = cljs.core.first(seq__12146_12169__$1);
var key_name_12176 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12154_12175,(0),null);
var f_12177 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12154_12175,(1),null);
var str_name_12178 = (function (){var G__12155 = key_name_12176;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12155) : cljs.core.name.call(null,G__12155));
})();
(obj[str_name_12178] = f_12177);

var G__12179 = cljs.core.next(seq__12146_12169__$1);
var G__12180 = null;
var G__12181 = (0);
var G__12182 = (0);
seq__12146_12156 = G__12179;
chunk__12147_12157 = G__12180;
count__12148_12158 = G__12181;
i__12149_12159 = G__12182;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12184 = coll;
if(G__12184){
var bit__4492__auto__ = (G__12184.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4492__auto__) || (G__12184.cljs$core$IReversible$)){
return true;
} else {
if((!G__12184.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12184);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12184);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12185 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12185;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12186 = (i - (1));
var G__12187 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12186;
r = G__12187;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12188__i = 0, G__12188__a = new Array(arguments.length -  0);
while (G__12188__i < G__12188__a.length) {G__12188__a[G__12188__i] = arguments[G__12188__i + 0]; ++G__12188__i;}
  xs = new cljs.core.IndexedSeq(G__12188__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12189){
var xs = cljs.core.seq(arglist__12189);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3811__auto__ = (coll == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__12193 = coll;
if(G__12193){
var bit__4485__auto__ = (G__12193.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__12193.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12195 = x;
if(G__12195){
var bit__4492__auto__ = (G__12195.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4492__auto__) || (G__12195.cljs$core$IList$)){
return true;
} else {
if((!G__12195.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12195);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12195);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12202 = a.ns;
var G__12203 = b.ns;
return goog.array.defaultCompare(G__12202,G__12203);
})();
if(((0) === nsc)){
var G__12204 = a.name;
var G__12205 = b.name;
return goog.array.defaultCompare(G__12204,G__12205);
} else {
return nsc;
}
}
} else {
var G__12206 = a.name;
var G__12207 = b.name;
return goog.array.defaultCompare(G__12206,G__12207);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12209 = null;
var G__12209__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12209__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12209 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12209__2.call(this,self__,coll);
case 3:
return G__12209__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12209.cljs$core$IFn$_invoke$arity$2 = G__12209__2;
G__12209.cljs$core$IFn$_invoke$arity$3 = G__12209__3;
return G__12209;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12208){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12208)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12211 = x;
if(G__12211){
var bit__4485__auto__ = (G__12211.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__12211.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12213 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12213) : cljs.core.name.call(null,G__12213));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12214 = ls.sval();
ls = G__12214;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12216 = s;
if(G__12216){
var bit__4485__auto__ = (G__12216.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4485__auto__) || (G__12216.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12217 = cljs.core.next(s__$1);
s__$1 = G__12217;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12218 = (0);
var xs_12219 = cljs.core.seq(coll);
while(true){
if(xs_12219){
(ret[i_12218] = cljs.core.to_array(cljs.core.first(xs_12219)));

var G__12220 = (i_12218 + (1));
var G__12221 = cljs.core.next(xs_12219);
i_12218 = G__12220;
xs_12219 = G__12221;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12224 = (i + (1));
var G__12225 = cljs.core.next(s__$1);
i = G__12224;
s__$1 = G__12225;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12226 = size;
var i_12227 = (0);
while(true){
if((i_12227 < n__4698__auto___12226)){
(a[i_12227] = init_val_or_seq);

var G__12228 = (i_12227 + (1));
i_12227 = G__12228;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12231 = (i + (1));
var G__12232 = cljs.core.next(s__$1);
i = G__12231;
s__$1 = G__12232;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12233 = size;
var i_12234 = (0);
while(true){
if((i_12234 < n__4698__auto___12233)){
(a[i_12234] = init_val_or_seq);

var G__12235 = (i_12234 + (1));
i_12234 = G__12235;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12238 = (i + (1));
var G__12239 = cljs.core.next(s__$1);
i = G__12238;
s__$1 = G__12239;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12240 = size;
var i_12241 = (0);
while(true){
if((i_12241 < n__4698__auto___12240)){
(a[i_12241] = init_val_or_seq);

var G__12242 = (i_12241 + (1));
i_12241 = G__12242;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12245 = (i + (1));
var G__12246 = cljs.core.next(s__$1);
i = G__12245;
s__$1 = G__12246;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12247 = size;
var i_12248 = (0);
while(true){
if((i_12248 < n__4698__auto___12247)){
(a[i_12248] = init_val_or_seq);

var G__12249 = (i_12248 + (1));
i_12248 = G__12249;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12250 = cljs.core.next(s__$1);
var G__12251 = (i - (1));
var G__12252 = (sum + (1));
s__$1 = G__12250;
i = G__12251;
sum = G__12252;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12272__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12272 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12273__i = 0, G__12273__a = new Array(arguments.length -  2);
while (G__12273__i < G__12273__a.length) {G__12273__a[G__12273__i] = arguments[G__12273__i + 2]; ++G__12273__i;}
  zs = new cljs.core.IndexedSeq(G__12273__a,0);
} 
return G__12272__delegate.call(this,x,y,zs);};
G__12272.cljs$lang$maxFixedArity = 2;
G__12272.cljs$lang$applyTo = (function (arglist__12274){
var x = cljs.core.first(arglist__12274);
arglist__12274 = cljs.core.next(arglist__12274);
var y = cljs.core.first(arglist__12274);
var zs = cljs.core.rest(arglist__12274);
return G__12272__delegate(x,y,zs);
});
G__12272.cljs$core$IFn$_invoke$arity$variadic = G__12272__delegate;
return G__12272;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12275 = null;
if (arguments.length > 2) {
var G__12276__i = 0, G__12276__a = new Array(arguments.length -  2);
while (G__12276__i < G__12276__a.length) {G__12276__a[G__12276__i] = arguments[G__12276__i + 2]; ++G__12276__i;}
G__12275 = new cljs.core.IndexedSeq(G__12276__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12277__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12277 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12278__i = 0, G__12278__a = new Array(arguments.length -  4);
while (G__12278__i < G__12278__a.length) {G__12278__a[G__12278__i] = arguments[G__12278__i + 4]; ++G__12278__i;}
  more = new cljs.core.IndexedSeq(G__12278__a,0);
} 
return G__12277__delegate.call(this,a,b,c,d,more);};
G__12277.cljs$lang$maxFixedArity = 4;
G__12277.cljs$lang$applyTo = (function (arglist__12279){
var a = cljs.core.first(arglist__12279);
arglist__12279 = cljs.core.next(arglist__12279);
var b = cljs.core.first(arglist__12279);
arglist__12279 = cljs.core.next(arglist__12279);
var c = cljs.core.first(arglist__12279);
arglist__12279 = cljs.core.next(arglist__12279);
var d = cljs.core.first(arglist__12279);
var more = cljs.core.rest(arglist__12279);
return G__12277__delegate(a,b,c,d,more);
});
G__12277.cljs$core$IFn$_invoke$arity$variadic = G__12277__delegate;
return G__12277;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12280 = null;
if (arguments.length > 4) {
var G__12281__i = 0, G__12281__a = new Array(arguments.length -  4);
while (G__12281__i < G__12281__a.length) {G__12281__a[G__12281__i] = arguments[G__12281__i + 4]; ++G__12281__i;}
G__12280 = new cljs.core.IndexedSeq(G__12281__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12282__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12283 = ntcoll;
var G__12284 = cljs.core.first(vals);
var G__12285 = cljs.core.next(vals);
tcoll = G__12283;
val = G__12284;
vals = G__12285;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12282 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12286__i = 0, G__12286__a = new Array(arguments.length -  2);
while (G__12286__i < G__12286__a.length) {G__12286__a[G__12286__i] = arguments[G__12286__i + 2]; ++G__12286__i;}
  vals = new cljs.core.IndexedSeq(G__12286__a,0);
} 
return G__12282__delegate.call(this,tcoll,val,vals);};
G__12282.cljs$lang$maxFixedArity = 2;
G__12282.cljs$lang$applyTo = (function (arglist__12287){
var tcoll = cljs.core.first(arglist__12287);
arglist__12287 = cljs.core.next(arglist__12287);
var val = cljs.core.first(arglist__12287);
var vals = cljs.core.rest(arglist__12287);
return G__12282__delegate(tcoll,val,vals);
});
G__12282.cljs$core$IFn$_invoke$arity$variadic = G__12282__delegate;
return G__12282;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12288 = null;
if (arguments.length > 2) {
var G__12289__i = 0, G__12289__a = new Array(arguments.length -  2);
while (G__12289__i < G__12289__a.length) {G__12289__a[G__12289__i] = arguments[G__12289__i + 2]; ++G__12289__i;}
G__12288 = new cljs.core.IndexedSeq(G__12289__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12290__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12291 = ntcoll;
var G__12292 = cljs.core.first(kvs);
var G__12293 = cljs.core.second(kvs);
var G__12294 = cljs.core.nnext(kvs);
tcoll = G__12291;
key = G__12292;
val = G__12293;
kvs = G__12294;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12290 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12295__i = 0, G__12295__a = new Array(arguments.length -  3);
while (G__12295__i < G__12295__a.length) {G__12295__a[G__12295__i] = arguments[G__12295__i + 3]; ++G__12295__i;}
  kvs = new cljs.core.IndexedSeq(G__12295__a,0);
} 
return G__12290__delegate.call(this,tcoll,key,val,kvs);};
G__12290.cljs$lang$maxFixedArity = 3;
G__12290.cljs$lang$applyTo = (function (arglist__12296){
var tcoll = cljs.core.first(arglist__12296);
arglist__12296 = cljs.core.next(arglist__12296);
var key = cljs.core.first(arglist__12296);
arglist__12296 = cljs.core.next(arglist__12296);
var val = cljs.core.first(arglist__12296);
var kvs = cljs.core.rest(arglist__12296);
return G__12290__delegate(tcoll,key,val,kvs);
});
G__12290.cljs$core$IFn$_invoke$arity$variadic = G__12290__delegate;
return G__12290;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12297 = null;
if (arguments.length > 3) {
var G__12298__i = 0, G__12298__a = new Array(arguments.length -  3);
while (G__12298__i < G__12298__a.length) {G__12298__a[G__12298__i] = arguments[G__12298__i + 3]; ++G__12298__i;}
G__12297 = new cljs.core.IndexedSeq(G__12298__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12299__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12300 = ntcoll;
var G__12301 = cljs.core.first(ks);
var G__12302 = cljs.core.next(ks);
tcoll = G__12300;
key = G__12301;
ks = G__12302;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12299 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12303__i = 0, G__12303__a = new Array(arguments.length -  2);
while (G__12303__i < G__12303__a.length) {G__12303__a[G__12303__i] = arguments[G__12303__i + 2]; ++G__12303__i;}
  ks = new cljs.core.IndexedSeq(G__12303__a,0);
} 
return G__12299__delegate.call(this,tcoll,key,ks);};
G__12299.cljs$lang$maxFixedArity = 2;
G__12299.cljs$lang$applyTo = (function (arglist__12304){
var tcoll = cljs.core.first(arglist__12304);
arglist__12304 = cljs.core.next(arglist__12304);
var key = cljs.core.first(arglist__12304);
var ks = cljs.core.rest(arglist__12304);
return G__12299__delegate(tcoll,key,ks);
});
G__12299.cljs$core$IFn$_invoke$arity$variadic = G__12299__delegate;
return G__12299;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12305 = null;
if (arguments.length > 2) {
var G__12306__i = 0, G__12306__a = new Array(arguments.length -  2);
while (G__12306__i < G__12306__a.length) {G__12306__a[G__12306__i] = arguments[G__12306__i + 2]; ++G__12306__i;}
G__12305 = new cljs.core.IndexedSeq(G__12306__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12307__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12308 = ntcoll;
var G__12309 = cljs.core.first(vals);
var G__12310 = cljs.core.next(vals);
tcoll = G__12308;
val = G__12309;
vals = G__12310;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12307 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12311__i = 0, G__12311__a = new Array(arguments.length -  2);
while (G__12311__i < G__12311__a.length) {G__12311__a[G__12311__i] = arguments[G__12311__i + 2]; ++G__12311__i;}
  vals = new cljs.core.IndexedSeq(G__12311__a,0);
} 
return G__12307__delegate.call(this,tcoll,val,vals);};
G__12307.cljs$lang$maxFixedArity = 2;
G__12307.cljs$lang$applyTo = (function (arglist__12312){
var tcoll = cljs.core.first(arglist__12312);
arglist__12312 = cljs.core.next(arglist__12312);
var val = cljs.core.first(arglist__12312);
var vals = cljs.core.rest(arglist__12312);
return G__12307__delegate(tcoll,val,vals);
});
G__12307.cljs$core$IFn$_invoke$arity$variadic = G__12307__delegate;
return G__12307;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12313 = null;
if (arguments.length > 2) {
var G__12314__i = 0, G__12314__a = new Array(arguments.length -  2);
while (G__12314__i < G__12314__a.length) {G__12314__a[G__12314__i] = arguments[G__12314__i + 2]; ++G__12314__i;}
G__12313 = new cljs.core.IndexedSeq(G__12314__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4742 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4742);
} else {
var G__12525 = a4742;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12525) : f.call(null,G__12525));
}
} else {
var b4743 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4742,b4743);
} else {
var G__12526 = a4742;
var G__12527 = b4743;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12526,G__12527) : f.call(null,G__12526,G__12527));
}
} else {
var c4744 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4742,b4743,c4744);
} else {
var G__12528 = a4742;
var G__12529 = b4743;
var G__12530 = c4744;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12528,G__12529,G__12530) : f.call(null,G__12528,G__12529,G__12530));
}
} else {
var d4745 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4742,b4743,c4744,d4745);
} else {
var G__12531 = a4742;
var G__12532 = b4743;
var G__12533 = c4744;
var G__12534 = d4745;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12531,G__12532,G__12533,G__12534) : f.call(null,G__12531,G__12532,G__12533,G__12534));
}
} else {
var e4746 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4742,b4743,c4744,d4745,e4746);
} else {
var G__12535 = a4742;
var G__12536 = b4743;
var G__12537 = c4744;
var G__12538 = d4745;
var G__12539 = e4746;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12535,G__12536,G__12537,G__12538,G__12539) : f.call(null,G__12535,G__12536,G__12537,G__12538,G__12539));
}
} else {
var f4747 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4742,b4743,c4744,d4745,e4746,f4747);
} else {
var G__12540 = a4742;
var G__12541 = b4743;
var G__12542 = c4744;
var G__12543 = d4745;
var G__12544 = e4746;
var G__12545 = f4747;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12540,G__12541,G__12542,G__12543,G__12544,G__12545) : f.call(null,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545));
}
} else {
var g4748 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4742,b4743,c4744,d4745,e4746,f4747,g4748);
} else {
var G__12546 = a4742;
var G__12547 = b4743;
var G__12548 = c4744;
var G__12549 = d4745;
var G__12550 = e4746;
var G__12551 = f4747;
var G__12552 = g4748;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552) : f.call(null,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552));
}
} else {
var h4749 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749);
} else {
var G__12553 = a4742;
var G__12554 = b4743;
var G__12555 = c4744;
var G__12556 = d4745;
var G__12557 = e4746;
var G__12558 = f4747;
var G__12559 = g4748;
var G__12560 = h4749;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560) : f.call(null,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560));
}
} else {
var i4750 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750);
} else {
var G__12561 = a4742;
var G__12562 = b4743;
var G__12563 = c4744;
var G__12564 = d4745;
var G__12565 = e4746;
var G__12566 = f4747;
var G__12567 = g4748;
var G__12568 = h4749;
var G__12569 = i4750;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569) : f.call(null,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569));
}
} else {
var j4751 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751);
} else {
var G__12570 = a4742;
var G__12571 = b4743;
var G__12572 = c4744;
var G__12573 = d4745;
var G__12574 = e4746;
var G__12575 = f4747;
var G__12576 = g4748;
var G__12577 = h4749;
var G__12578 = i4750;
var G__12579 = j4751;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579) : f.call(null,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579));
}
} else {
var k4752 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752);
} else {
var G__12580 = a4742;
var G__12581 = b4743;
var G__12582 = c4744;
var G__12583 = d4745;
var G__12584 = e4746;
var G__12585 = f4747;
var G__12586 = g4748;
var G__12587 = h4749;
var G__12588 = i4750;
var G__12589 = j4751;
var G__12590 = k4752;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590) : f.call(null,G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590));
}
} else {
var l4753 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753);
} else {
var G__12591 = a4742;
var G__12592 = b4743;
var G__12593 = c4744;
var G__12594 = d4745;
var G__12595 = e4746;
var G__12596 = f4747;
var G__12597 = g4748;
var G__12598 = h4749;
var G__12599 = i4750;
var G__12600 = j4751;
var G__12601 = k4752;
var G__12602 = l4753;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602) : f.call(null,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602));
}
} else {
var m4754 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754);
} else {
var G__12603 = a4742;
var G__12604 = b4743;
var G__12605 = c4744;
var G__12606 = d4745;
var G__12607 = e4746;
var G__12608 = f4747;
var G__12609 = g4748;
var G__12610 = h4749;
var G__12611 = i4750;
var G__12612 = j4751;
var G__12613 = k4752;
var G__12614 = l4753;
var G__12615 = m4754;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615) : f.call(null,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615));
}
} else {
var n4755 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755);
} else {
var G__12616 = a4742;
var G__12617 = b4743;
var G__12618 = c4744;
var G__12619 = d4745;
var G__12620 = e4746;
var G__12621 = f4747;
var G__12622 = g4748;
var G__12623 = h4749;
var G__12624 = i4750;
var G__12625 = j4751;
var G__12626 = k4752;
var G__12627 = l4753;
var G__12628 = m4754;
var G__12629 = n4755;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629) : f.call(null,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629));
}
} else {
var o4756 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756);
} else {
var G__12630 = a4742;
var G__12631 = b4743;
var G__12632 = c4744;
var G__12633 = d4745;
var G__12634 = e4746;
var G__12635 = f4747;
var G__12636 = g4748;
var G__12637 = h4749;
var G__12638 = i4750;
var G__12639 = j4751;
var G__12640 = k4752;
var G__12641 = l4753;
var G__12642 = m4754;
var G__12643 = n4755;
var G__12644 = o4756;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644) : f.call(null,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644));
}
} else {
var p4757 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757);
} else {
var G__12645 = a4742;
var G__12646 = b4743;
var G__12647 = c4744;
var G__12648 = d4745;
var G__12649 = e4746;
var G__12650 = f4747;
var G__12651 = g4748;
var G__12652 = h4749;
var G__12653 = i4750;
var G__12654 = j4751;
var G__12655 = k4752;
var G__12656 = l4753;
var G__12657 = m4754;
var G__12658 = n4755;
var G__12659 = o4756;
var G__12660 = p4757;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660) : f.call(null,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660));
}
} else {
var q4758 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758);
} else {
var G__12661 = a4742;
var G__12662 = b4743;
var G__12663 = c4744;
var G__12664 = d4745;
var G__12665 = e4746;
var G__12666 = f4747;
var G__12667 = g4748;
var G__12668 = h4749;
var G__12669 = i4750;
var G__12670 = j4751;
var G__12671 = k4752;
var G__12672 = l4753;
var G__12673 = m4754;
var G__12674 = n4755;
var G__12675 = o4756;
var G__12676 = p4757;
var G__12677 = q4758;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676,G__12677) : f.call(null,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676,G__12677));
}
} else {
var r4759 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759);
} else {
var G__12678 = a4742;
var G__12679 = b4743;
var G__12680 = c4744;
var G__12681 = d4745;
var G__12682 = e4746;
var G__12683 = f4747;
var G__12684 = g4748;
var G__12685 = h4749;
var G__12686 = i4750;
var G__12687 = j4751;
var G__12688 = k4752;
var G__12689 = l4753;
var G__12690 = m4754;
var G__12691 = n4755;
var G__12692 = o4756;
var G__12693 = p4757;
var G__12694 = q4758;
var G__12695 = r4759;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695) : f.call(null,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695));
}
} else {
var s4760 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760);
} else {
var G__12696 = a4742;
var G__12697 = b4743;
var G__12698 = c4744;
var G__12699 = d4745;
var G__12700 = e4746;
var G__12701 = f4747;
var G__12702 = g4748;
var G__12703 = h4749;
var G__12704 = i4750;
var G__12705 = j4751;
var G__12706 = k4752;
var G__12707 = l4753;
var G__12708 = m4754;
var G__12709 = n4755;
var G__12710 = o4756;
var G__12711 = p4757;
var G__12712 = q4758;
var G__12713 = r4759;
var G__12714 = s4760;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714) : f.call(null,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714));
}
} else {
var t4761 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760,t4761);
} else {
var G__12715 = a4742;
var G__12716 = b4743;
var G__12717 = c4744;
var G__12718 = d4745;
var G__12719 = e4746;
var G__12720 = f4747;
var G__12721 = g4748;
var G__12722 = h4749;
var G__12723 = i4750;
var G__12724 = j4751;
var G__12725 = k4752;
var G__12726 = l4753;
var G__12727 = m4754;
var G__12728 = n4755;
var G__12729 = o4756;
var G__12730 = p4757;
var G__12731 = q4758;
var G__12732 = r4759;
var G__12733 = s4760;
var G__12734 = t4761;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734) : f.call(null,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__12735__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__12735 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__12736__i = 0, G__12736__a = new Array(arguments.length -  5);
while (G__12736__i < G__12736__a.length) {G__12736__a[G__12736__i] = arguments[G__12736__i + 5]; ++G__12736__i;}
  args = new cljs.core.IndexedSeq(G__12736__a,0);
} 
return G__12735__delegate.call(this,f,a,b,c,d,args);};
G__12735.cljs$lang$maxFixedArity = 5;
G__12735.cljs$lang$applyTo = (function (arglist__12737){
var f = cljs.core.first(arglist__12737);
arglist__12737 = cljs.core.next(arglist__12737);
var a = cljs.core.first(arglist__12737);
arglist__12737 = cljs.core.next(arglist__12737);
var b = cljs.core.first(arglist__12737);
arglist__12737 = cljs.core.next(arglist__12737);
var c = cljs.core.first(arglist__12737);
arglist__12737 = cljs.core.next(arglist__12737);
var d = cljs.core.first(arglist__12737);
var args = cljs.core.rest(arglist__12737);
return G__12735__delegate(f,a,b,c,d,args);
});
G__12735.cljs$core$IFn$_invoke$arity$variadic = G__12735__delegate;
return G__12735;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__12738 = null;
if (arguments.length > 5) {
var G__12739__i = 0, G__12739__a = new Array(arguments.length -  5);
while (G__12739__i < G__12739__a.length) {G__12739__a[G__12739__i] = arguments[G__12739__i + 5]; ++G__12739__i;}
G__12738 = new cljs.core.IndexedSeq(G__12739__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__12738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__12755 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12755) : f.call(null,G__12755));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__12756 = cljs.core.meta(obj);
var G__12757 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12756,G__12757) : f.call(null,G__12756,G__12757));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__12758 = cljs.core.meta(obj);
var G__12759 = a;
var G__12760 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12758,G__12759,G__12760) : f.call(null,G__12758,G__12759,G__12760));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__12761 = cljs.core.meta(obj);
var G__12762 = a;
var G__12763 = b;
var G__12764 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12761,G__12762,G__12763,G__12764) : f.call(null,G__12761,G__12762,G__12763,G__12764));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__12765 = cljs.core.meta(obj);
var G__12766 = a;
var G__12767 = b;
var G__12768 = c;
var G__12769 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12765,G__12766,G__12767,G__12768,G__12769) : f.call(null,G__12765,G__12766,G__12767,G__12768,G__12769));
})());
});
var vary_meta__7 = (function() { 
var G__12770__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__12770 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__12771__i = 0, G__12771__a = new Array(arguments.length -  6);
while (G__12771__i < G__12771__a.length) {G__12771__a[G__12771__i] = arguments[G__12771__i + 6]; ++G__12771__i;}
  args = new cljs.core.IndexedSeq(G__12771__a,0);
} 
return G__12770__delegate.call(this,obj,f,a,b,c,d,args);};
G__12770.cljs$lang$maxFixedArity = 6;
G__12770.cljs$lang$applyTo = (function (arglist__12772){
var obj = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var f = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var a = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var b = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var c = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var d = cljs.core.first(arglist__12772);
var args = cljs.core.rest(arglist__12772);
return G__12770__delegate(obj,f,a,b,c,d,args);
});
G__12770.cljs$core$IFn$_invoke$arity$variadic = G__12770__delegate;
return G__12770;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__12773 = null;
if (arguments.length > 6) {
var G__12774__i = 0, G__12774__a = new Array(arguments.length -  6);
while (G__12774__i < G__12774__a.length) {G__12774__a[G__12774__i] = arguments[G__12774__i + 6]; ++G__12774__i;}
G__12773 = new cljs.core.IndexedSeq(G__12774__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__12773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__12775__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__12775 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12776__i = 0, G__12776__a = new Array(arguments.length -  2);
while (G__12776__i < G__12776__a.length) {G__12776__a[G__12776__i] = arguments[G__12776__i + 2]; ++G__12776__i;}
  more = new cljs.core.IndexedSeq(G__12776__a,0);
} 
return G__12775__delegate.call(this,x,y,more);};
G__12775.cljs$lang$maxFixedArity = 2;
G__12775.cljs$lang$applyTo = (function (arglist__12777){
var x = cljs.core.first(arglist__12777);
arglist__12777 = cljs.core.next(arglist__12777);
var y = cljs.core.first(arglist__12777);
var more = cljs.core.rest(arglist__12777);
return G__12775__delegate(x,y,more);
});
G__12775.cljs$core$IFn$_invoke$arity$variadic = G__12775__delegate;
return G__12775;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__12778 = null;
if (arguments.length > 2) {
var G__12779__i = 0, G__12779__a = new Array(arguments.length -  2);
while (G__12779__i < G__12779__a.length) {G__12779__a[G__12779__i] = arguments[G__12779__i + 2]; ++G__12779__i;}
G__12778 = new cljs.core.IndexedSeq(G__12779__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t12783 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t12783 = (function (nil_iter,meta12784){
this.nil_iter = nil_iter;
this.meta12784 = meta12784;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t12783.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t12783.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t12783.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t12783.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_12785){
var self__ = this;
var _12785__$1 = this;
return self__.meta12784;
});

cljs.core.t12783.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_12785,meta12784__$1){
var self__ = this;
var _12785__$1 = this;
return (new cljs.core.t12783(self__.nil_iter,meta12784__$1));
});

cljs.core.t12783.cljs$lang$type = true;

cljs.core.t12783.cljs$lang$ctorStr = "cljs.core/t12783";

cljs.core.t12783.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/t12783");
});

cljs.core.__GT_t12783 = (function __GT_t12783(nil_iter__$1,meta12784){
return (new cljs.core.t12783(nil_iter__$1,meta12784));
});

}

return (new cljs.core.t12783(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/peter/personal/cljstemplate/release/scripts/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return self__.iter.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__12786 = lt;
var G__12787 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12786,G__12787) : self__.xform.call(null,G__12786,G__12787));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12788 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12788) : self__.xform.call(null,G__12788));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__12790 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12790) : xform.call(null,G__12790));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__12792 = cljs.core.next(iters__$1);
iters__$1 = G__12792;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4698__auto___12793 = self__.iters.length;
var i_12794 = (0);
while(true){
if((i_12794 < n__4698__auto___12793)){
(self__.nexts[i_12794] = (self__.iters[i_12794]).next());

var G__12795 = (i_12794 + (1));
i_12794 = G__12795;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return this$.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12791 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12791) : self__.xform.call(null,G__12791));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__12800 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12800) : xform.call(null,G__12800));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__12801_12805 = cljs.core.seq(colls);
var chunk__12802_12806 = null;
var count__12803_12807 = (0);
var i__12804_12808 = (0);
while(true){
if((i__12804_12808 < count__12803_12807)){
var coll_12809 = chunk__12802_12806.cljs$core$IIndexed$_nth$arity$2(null,i__12804_12808);
iters.push(cljs.core.iter(coll_12809));

var G__12810 = seq__12801_12805;
var G__12811 = chunk__12802_12806;
var G__12812 = count__12803_12807;
var G__12813 = (i__12804_12808 + (1));
seq__12801_12805 = G__12810;
chunk__12802_12806 = G__12811;
count__12803_12807 = G__12812;
i__12804_12808 = G__12813;
continue;
} else {
var temp__4126__auto___12814 = cljs.core.seq(seq__12801_12805);
if(temp__4126__auto___12814){
var seq__12801_12815__$1 = temp__4126__auto___12814;
if(cljs.core.chunked_seq_QMARK_(seq__12801_12815__$1)){
var c__4598__auto___12816 = cljs.core.chunk_first(seq__12801_12815__$1);
var G__12817 = cljs.core.chunk_rest(seq__12801_12815__$1);
var G__12818 = c__4598__auto___12816;
var G__12819 = cljs.core.count(c__4598__auto___12816);
var G__12820 = (0);
seq__12801_12805 = G__12817;
chunk__12802_12806 = G__12818;
count__12803_12807 = G__12819;
i__12804_12808 = G__12820;
continue;
} else {
var coll_12821 = cljs.core.first(seq__12801_12815__$1);
iters.push(cljs.core.iter(coll_12821));

var G__12822 = cljs.core.next(seq__12801_12815__$1);
var G__12823 = null;
var G__12824 = (0);
var G__12825 = (0);
seq__12801_12805 = G__12822;
chunk__12802_12806 = G__12823;
count__12803_12807 = G__12824;
i__12804_12808 = G__12825;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3811__auto__ = cljs.core.seq(coll);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__12826__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__12826 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__12827__i = 0, G__12827__a = new Array(arguments.length -  2);
while (G__12827__i < G__12827__a.length) {G__12827__a[G__12827__i] = arguments[G__12827__i + 2]; ++G__12827__i;}
  colls = new cljs.core.IndexedSeq(G__12827__a,0);
} 
return G__12826__delegate.call(this,xform,coll,colls);};
G__12826.cljs$lang$maxFixedArity = 2;
G__12826.cljs$lang$applyTo = (function (arglist__12828){
var xform = cljs.core.first(arglist__12828);
arglist__12828 = cljs.core.next(arglist__12828);
var coll = cljs.core.first(arglist__12828);
var colls = cljs.core.rest(arglist__12828);
return G__12826__delegate(xform,coll,colls);
});
G__12826.cljs$core$IFn$_invoke$arity$variadic = G__12826__delegate;
return G__12826;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__12829 = null;
if (arguments.length > 2) {
var G__12830__i = 0, G__12830__a = new Array(arguments.length -  2);
while (G__12830__i < G__12830__a.length) {G__12830__a[G__12830__i] = arguments[G__12830__i + 2]; ++G__12830__i;}
G__12829 = new cljs.core.IndexedSeq(G__12830__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__12829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__12832 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12832) : pred.call(null,G__12832));
})())){
var G__12833 = pred;
var G__12834 = cljs.core.next(coll);
pred = G__12833;
coll = G__12834;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3811__auto__ = (function (){var G__12838 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12838) : pred.call(null,G__12838));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__12839 = pred;
var G__12840 = cljs.core.next(coll);
pred = G__12839;
coll = G__12840;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__12847 = null;
var G__12847__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__12847__1 = (function (x){
return cljs.core.not((function (){var G__12844 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12844) : f.call(null,G__12844));
})());
});
var G__12847__2 = (function (x,y){
return cljs.core.not((function (){var G__12845 = x;
var G__12846 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12845,G__12846) : f.call(null,G__12845,G__12846));
})());
});
var G__12847__3 = (function() { 
var G__12848__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__12848 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12849__i = 0, G__12849__a = new Array(arguments.length -  2);
while (G__12849__i < G__12849__a.length) {G__12849__a[G__12849__i] = arguments[G__12849__i + 2]; ++G__12849__i;}
  zs = new cljs.core.IndexedSeq(G__12849__a,0);
} 
return G__12848__delegate.call(this,x,y,zs);};
G__12848.cljs$lang$maxFixedArity = 2;
G__12848.cljs$lang$applyTo = (function (arglist__12850){
var x = cljs.core.first(arglist__12850);
arglist__12850 = cljs.core.next(arglist__12850);
var y = cljs.core.first(arglist__12850);
var zs = cljs.core.rest(arglist__12850);
return G__12848__delegate(x,y,zs);
});
G__12848.cljs$core$IFn$_invoke$arity$variadic = G__12848__delegate;
return G__12848;
})()
;
G__12847 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__12847__0.call(this);
case 1:
return G__12847__1.call(this,x);
case 2:
return G__12847__2.call(this,x,y);
default:
var G__12851 = null;
if (arguments.length > 2) {
var G__12852__i = 0, G__12852__a = new Array(arguments.length -  2);
while (G__12852__i < G__12852__a.length) {G__12852__a[G__12852__i] = arguments[G__12852__i + 2]; ++G__12852__i;}
G__12851 = new cljs.core.IndexedSeq(G__12852__a,0);
}
return G__12847__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12847.cljs$lang$maxFixedArity = 2;
G__12847.cljs$lang$applyTo = G__12847__3.cljs$lang$applyTo;
G__12847.cljs$core$IFn$_invoke$arity$0 = G__12847__0;
G__12847.cljs$core$IFn$_invoke$arity$1 = G__12847__1;
G__12847.cljs$core$IFn$_invoke$arity$2 = G__12847__2;
G__12847.cljs$core$IFn$_invoke$arity$variadic = G__12847__3.cljs$core$IFn$_invoke$arity$variadic;
return G__12847;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__12853__delegate = function (args){
return x;
};
var G__12853 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12854__i = 0, G__12854__a = new Array(arguments.length -  0);
while (G__12854__i < G__12854__a.length) {G__12854__a[G__12854__i] = arguments[G__12854__i + 0]; ++G__12854__i;}
  args = new cljs.core.IndexedSeq(G__12854__a,0);
} 
return G__12853__delegate.call(this,args);};
G__12853.cljs$lang$maxFixedArity = 0;
G__12853.cljs$lang$applyTo = (function (arglist__12855){
var args = cljs.core.seq(arglist__12855);
return G__12853__delegate(args);
});
G__12853.cljs$core$IFn$_invoke$arity$variadic = G__12853__delegate;
return G__12853;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__12910 = null;
var G__12910__0 = (function (){
var G__12883 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12883) : f.call(null,G__12883));
});
var G__12910__1 = (function (x){
var G__12884 = (function (){var G__12885 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12885) : g.call(null,G__12885));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12884) : f.call(null,G__12884));
});
var G__12910__2 = (function (x,y){
var G__12886 = (function (){var G__12887 = x;
var G__12888 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12887,G__12888) : g.call(null,G__12887,G__12888));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12886) : f.call(null,G__12886));
});
var G__12910__3 = (function (x,y,z){
var G__12889 = (function (){var G__12890 = x;
var G__12891 = y;
var G__12892 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12890,G__12891,G__12892) : g.call(null,G__12890,G__12891,G__12892));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12889) : f.call(null,G__12889));
});
var G__12910__4 = (function() { 
var G__12911__delegate = function (x,y,z,args){
var G__12893 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12893) : f.call(null,G__12893));
};
var G__12911 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12912__i = 0, G__12912__a = new Array(arguments.length -  3);
while (G__12912__i < G__12912__a.length) {G__12912__a[G__12912__i] = arguments[G__12912__i + 3]; ++G__12912__i;}
  args = new cljs.core.IndexedSeq(G__12912__a,0);
} 
return G__12911__delegate.call(this,x,y,z,args);};
G__12911.cljs$lang$maxFixedArity = 3;
G__12911.cljs$lang$applyTo = (function (arglist__12913){
var x = cljs.core.first(arglist__12913);
arglist__12913 = cljs.core.next(arglist__12913);
var y = cljs.core.first(arglist__12913);
arglist__12913 = cljs.core.next(arglist__12913);
var z = cljs.core.first(arglist__12913);
var args = cljs.core.rest(arglist__12913);
return G__12911__delegate(x,y,z,args);
});
G__12911.cljs$core$IFn$_invoke$arity$variadic = G__12911__delegate;
return G__12911;
})()
;
G__12910 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12910__0.call(this);
case 1:
return G__12910__1.call(this,x);
case 2:
return G__12910__2.call(this,x,y);
case 3:
return G__12910__3.call(this,x,y,z);
default:
var G__12914 = null;
if (arguments.length > 3) {
var G__12915__i = 0, G__12915__a = new Array(arguments.length -  3);
while (G__12915__i < G__12915__a.length) {G__12915__a[G__12915__i] = arguments[G__12915__i + 3]; ++G__12915__i;}
G__12914 = new cljs.core.IndexedSeq(G__12915__a,0);
}
return G__12910__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12910.cljs$lang$maxFixedArity = 3;
G__12910.cljs$lang$applyTo = G__12910__4.cljs$lang$applyTo;
G__12910.cljs$core$IFn$_invoke$arity$0 = G__12910__0;
G__12910.cljs$core$IFn$_invoke$arity$1 = G__12910__1;
G__12910.cljs$core$IFn$_invoke$arity$2 = G__12910__2;
G__12910.cljs$core$IFn$_invoke$arity$3 = G__12910__3;
G__12910.cljs$core$IFn$_invoke$arity$variadic = G__12910__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12910;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__12916 = null;
var G__12916__0 = (function (){
var G__12894 = (function (){var G__12895 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12895) : g.call(null,G__12895));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12894) : f.call(null,G__12894));
});
var G__12916__1 = (function (x){
var G__12896 = (function (){var G__12897 = (function (){var G__12898 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12898) : h.call(null,G__12898));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12897) : g.call(null,G__12897));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12896) : f.call(null,G__12896));
});
var G__12916__2 = (function (x,y){
var G__12899 = (function (){var G__12900 = (function (){var G__12901 = x;
var G__12902 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12901,G__12902) : h.call(null,G__12901,G__12902));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12900) : g.call(null,G__12900));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12899) : f.call(null,G__12899));
});
var G__12916__3 = (function (x,y,z){
var G__12903 = (function (){var G__12904 = (function (){var G__12905 = x;
var G__12906 = y;
var G__12907 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12905,G__12906,G__12907) : h.call(null,G__12905,G__12906,G__12907));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12904) : g.call(null,G__12904));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12903) : f.call(null,G__12903));
});
var G__12916__4 = (function() { 
var G__12917__delegate = function (x,y,z,args){
var G__12908 = (function (){var G__12909 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12909) : g.call(null,G__12909));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12908) : f.call(null,G__12908));
};
var G__12917 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12918__i = 0, G__12918__a = new Array(arguments.length -  3);
while (G__12918__i < G__12918__a.length) {G__12918__a[G__12918__i] = arguments[G__12918__i + 3]; ++G__12918__i;}
  args = new cljs.core.IndexedSeq(G__12918__a,0);
} 
return G__12917__delegate.call(this,x,y,z,args);};
G__12917.cljs$lang$maxFixedArity = 3;
G__12917.cljs$lang$applyTo = (function (arglist__12919){
var x = cljs.core.first(arglist__12919);
arglist__12919 = cljs.core.next(arglist__12919);
var y = cljs.core.first(arglist__12919);
arglist__12919 = cljs.core.next(arglist__12919);
var z = cljs.core.first(arglist__12919);
var args = cljs.core.rest(arglist__12919);
return G__12917__delegate(x,y,z,args);
});
G__12917.cljs$core$IFn$_invoke$arity$variadic = G__12917__delegate;
return G__12917;
})()
;
G__12916 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12916__0.call(this);
case 1:
return G__12916__1.call(this,x);
case 2:
return G__12916__2.call(this,x,y);
case 3:
return G__12916__3.call(this,x,y,z);
default:
var G__12920 = null;
if (arguments.length > 3) {
var G__12921__i = 0, G__12921__a = new Array(arguments.length -  3);
while (G__12921__i < G__12921__a.length) {G__12921__a[G__12921__i] = arguments[G__12921__i + 3]; ++G__12921__i;}
G__12920 = new cljs.core.IndexedSeq(G__12921__a,0);
}
return G__12916__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12916.cljs$lang$maxFixedArity = 3;
G__12916.cljs$lang$applyTo = G__12916__4.cljs$lang$applyTo;
G__12916.cljs$core$IFn$_invoke$arity$0 = G__12916__0;
G__12916.cljs$core$IFn$_invoke$arity$1 = G__12916__1;
G__12916.cljs$core$IFn$_invoke$arity$2 = G__12916__2;
G__12916.cljs$core$IFn$_invoke$arity$3 = G__12916__3;
G__12916.cljs$core$IFn$_invoke$arity$variadic = G__12916__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12916;
})()
});
var comp__4 = (function() { 
var G__12922__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__12923__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__12924 = cljs.core.first(fs__$2).call(null,ret);
var G__12925 = cljs.core.next(fs__$2);
ret = G__12924;
fs__$2 = G__12925;
continue;
} else {
return ret;
}
break;
}
};
var G__12923 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12926__i = 0, G__12926__a = new Array(arguments.length -  0);
while (G__12926__i < G__12926__a.length) {G__12926__a[G__12926__i] = arguments[G__12926__i + 0]; ++G__12926__i;}
  args = new cljs.core.IndexedSeq(G__12926__a,0);
} 
return G__12923__delegate.call(this,args);};
G__12923.cljs$lang$maxFixedArity = 0;
G__12923.cljs$lang$applyTo = (function (arglist__12927){
var args = cljs.core.seq(arglist__12927);
return G__12923__delegate(args);
});
G__12923.cljs$core$IFn$_invoke$arity$variadic = G__12923__delegate;
return G__12923;
})()
;
;})(fs__$1))
};
var G__12922 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12928__i = 0, G__12928__a = new Array(arguments.length -  3);
while (G__12928__i < G__12928__a.length) {G__12928__a[G__12928__i] = arguments[G__12928__i + 3]; ++G__12928__i;}
  fs = new cljs.core.IndexedSeq(G__12928__a,0);
} 
return G__12922__delegate.call(this,f1,f2,f3,fs);};
G__12922.cljs$lang$maxFixedArity = 3;
G__12922.cljs$lang$applyTo = (function (arglist__12929){
var f1 = cljs.core.first(arglist__12929);
arglist__12929 = cljs.core.next(arglist__12929);
var f2 = cljs.core.first(arglist__12929);
arglist__12929 = cljs.core.next(arglist__12929);
var f3 = cljs.core.first(arglist__12929);
var fs = cljs.core.rest(arglist__12929);
return G__12922__delegate(f1,f2,f3,fs);
});
G__12922.cljs$core$IFn$_invoke$arity$variadic = G__12922__delegate;
return G__12922;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__12930 = null;
if (arguments.length > 3) {
var G__12931__i = 0, G__12931__a = new Array(arguments.length -  3);
while (G__12931__i < G__12931__a.length) {G__12931__a[G__12931__i] = arguments[G__12931__i + 3]; ++G__12931__i;}
G__12930 = new cljs.core.IndexedSeq(G__12931__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__12930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13016 = null;
var G__13016__0 = (function (){
var G__12974 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12974) : f.call(null,G__12974));
});
var G__13016__1 = (function (x){
var G__12975 = arg1;
var G__12976 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12975,G__12976) : f.call(null,G__12975,G__12976));
});
var G__13016__2 = (function (x,y){
var G__12977 = arg1;
var G__12978 = x;
var G__12979 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12977,G__12978,G__12979) : f.call(null,G__12977,G__12978,G__12979));
});
var G__13016__3 = (function (x,y,z){
var G__12980 = arg1;
var G__12981 = x;
var G__12982 = y;
var G__12983 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12980,G__12981,G__12982,G__12983) : f.call(null,G__12980,G__12981,G__12982,G__12983));
});
var G__13016__4 = (function() { 
var G__13017__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13017 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13018__i = 0, G__13018__a = new Array(arguments.length -  3);
while (G__13018__i < G__13018__a.length) {G__13018__a[G__13018__i] = arguments[G__13018__i + 3]; ++G__13018__i;}
  args = new cljs.core.IndexedSeq(G__13018__a,0);
} 
return G__13017__delegate.call(this,x,y,z,args);};
G__13017.cljs$lang$maxFixedArity = 3;
G__13017.cljs$lang$applyTo = (function (arglist__13019){
var x = cljs.core.first(arglist__13019);
arglist__13019 = cljs.core.next(arglist__13019);
var y = cljs.core.first(arglist__13019);
arglist__13019 = cljs.core.next(arglist__13019);
var z = cljs.core.first(arglist__13019);
var args = cljs.core.rest(arglist__13019);
return G__13017__delegate(x,y,z,args);
});
G__13017.cljs$core$IFn$_invoke$arity$variadic = G__13017__delegate;
return G__13017;
})()
;
G__13016 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13016__0.call(this);
case 1:
return G__13016__1.call(this,x);
case 2:
return G__13016__2.call(this,x,y);
case 3:
return G__13016__3.call(this,x,y,z);
default:
var G__13020 = null;
if (arguments.length > 3) {
var G__13021__i = 0, G__13021__a = new Array(arguments.length -  3);
while (G__13021__i < G__13021__a.length) {G__13021__a[G__13021__i] = arguments[G__13021__i + 3]; ++G__13021__i;}
G__13020 = new cljs.core.IndexedSeq(G__13021__a,0);
}
return G__13016__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13016.cljs$lang$maxFixedArity = 3;
G__13016.cljs$lang$applyTo = G__13016__4.cljs$lang$applyTo;
G__13016.cljs$core$IFn$_invoke$arity$0 = G__13016__0;
G__13016.cljs$core$IFn$_invoke$arity$1 = G__13016__1;
G__13016.cljs$core$IFn$_invoke$arity$2 = G__13016__2;
G__13016.cljs$core$IFn$_invoke$arity$3 = G__13016__3;
G__13016.cljs$core$IFn$_invoke$arity$variadic = G__13016__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13016;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13022 = null;
var G__13022__0 = (function (){
var G__12984 = arg1;
var G__12985 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12984,G__12985) : f.call(null,G__12984,G__12985));
});
var G__13022__1 = (function (x){
var G__12986 = arg1;
var G__12987 = arg2;
var G__12988 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12986,G__12987,G__12988) : f.call(null,G__12986,G__12987,G__12988));
});
var G__13022__2 = (function (x,y){
var G__12989 = arg1;
var G__12990 = arg2;
var G__12991 = x;
var G__12992 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12989,G__12990,G__12991,G__12992) : f.call(null,G__12989,G__12990,G__12991,G__12992));
});
var G__13022__3 = (function (x,y,z){
var G__12993 = arg1;
var G__12994 = arg2;
var G__12995 = x;
var G__12996 = y;
var G__12997 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12993,G__12994,G__12995,G__12996,G__12997) : f.call(null,G__12993,G__12994,G__12995,G__12996,G__12997));
});
var G__13022__4 = (function() { 
var G__13023__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13023 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13024__i = 0, G__13024__a = new Array(arguments.length -  3);
while (G__13024__i < G__13024__a.length) {G__13024__a[G__13024__i] = arguments[G__13024__i + 3]; ++G__13024__i;}
  args = new cljs.core.IndexedSeq(G__13024__a,0);
} 
return G__13023__delegate.call(this,x,y,z,args);};
G__13023.cljs$lang$maxFixedArity = 3;
G__13023.cljs$lang$applyTo = (function (arglist__13025){
var x = cljs.core.first(arglist__13025);
arglist__13025 = cljs.core.next(arglist__13025);
var y = cljs.core.first(arglist__13025);
arglist__13025 = cljs.core.next(arglist__13025);
var z = cljs.core.first(arglist__13025);
var args = cljs.core.rest(arglist__13025);
return G__13023__delegate(x,y,z,args);
});
G__13023.cljs$core$IFn$_invoke$arity$variadic = G__13023__delegate;
return G__13023;
})()
;
G__13022 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13022__0.call(this);
case 1:
return G__13022__1.call(this,x);
case 2:
return G__13022__2.call(this,x,y);
case 3:
return G__13022__3.call(this,x,y,z);
default:
var G__13026 = null;
if (arguments.length > 3) {
var G__13027__i = 0, G__13027__a = new Array(arguments.length -  3);
while (G__13027__i < G__13027__a.length) {G__13027__a[G__13027__i] = arguments[G__13027__i + 3]; ++G__13027__i;}
G__13026 = new cljs.core.IndexedSeq(G__13027__a,0);
}
return G__13022__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13022.cljs$lang$maxFixedArity = 3;
G__13022.cljs$lang$applyTo = G__13022__4.cljs$lang$applyTo;
G__13022.cljs$core$IFn$_invoke$arity$0 = G__13022__0;
G__13022.cljs$core$IFn$_invoke$arity$1 = G__13022__1;
G__13022.cljs$core$IFn$_invoke$arity$2 = G__13022__2;
G__13022.cljs$core$IFn$_invoke$arity$3 = G__13022__3;
G__13022.cljs$core$IFn$_invoke$arity$variadic = G__13022__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13022;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13028 = null;
var G__13028__0 = (function (){
var G__12998 = arg1;
var G__12999 = arg2;
var G__13000 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12998,G__12999,G__13000) : f.call(null,G__12998,G__12999,G__13000));
});
var G__13028__1 = (function (x){
var G__13001 = arg1;
var G__13002 = arg2;
var G__13003 = arg3;
var G__13004 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13001,G__13002,G__13003,G__13004) : f.call(null,G__13001,G__13002,G__13003,G__13004));
});
var G__13028__2 = (function (x,y){
var G__13005 = arg1;
var G__13006 = arg2;
var G__13007 = arg3;
var G__13008 = x;
var G__13009 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13005,G__13006,G__13007,G__13008,G__13009) : f.call(null,G__13005,G__13006,G__13007,G__13008,G__13009));
});
var G__13028__3 = (function (x,y,z){
var G__13010 = arg1;
var G__13011 = arg2;
var G__13012 = arg3;
var G__13013 = x;
var G__13014 = y;
var G__13015 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13010,G__13011,G__13012,G__13013,G__13014,G__13015) : f.call(null,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015));
});
var G__13028__4 = (function() { 
var G__13029__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13029 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13030__i = 0, G__13030__a = new Array(arguments.length -  3);
while (G__13030__i < G__13030__a.length) {G__13030__a[G__13030__i] = arguments[G__13030__i + 3]; ++G__13030__i;}
  args = new cljs.core.IndexedSeq(G__13030__a,0);
} 
return G__13029__delegate.call(this,x,y,z,args);};
G__13029.cljs$lang$maxFixedArity = 3;
G__13029.cljs$lang$applyTo = (function (arglist__13031){
var x = cljs.core.first(arglist__13031);
arglist__13031 = cljs.core.next(arglist__13031);
var y = cljs.core.first(arglist__13031);
arglist__13031 = cljs.core.next(arglist__13031);
var z = cljs.core.first(arglist__13031);
var args = cljs.core.rest(arglist__13031);
return G__13029__delegate(x,y,z,args);
});
G__13029.cljs$core$IFn$_invoke$arity$variadic = G__13029__delegate;
return G__13029;
})()
;
G__13028 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13028__0.call(this);
case 1:
return G__13028__1.call(this,x);
case 2:
return G__13028__2.call(this,x,y);
case 3:
return G__13028__3.call(this,x,y,z);
default:
var G__13032 = null;
if (arguments.length > 3) {
var G__13033__i = 0, G__13033__a = new Array(arguments.length -  3);
while (G__13033__i < G__13033__a.length) {G__13033__a[G__13033__i] = arguments[G__13033__i + 3]; ++G__13033__i;}
G__13032 = new cljs.core.IndexedSeq(G__13033__a,0);
}
return G__13028__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13032);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13028.cljs$lang$maxFixedArity = 3;
G__13028.cljs$lang$applyTo = G__13028__4.cljs$lang$applyTo;
G__13028.cljs$core$IFn$_invoke$arity$0 = G__13028__0;
G__13028.cljs$core$IFn$_invoke$arity$1 = G__13028__1;
G__13028.cljs$core$IFn$_invoke$arity$2 = G__13028__2;
G__13028.cljs$core$IFn$_invoke$arity$3 = G__13028__3;
G__13028.cljs$core$IFn$_invoke$arity$variadic = G__13028__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13028;
})()
});
var partial__5 = (function() { 
var G__13034__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13035__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13035 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13036__i = 0, G__13036__a = new Array(arguments.length -  0);
while (G__13036__i < G__13036__a.length) {G__13036__a[G__13036__i] = arguments[G__13036__i + 0]; ++G__13036__i;}
  args = new cljs.core.IndexedSeq(G__13036__a,0);
} 
return G__13035__delegate.call(this,args);};
G__13035.cljs$lang$maxFixedArity = 0;
G__13035.cljs$lang$applyTo = (function (arglist__13037){
var args = cljs.core.seq(arglist__13037);
return G__13035__delegate(args);
});
G__13035.cljs$core$IFn$_invoke$arity$variadic = G__13035__delegate;
return G__13035;
})()
;
};
var G__13034 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13038__i = 0, G__13038__a = new Array(arguments.length -  4);
while (G__13038__i < G__13038__a.length) {G__13038__a[G__13038__i] = arguments[G__13038__i + 4]; ++G__13038__i;}
  more = new cljs.core.IndexedSeq(G__13038__a,0);
} 
return G__13034__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13034.cljs$lang$maxFixedArity = 4;
G__13034.cljs$lang$applyTo = (function (arglist__13039){
var f = cljs.core.first(arglist__13039);
arglist__13039 = cljs.core.next(arglist__13039);
var arg1 = cljs.core.first(arglist__13039);
arglist__13039 = cljs.core.next(arglist__13039);
var arg2 = cljs.core.first(arglist__13039);
arglist__13039 = cljs.core.next(arglist__13039);
var arg3 = cljs.core.first(arglist__13039);
var more = cljs.core.rest(arglist__13039);
return G__13034__delegate(f,arg1,arg2,arg3,more);
});
G__13034.cljs$core$IFn$_invoke$arity$variadic = G__13034__delegate;
return G__13034;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13040 = null;
if (arguments.length > 4) {
var G__13041__i = 0, G__13041__a = new Array(arguments.length -  4);
while (G__13041__i < G__13041__a.length) {G__13041__a[G__13041__i] = arguments[G__13041__i + 4]; ++G__13041__i;}
G__13040 = new cljs.core.IndexedSeq(G__13041__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13074 = null;
var G__13074__1 = (function (a){
var G__13058 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13058) : f.call(null,G__13058));
});
var G__13074__2 = (function (a,b){
var G__13059 = (((a == null))?x:a);
var G__13060 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13059,G__13060) : f.call(null,G__13059,G__13060));
});
var G__13074__3 = (function (a,b,c){
var G__13061 = (((a == null))?x:a);
var G__13062 = b;
var G__13063 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13061,G__13062,G__13063) : f.call(null,G__13061,G__13062,G__13063));
});
var G__13074__4 = (function() { 
var G__13075__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13075 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13076__i = 0, G__13076__a = new Array(arguments.length -  3);
while (G__13076__i < G__13076__a.length) {G__13076__a[G__13076__i] = arguments[G__13076__i + 3]; ++G__13076__i;}
  ds = new cljs.core.IndexedSeq(G__13076__a,0);
} 
return G__13075__delegate.call(this,a,b,c,ds);};
G__13075.cljs$lang$maxFixedArity = 3;
G__13075.cljs$lang$applyTo = (function (arglist__13077){
var a = cljs.core.first(arglist__13077);
arglist__13077 = cljs.core.next(arglist__13077);
var b = cljs.core.first(arglist__13077);
arglist__13077 = cljs.core.next(arglist__13077);
var c = cljs.core.first(arglist__13077);
var ds = cljs.core.rest(arglist__13077);
return G__13075__delegate(a,b,c,ds);
});
G__13075.cljs$core$IFn$_invoke$arity$variadic = G__13075__delegate;
return G__13075;
})()
;
G__13074 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13074__1.call(this,a);
case 2:
return G__13074__2.call(this,a,b);
case 3:
return G__13074__3.call(this,a,b,c);
default:
var G__13078 = null;
if (arguments.length > 3) {
var G__13079__i = 0, G__13079__a = new Array(arguments.length -  3);
while (G__13079__i < G__13079__a.length) {G__13079__a[G__13079__i] = arguments[G__13079__i + 3]; ++G__13079__i;}
G__13078 = new cljs.core.IndexedSeq(G__13079__a,0);
}
return G__13074__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13074.cljs$lang$maxFixedArity = 3;
G__13074.cljs$lang$applyTo = G__13074__4.cljs$lang$applyTo;
G__13074.cljs$core$IFn$_invoke$arity$1 = G__13074__1;
G__13074.cljs$core$IFn$_invoke$arity$2 = G__13074__2;
G__13074.cljs$core$IFn$_invoke$arity$3 = G__13074__3;
G__13074.cljs$core$IFn$_invoke$arity$variadic = G__13074__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13074;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13080 = null;
var G__13080__2 = (function (a,b){
var G__13064 = (((a == null))?x:a);
var G__13065 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13064,G__13065) : f.call(null,G__13064,G__13065));
});
var G__13080__3 = (function (a,b,c){
var G__13066 = (((a == null))?x:a);
var G__13067 = (((b == null))?y:b);
var G__13068 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13066,G__13067,G__13068) : f.call(null,G__13066,G__13067,G__13068));
});
var G__13080__4 = (function() { 
var G__13081__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13081 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13082__i = 0, G__13082__a = new Array(arguments.length -  3);
while (G__13082__i < G__13082__a.length) {G__13082__a[G__13082__i] = arguments[G__13082__i + 3]; ++G__13082__i;}
  ds = new cljs.core.IndexedSeq(G__13082__a,0);
} 
return G__13081__delegate.call(this,a,b,c,ds);};
G__13081.cljs$lang$maxFixedArity = 3;
G__13081.cljs$lang$applyTo = (function (arglist__13083){
var a = cljs.core.first(arglist__13083);
arglist__13083 = cljs.core.next(arglist__13083);
var b = cljs.core.first(arglist__13083);
arglist__13083 = cljs.core.next(arglist__13083);
var c = cljs.core.first(arglist__13083);
var ds = cljs.core.rest(arglist__13083);
return G__13081__delegate(a,b,c,ds);
});
G__13081.cljs$core$IFn$_invoke$arity$variadic = G__13081__delegate;
return G__13081;
})()
;
G__13080 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13080__2.call(this,a,b);
case 3:
return G__13080__3.call(this,a,b,c);
default:
var G__13084 = null;
if (arguments.length > 3) {
var G__13085__i = 0, G__13085__a = new Array(arguments.length -  3);
while (G__13085__i < G__13085__a.length) {G__13085__a[G__13085__i] = arguments[G__13085__i + 3]; ++G__13085__i;}
G__13084 = new cljs.core.IndexedSeq(G__13085__a,0);
}
return G__13080__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13080.cljs$lang$maxFixedArity = 3;
G__13080.cljs$lang$applyTo = G__13080__4.cljs$lang$applyTo;
G__13080.cljs$core$IFn$_invoke$arity$2 = G__13080__2;
G__13080.cljs$core$IFn$_invoke$arity$3 = G__13080__3;
G__13080.cljs$core$IFn$_invoke$arity$variadic = G__13080__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13080;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13086 = null;
var G__13086__2 = (function (a,b){
var G__13069 = (((a == null))?x:a);
var G__13070 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13069,G__13070) : f.call(null,G__13069,G__13070));
});
var G__13086__3 = (function (a,b,c){
var G__13071 = (((a == null))?x:a);
var G__13072 = (((b == null))?y:b);
var G__13073 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13071,G__13072,G__13073) : f.call(null,G__13071,G__13072,G__13073));
});
var G__13086__4 = (function() { 
var G__13087__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13087 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13088__i = 0, G__13088__a = new Array(arguments.length -  3);
while (G__13088__i < G__13088__a.length) {G__13088__a[G__13088__i] = arguments[G__13088__i + 3]; ++G__13088__i;}
  ds = new cljs.core.IndexedSeq(G__13088__a,0);
} 
return G__13087__delegate.call(this,a,b,c,ds);};
G__13087.cljs$lang$maxFixedArity = 3;
G__13087.cljs$lang$applyTo = (function (arglist__13089){
var a = cljs.core.first(arglist__13089);
arglist__13089 = cljs.core.next(arglist__13089);
var b = cljs.core.first(arglist__13089);
arglist__13089 = cljs.core.next(arglist__13089);
var c = cljs.core.first(arglist__13089);
var ds = cljs.core.rest(arglist__13089);
return G__13087__delegate(a,b,c,ds);
});
G__13087.cljs$core$IFn$_invoke$arity$variadic = G__13087__delegate;
return G__13087;
})()
;
G__13086 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13086__2.call(this,a,b);
case 3:
return G__13086__3.call(this,a,b,c);
default:
var G__13090 = null;
if (arguments.length > 3) {
var G__13091__i = 0, G__13091__a = new Array(arguments.length -  3);
while (G__13091__i < G__13091__a.length) {G__13091__a[G__13091__i] = arguments[G__13091__i + 3]; ++G__13091__i;}
G__13090 = new cljs.core.IndexedSeq(G__13091__a,0);
}
return G__13086__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13086.cljs$lang$maxFixedArity = 3;
G__13086.cljs$lang$applyTo = G__13086__4.cljs$lang$applyTo;
G__13086.cljs$core$IFn$_invoke$arity$2 = G__13086__2;
G__13086.cljs$core$IFn$_invoke$arity$3 = G__13086__3;
G__13086.cljs$core$IFn$_invoke$arity$variadic = G__13086__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13086;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13122 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13122) : cljs.core.volatile_BANG_.call(null,G__13122));
})();
return ((function (i){
return (function() {
var G__13152 = null;
var G__13152__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13152__1 = (function (result){
var G__13123 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13123) : rf.call(null,G__13123));
});
var G__13152__2 = (function (result,input){
var G__13124 = result;
var G__13125 = (function (){var G__13126 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13127 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13126,G__13127) : f.call(null,G__13126,G__13127));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13124,G__13125) : rf.call(null,G__13124,G__13125));
});
G__13152 = function(result,input){
switch(arguments.length){
case 0:
return G__13152__0.call(this);
case 1:
return G__13152__1.call(this,result);
case 2:
return G__13152__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13152.cljs$core$IFn$_invoke$arity$0 = G__13152__0;
G__13152.cljs$core$IFn$_invoke$arity$1 = G__13152__1;
G__13152.cljs$core$IFn$_invoke$arity$2 = G__13152__2;
return G__13152;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___13153 = size;
var i_13154 = (0);
while(true){
if((i_13154 < n__4698__auto___13153)){
cljs.core.chunk_append(b,(function (){var G__13148 = (idx + i_13154);
var G__13149 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13154);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13148,G__13149) : f.call(null,G__13148,G__13149));
})());

var G__13155 = (i_13154 + (1));
i_13154 = G__13155;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13150 = idx;
var G__13151 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13150,G__13151) : f.call(null,G__13150,G__13151));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13174 = null;
var G__13174__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13174__1 = (function (result){
var G__13168 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13168) : rf.call(null,G__13168));
});
var G__13174__2 = (function (result,input){
var v = (function (){var G__13169 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13169) : f.call(null,G__13169));
})();
if((v == null)){
return result;
} else {
var G__13170 = result;
var G__13171 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13170,G__13171) : rf.call(null,G__13170,G__13171));
}
});
G__13174 = function(result,input){
switch(arguments.length){
case 0:
return G__13174__0.call(this);
case 1:
return G__13174__1.call(this,result);
case 2:
return G__13174__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13174.cljs$core$IFn$_invoke$arity$0 = G__13174__0;
G__13174.cljs$core$IFn$_invoke$arity$1 = G__13174__1;
G__13174.cljs$core$IFn$_invoke$arity$2 = G__13174__2;
return G__13174;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___13175 = size;
var i_13176 = (0);
while(true){
if((i_13176 < n__4698__auto___13175)){
var x_13177 = (function (){var G__13172 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13176);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13172) : f.call(null,G__13172));
})();
if((x_13177 == null)){
} else {
cljs.core.chunk_append(b,x_13177);
}

var G__13178 = (i_13176 + (1));
i_13176 = G__13178;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13173 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13173) : f.call(null,G__13173));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13179 = this$__$1;
return goog.getUid(G__13179);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13180 = cljs.core.seq(self__.watches);
var chunk__13181 = null;
var count__13182 = (0);
var i__13183 = (0);
while(true){
if((i__13183 < count__13182)){
var vec__13184 = chunk__13181.cljs$core$IIndexed$_nth$arity$2(null,i__13183);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13184,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13184,(1),null);
var G__13185_13194 = key;
var G__13186_13195 = this$__$1;
var G__13187_13196 = oldval;
var G__13188_13197 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13185_13194,G__13186_13195,G__13187_13196,G__13188_13197) : f.call(null,G__13185_13194,G__13186_13195,G__13187_13196,G__13188_13197));

var G__13198 = seq__13180;
var G__13199 = chunk__13181;
var G__13200 = count__13182;
var G__13201 = (i__13183 + (1));
seq__13180 = G__13198;
chunk__13181 = G__13199;
count__13182 = G__13200;
i__13183 = G__13201;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13180);
if(temp__4126__auto__){
var seq__13180__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13180__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__13180__$1);
var G__13202 = cljs.core.chunk_rest(seq__13180__$1);
var G__13203 = c__4598__auto__;
var G__13204 = cljs.core.count(c__4598__auto__);
var G__13205 = (0);
seq__13180 = G__13202;
chunk__13181 = G__13203;
count__13182 = G__13204;
i__13183 = G__13205;
continue;
} else {
var vec__13189 = cljs.core.first(seq__13180__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13189,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13189,(1),null);
var G__13190_13206 = key;
var G__13191_13207 = this$__$1;
var G__13192_13208 = oldval;
var G__13193_13209 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13190_13206,G__13191_13207,G__13192_13208,G__13193_13209) : f.call(null,G__13190_13206,G__13191_13207,G__13192_13208,G__13193_13209));

var G__13210 = cljs.core.next(seq__13180__$1);
var G__13211 = null;
var G__13212 = (0);
var G__13213 = (0);
seq__13180 = G__13210;
chunk__13181 = G__13211;
count__13182 = G__13212;
i__13183 = G__13213;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13217__delegate = function (x,p__13214){
var map__13216 = p__13214;
var map__13216__$1 = ((cljs.core.seq_QMARK_(map__13216))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13216):map__13216);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13216__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13216__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13217 = function (x,var_args){
var p__13214 = null;
if (arguments.length > 1) {
var G__13218__i = 0, G__13218__a = new Array(arguments.length -  1);
while (G__13218__i < G__13218__a.length) {G__13218__a[G__13218__i] = arguments[G__13218__i + 1]; ++G__13218__i;}
  p__13214 = new cljs.core.IndexedSeq(G__13218__a,0);
} 
return G__13217__delegate.call(this,x,p__13214);};
G__13217.cljs$lang$maxFixedArity = 1;
G__13217.cljs$lang$applyTo = (function (arglist__13219){
var x = cljs.core.first(arglist__13219);
var p__13214 = cljs.core.rest(arglist__13219);
return G__13217__delegate(x,p__13214);
});
G__13217.cljs$core$IFn$_invoke$arity$variadic = G__13217__delegate;
return G__13217;
})()
;
atom = function(x,var_args){
var p__13214 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13220 = null;
if (arguments.length > 1) {
var G__13221__i = 0, G__13221__a = new Array(arguments.length -  1);
while (G__13221__i < G__13221__a.length) {G__13221__a[G__13221__i] = arguments[G__13221__i + 1]; ++G__13221__i;}
G__13220 = new cljs.core.IndexedSeq(G__13221__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13224 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13224) : validate.call(null,G__13224));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13225 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13225) : cljs.core.pr_str.call(null,G__13225));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13232 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13232) : f.call(null,G__13232));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13233 = a.state;
var G__13234 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13233,G__13234) : f.call(null,G__13233,G__13234));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13235 = a.state;
var G__13236 = x;
var G__13237 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13235,G__13236,G__13237) : f.call(null,G__13235,G__13236,G__13237));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13238__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13238 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13239__i = 0, G__13239__a = new Array(arguments.length -  4);
while (G__13239__i < G__13239__a.length) {G__13239__a[G__13239__i] = arguments[G__13239__i + 4]; ++G__13239__i;}
  more = new cljs.core.IndexedSeq(G__13239__a,0);
} 
return G__13238__delegate.call(this,a,f,x,y,more);};
G__13238.cljs$lang$maxFixedArity = 4;
G__13238.cljs$lang$applyTo = (function (arglist__13240){
var a = cljs.core.first(arglist__13240);
arglist__13240 = cljs.core.next(arglist__13240);
var f = cljs.core.first(arglist__13240);
arglist__13240 = cljs.core.next(arglist__13240);
var x = cljs.core.first(arglist__13240);
arglist__13240 = cljs.core.next(arglist__13240);
var y = cljs.core.first(arglist__13240);
var more = cljs.core.rest(arglist__13240);
return G__13238__delegate(a,f,x,y,more);
});
G__13238.cljs$core$IFn$_invoke$arity$variadic = G__13238__delegate;
return G__13238;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13241 = null;
if (arguments.length > 4) {
var G__13242__i = 0, G__13242__a = new Array(arguments.length -  4);
while (G__13242__i < G__13242__a.length) {G__13242__a[G__13242__i] = arguments[G__13242__i + 4]; ++G__13242__i;}
G__13241 = new cljs.core.IndexedSeq(G__13242__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13309 = null;
var G__13309__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13309__1 = (function (result){
var G__13276 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13276) : rf.call(null,G__13276));
});
var G__13309__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13277 = i;
var G__13278 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13277,G__13278) : f.call(null,G__13277,G__13278));
})();
if((v == null)){
return result;
} else {
var G__13279 = result;
var G__13280 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13279,G__13280) : rf.call(null,G__13279,G__13280));
}
});
G__13309 = function(result,input){
switch(arguments.length){
case 0:
return G__13309__0.call(this);
case 1:
return G__13309__1.call(this,result);
case 2:
return G__13309__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13309.cljs$core$IFn$_invoke$arity$0 = G__13309__0;
G__13309.cljs$core$IFn$_invoke$arity$1 = G__13309__1;
G__13309.cljs$core$IFn$_invoke$arity$2 = G__13309__2;
return G__13309;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___13310 = size;
var i_13311 = (0);
while(true){
if((i_13311 < n__4698__auto___13310)){
var x_13312 = (function (){var G__13305 = (idx + i_13311);
var G__13306 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13311);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13305,G__13306) : f.call(null,G__13305,G__13306));
})();
if((x_13312 == null)){
} else {
cljs.core.chunk_append(b,x_13312);
}

var G__13313 = (i_13311 + (1));
i_13311 = G__13313;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13307 = idx;
var G__13308 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13307,G__13308) : f.call(null,G__13307,G__13308));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__13527 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13527) : p.call(null,G__13527));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13529 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13529) : p.call(null,G__13529));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__13530 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13530) : p.call(null,G__13530));
} else {
return and__3799__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13532 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13532) : p.call(null,G__13532));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13534 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13534) : p.call(null,G__13534));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__13535 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13535) : p.call(null,G__13535));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__13704__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__13704 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13705__i = 0, G__13705__a = new Array(arguments.length -  3);
while (G__13705__i < G__13705__a.length) {G__13705__a[G__13705__i] = arguments[G__13705__i + 3]; ++G__13705__i;}
  args = new cljs.core.IndexedSeq(G__13705__a,0);
} 
return G__13704__delegate.call(this,x,y,z,args);};
G__13704.cljs$lang$maxFixedArity = 3;
G__13704.cljs$lang$applyTo = (function (arglist__13706){
var x = cljs.core.first(arglist__13706);
arglist__13706 = cljs.core.next(arglist__13706);
var y = cljs.core.first(arglist__13706);
arglist__13706 = cljs.core.next(arglist__13706);
var z = cljs.core.first(arglist__13706);
var args = cljs.core.rest(arglist__13706);
return G__13704__delegate(x,y,z,args);
});
G__13704.cljs$core$IFn$_invoke$arity$variadic = G__13704__delegate;
return G__13704;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__13707 = null;
if (arguments.length > 3) {
var G__13708__i = 0, G__13708__a = new Array(arguments.length -  3);
while (G__13708__i < G__13708__a.length) {G__13708__a[G__13708__i] = arguments[G__13708__i + 3]; ++G__13708__i;}
G__13707 = new cljs.core.IndexedSeq(G__13708__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13567 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13567) : p1.call(null,G__13567));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__13568 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13568) : p2.call(null,G__13568));
} else {
return and__3799__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13570) : p1.call(null,G__13570));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13572 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13572) : p1.call(null,G__13572));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__13574 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13574) : p2.call(null,G__13574));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var G__13575 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13575) : p2.call(null,G__13575));
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13577 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13577) : p1.call(null,G__13577));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13579 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13579) : p1.call(null,G__13579));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__13581 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13581) : p1.call(null,G__13581));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__13583 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13583) : p2.call(null,G__13583));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__13585 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13585) : p2.call(null,G__13585));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__13586 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13586) : p2.call(null,G__13586));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__13709__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13314_SHARP_){
var and__3799__auto__ = (function (){var G__13591 = p1__13314_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13591) : p1.call(null,G__13591));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__13592 = p1__13314_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13592) : p2.call(null,G__13592));
} else {
return and__3799__auto__;
}
}),args)));
};
var G__13709 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13710__i = 0, G__13710__a = new Array(arguments.length -  3);
while (G__13710__i < G__13710__a.length) {G__13710__a[G__13710__i] = arguments[G__13710__i + 3]; ++G__13710__i;}
  args = new cljs.core.IndexedSeq(G__13710__a,0);
} 
return G__13709__delegate.call(this,x,y,z,args);};
G__13709.cljs$lang$maxFixedArity = 3;
G__13709.cljs$lang$applyTo = (function (arglist__13711){
var x = cljs.core.first(arglist__13711);
arglist__13711 = cljs.core.next(arglist__13711);
var y = cljs.core.first(arglist__13711);
arglist__13711 = cljs.core.next(arglist__13711);
var z = cljs.core.first(arglist__13711);
var args = cljs.core.rest(arglist__13711);
return G__13709__delegate(x,y,z,args);
});
G__13709.cljs$core$IFn$_invoke$arity$variadic = G__13709__delegate;
return G__13709;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__13712 = null;
if (arguments.length > 3) {
var G__13713__i = 0, G__13713__a = new Array(arguments.length -  3);
while (G__13713__i < G__13713__a.length) {G__13713__a[G__13713__i] = arguments[G__13713__i + 3]; ++G__13713__i;}
G__13712 = new cljs.core.IndexedSeq(G__13713__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13712);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13638 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13638) : p1.call(null,G__13638));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13640 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13640) : p2.call(null,G__13640));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__13641 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13641) : p3.call(null,G__13641));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13643 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13643) : p1.call(null,G__13643));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13645 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13645) : p2.call(null,G__13645));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__13647 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13647) : p3.call(null,G__13647));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__13649 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13649) : p1.call(null,G__13649));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__13651 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13651) : p2.call(null,G__13651));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__13652 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13652) : p3.call(null,G__13652));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__13654 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13654) : p1.call(null,G__13654));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13656 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13656) : p2.call(null,G__13656));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__13658 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13658) : p3.call(null,G__13658));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__13660 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13660) : p1.call(null,G__13660));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__13662 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13662) : p2.call(null,G__13662));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var and__3799__auto____$5 = (function (){var G__13664 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13664) : p3.call(null,G__13664));
})();
if(cljs.core.truth_(and__3799__auto____$5)){
var and__3799__auto____$6 = (function (){var G__13666 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13666) : p1.call(null,G__13666));
})();
if(cljs.core.truth_(and__3799__auto____$6)){
var and__3799__auto____$7 = (function (){var G__13668 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13668) : p2.call(null,G__13668));
})();
if(cljs.core.truth_(and__3799__auto____$7)){
var G__13669 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13669) : p3.call(null,G__13669));
} else {
return and__3799__auto____$7;
}
} else {
return and__3799__auto____$6;
}
} else {
return and__3799__auto____$5;
}
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__13714__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13315_SHARP_){
var and__3799__auto__ = (function (){var G__13676 = p1__13315_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13676) : p1.call(null,G__13676));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13678 = p1__13315_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13678) : p2.call(null,G__13678));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__13679 = p1__13315_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13679) : p3.call(null,G__13679));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}),args)));
};
var G__13714 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13715__i = 0, G__13715__a = new Array(arguments.length -  3);
while (G__13715__i < G__13715__a.length) {G__13715__a[G__13715__i] = arguments[G__13715__i + 3]; ++G__13715__i;}
  args = new cljs.core.IndexedSeq(G__13715__a,0);
} 
return G__13714__delegate.call(this,x,y,z,args);};
G__13714.cljs$lang$maxFixedArity = 3;
G__13714.cljs$lang$applyTo = (function (arglist__13716){
var x = cljs.core.first(arglist__13716);
arglist__13716 = cljs.core.next(arglist__13716);
var y = cljs.core.first(arglist__13716);
arglist__13716 = cljs.core.next(arglist__13716);
var z = cljs.core.first(arglist__13716);
var args = cljs.core.rest(arglist__13716);
return G__13714__delegate(x,y,z,args);
});
G__13714.cljs$core$IFn$_invoke$arity$variadic = G__13714__delegate;
return G__13714;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__13717 = null;
if (arguments.length > 3) {
var G__13718__i = 0, G__13718__a = new Array(arguments.length -  3);
while (G__13718__i < G__13718__a.length) {G__13718__a[G__13718__i] = arguments[G__13718__i + 3]; ++G__13718__i;}
G__13717 = new cljs.core.IndexedSeq(G__13718__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__13719__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13316_SHARP_){
var G__13695 = x;
return (p1__13316_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13316_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13695) : p1__13316_SHARP_.call(null,G__13695));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13317_SHARP_){
var and__3799__auto__ = (function (){var G__13697 = x;
return (p1__13317_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13317_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13697) : p1__13317_SHARP_.call(null,G__13697));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__13698 = y;
return (p1__13317_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13317_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13698) : p1__13317_SHARP_.call(null,G__13698));
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13318_SHARP_){
var and__3799__auto__ = (function (){var G__13700 = x;
return (p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13700) : p1__13318_SHARP_.call(null,G__13700));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__13702 = y;
return (p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13702) : p1__13318_SHARP_.call(null,G__13702));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__13703 = z;
return (p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13318_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13703) : p1__13318_SHARP_.call(null,G__13703));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__13720__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13319_SHARP_){
return cljs.core.every_QMARK_(p1__13319_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__13720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13721__i = 0, G__13721__a = new Array(arguments.length -  3);
while (G__13721__i < G__13721__a.length) {G__13721__a[G__13721__i] = arguments[G__13721__i + 3]; ++G__13721__i;}
  args = new cljs.core.IndexedSeq(G__13721__a,0);
} 
return G__13720__delegate.call(this,x,y,z,args);};
G__13720.cljs$lang$maxFixedArity = 3;
G__13720.cljs$lang$applyTo = (function (arglist__13722){
var x = cljs.core.first(arglist__13722);
arglist__13722 = cljs.core.next(arglist__13722);
var y = cljs.core.first(arglist__13722);
arglist__13722 = cljs.core.next(arglist__13722);
var z = cljs.core.first(arglist__13722);
var args = cljs.core.rest(arglist__13722);
return G__13720__delegate(x,y,z,args);
});
G__13720.cljs$core$IFn$_invoke$arity$variadic = G__13720__delegate;
return G__13720;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__13723 = null;
if (arguments.length > 3) {
var G__13724__i = 0, G__13724__a = new Array(arguments.length -  3);
while (G__13724__i < G__13724__a.length) {G__13724__a[G__13724__i] = arguments[G__13724__i + 3]; ++G__13724__i;}
G__13723 = new cljs.core.IndexedSeq(G__13724__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__13719 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13725__i = 0, G__13725__a = new Array(arguments.length -  3);
while (G__13725__i < G__13725__a.length) {G__13725__a[G__13725__i] = arguments[G__13725__i + 3]; ++G__13725__i;}
  ps = new cljs.core.IndexedSeq(G__13725__a,0);
} 
return G__13719__delegate.call(this,p1,p2,p3,ps);};
G__13719.cljs$lang$maxFixedArity = 3;
G__13719.cljs$lang$applyTo = (function (arglist__13726){
var p1 = cljs.core.first(arglist__13726);
arglist__13726 = cljs.core.next(arglist__13726);
var p2 = cljs.core.first(arglist__13726);
arglist__13726 = cljs.core.next(arglist__13726);
var p3 = cljs.core.first(arglist__13726);
var ps = cljs.core.rest(arglist__13726);
return G__13719__delegate(p1,p2,p3,ps);
});
G__13719.cljs$core$IFn$_invoke$arity$variadic = G__13719__delegate;
return G__13719;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__13727 = null;
if (arguments.length > 3) {
var G__13728__i = 0, G__13728__a = new Array(arguments.length -  3);
while (G__13728__i < G__13728__a.length) {G__13728__a[G__13728__i] = arguments[G__13728__i + 3]; ++G__13728__i;}
G__13727 = new cljs.core.IndexedSeq(G__13728__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__13934 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13934) : p.call(null,G__13934));
});
var sp1__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__13936 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13936) : p.call(null,G__13936));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__13937 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13937) : p.call(null,G__13937));
}
});
var sp1__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__13939 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13939) : p.call(null,G__13939));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__13941 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13941) : p.call(null,G__13941));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__13942 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13942) : p.call(null,G__13942));
}
}
});
var sp1__4 = (function() { 
var G__14103__delegate = function (x,y,z,args){
var or__3811__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14103 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14104__i = 0, G__14104__a = new Array(arguments.length -  3);
while (G__14104__i < G__14104__a.length) {G__14104__a[G__14104__i] = arguments[G__14104__i + 3]; ++G__14104__i;}
  args = new cljs.core.IndexedSeq(G__14104__a,0);
} 
return G__14103__delegate.call(this,x,y,z,args);};
G__14103.cljs$lang$maxFixedArity = 3;
G__14103.cljs$lang$applyTo = (function (arglist__14105){
var x = cljs.core.first(arglist__14105);
arglist__14105 = cljs.core.next(arglist__14105);
var y = cljs.core.first(arglist__14105);
arglist__14105 = cljs.core.next(arglist__14105);
var z = cljs.core.first(arglist__14105);
var args = cljs.core.rest(arglist__14105);
return G__14103__delegate(x,y,z,args);
});
G__14103.cljs$core$IFn$_invoke$arity$variadic = G__14103__delegate;
return G__14103;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14106 = null;
if (arguments.length > 3) {
var G__14107__i = 0, G__14107__a = new Array(arguments.length -  3);
while (G__14107__i < G__14107__a.length) {G__14107__a[G__14107__i] = arguments[G__14107__i + 3]; ++G__14107__i;}
G__14106 = new cljs.core.IndexedSeq(G__14107__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3811__auto__ = (function (){var G__13974 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13974) : p1.call(null,G__13974));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__13975 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13975) : p2.call(null,G__13975));
}
});
var sp2__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__13977 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13977) : p1.call(null,G__13977));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__13979 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13979) : p1.call(null,G__13979));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__13981 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13981) : p2.call(null,G__13981));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__13982 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13982) : p2.call(null,G__13982));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__13984 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13984) : p1.call(null,G__13984));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__13986 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13986) : p1.call(null,G__13986));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__13988 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13988) : p1.call(null,G__13988));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__13990 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13990) : p2.call(null,G__13990));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__13992 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13992) : p2.call(null,G__13992));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__13993 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13993) : p2.call(null,G__13993));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14108__delegate = function (x,y,z,args){
var or__3811__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__13729_SHARP_){
var or__3811__auto____$1 = (function (){var G__13995 = p1__13729_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13995) : p1.call(null,G__13995));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__13996 = p1__13729_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13996) : p2.call(null,G__13996));
}
});})(or__3811__auto__))
,args);
}
};
var G__14108 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14109__i = 0, G__14109__a = new Array(arguments.length -  3);
while (G__14109__i < G__14109__a.length) {G__14109__a[G__14109__i] = arguments[G__14109__i + 3]; ++G__14109__i;}
  args = new cljs.core.IndexedSeq(G__14109__a,0);
} 
return G__14108__delegate.call(this,x,y,z,args);};
G__14108.cljs$lang$maxFixedArity = 3;
G__14108.cljs$lang$applyTo = (function (arglist__14110){
var x = cljs.core.first(arglist__14110);
arglist__14110 = cljs.core.next(arglist__14110);
var y = cljs.core.first(arglist__14110);
arglist__14110 = cljs.core.next(arglist__14110);
var z = cljs.core.first(arglist__14110);
var args = cljs.core.rest(arglist__14110);
return G__14108__delegate(x,y,z,args);
});
G__14108.cljs$core$IFn$_invoke$arity$variadic = G__14108__delegate;
return G__14108;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14111 = null;
if (arguments.length > 3) {
var G__14112__i = 0, G__14112__a = new Array(arguments.length -  3);
while (G__14112__i < G__14112__a.length) {G__14112__a[G__14112__i] = arguments[G__14112__i + 3]; ++G__14112__i;}
G__14111 = new cljs.core.IndexedSeq(G__14112__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3811__auto__ = (function (){var G__14042 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14042) : p1.call(null,G__14042));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14044 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14044) : p2.call(null,G__14044));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14045 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14045) : p3.call(null,G__14045));
}
}
});
var sp3__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__14047 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14047) : p1.call(null,G__14047));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14049 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14049) : p2.call(null,G__14049));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14051 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14051) : p3.call(null,G__14051));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__14053 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14053) : p1.call(null,G__14053));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__14055 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14055) : p2.call(null,G__14055));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__14056 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14056) : p3.call(null,G__14056));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__14058 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14058) : p1.call(null,G__14058));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14060 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14060) : p2.call(null,G__14060));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14062 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14062) : p3.call(null,G__14062));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__14064 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14064) : p1.call(null,G__14064));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__14066 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14066) : p2.call(null,G__14066));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var or__3811__auto____$5 = (function (){var G__14068 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14068) : p3.call(null,G__14068));
})();
if(cljs.core.truth_(or__3811__auto____$5)){
return or__3811__auto____$5;
} else {
var or__3811__auto____$6 = (function (){var G__14070 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14070) : p1.call(null,G__14070));
})();
if(cljs.core.truth_(or__3811__auto____$6)){
return or__3811__auto____$6;
} else {
var or__3811__auto____$7 = (function (){var G__14072 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14072) : p2.call(null,G__14072));
})();
if(cljs.core.truth_(or__3811__auto____$7)){
return or__3811__auto____$7;
} else {
var G__14073 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14073) : p3.call(null,G__14073));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14113__delegate = function (x,y,z,args){
var or__3811__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__13730_SHARP_){
var or__3811__auto____$1 = (function (){var G__14075 = p1__13730_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14075) : p1.call(null,G__14075));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14077 = p1__13730_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14077) : p2.call(null,G__14077));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__14078 = p1__13730_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14078) : p3.call(null,G__14078));
}
}
});})(or__3811__auto__))
,args);
}
};
var G__14113 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14114__i = 0, G__14114__a = new Array(arguments.length -  3);
while (G__14114__i < G__14114__a.length) {G__14114__a[G__14114__i] = arguments[G__14114__i + 3]; ++G__14114__i;}
  args = new cljs.core.IndexedSeq(G__14114__a,0);
} 
return G__14113__delegate.call(this,x,y,z,args);};
G__14113.cljs$lang$maxFixedArity = 3;
G__14113.cljs$lang$applyTo = (function (arglist__14115){
var x = cljs.core.first(arglist__14115);
arglist__14115 = cljs.core.next(arglist__14115);
var y = cljs.core.first(arglist__14115);
arglist__14115 = cljs.core.next(arglist__14115);
var z = cljs.core.first(arglist__14115);
var args = cljs.core.rest(arglist__14115);
return G__14113__delegate(x,y,z,args);
});
G__14113.cljs$core$IFn$_invoke$arity$variadic = G__14113__delegate;
return G__14113;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14116 = null;
if (arguments.length > 3) {
var G__14117__i = 0, G__14117__a = new Array(arguments.length -  3);
while (G__14117__i < G__14117__a.length) {G__14117__a[G__14117__i] = arguments[G__14117__i + 3]; ++G__14117__i;}
G__14116 = new cljs.core.IndexedSeq(G__14117__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14116);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14118__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__13731_SHARP_){
var G__14094 = x;
return (p1__13731_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13731_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14094) : p1__13731_SHARP_.call(null,G__14094));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__13732_SHARP_){
var or__3811__auto__ = (function (){var G__14096 = x;
return (p1__13732_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13732_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14096) : p1__13732_SHARP_.call(null,G__14096));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__14097 = y;
return (p1__13732_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13732_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14097) : p1__13732_SHARP_.call(null,G__14097));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__13733_SHARP_){
var or__3811__auto__ = (function (){var G__14099 = x;
return (p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14099) : p1__13733_SHARP_.call(null,G__14099));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14101 = y;
return (p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14101) : p1__13733_SHARP_.call(null,G__14101));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14102 = z;
return (p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13733_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14102) : p1__13733_SHARP_.call(null,G__14102));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14119__delegate = function (x,y,z,args){
var or__3811__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__,ps__$1){
return (function (p1__13734_SHARP_){
return cljs.core.some(p1__13734_SHARP_,args);
});})(or__3811__auto__,ps__$1))
,ps__$1);
}
};
var G__14119 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14120__i = 0, G__14120__a = new Array(arguments.length -  3);
while (G__14120__i < G__14120__a.length) {G__14120__a[G__14120__i] = arguments[G__14120__i + 3]; ++G__14120__i;}
  args = new cljs.core.IndexedSeq(G__14120__a,0);
} 
return G__14119__delegate.call(this,x,y,z,args);};
G__14119.cljs$lang$maxFixedArity = 3;
G__14119.cljs$lang$applyTo = (function (arglist__14121){
var x = cljs.core.first(arglist__14121);
arglist__14121 = cljs.core.next(arglist__14121);
var y = cljs.core.first(arglist__14121);
arglist__14121 = cljs.core.next(arglist__14121);
var z = cljs.core.first(arglist__14121);
var args = cljs.core.rest(arglist__14121);
return G__14119__delegate(x,y,z,args);
});
G__14119.cljs$core$IFn$_invoke$arity$variadic = G__14119__delegate;
return G__14119;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14122 = null;
if (arguments.length > 3) {
var G__14123__i = 0, G__14123__a = new Array(arguments.length -  3);
while (G__14123__i < G__14123__a.length) {G__14123__a[G__14123__i] = arguments[G__14123__i + 3]; ++G__14123__i;}
G__14122 = new cljs.core.IndexedSeq(G__14123__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14118 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14124__i = 0, G__14124__a = new Array(arguments.length -  3);
while (G__14124__i < G__14124__a.length) {G__14124__a[G__14124__i] = arguments[G__14124__i + 3]; ++G__14124__i;}
  ps = new cljs.core.IndexedSeq(G__14124__a,0);
} 
return G__14118__delegate.call(this,p1,p2,p3,ps);};
G__14118.cljs$lang$maxFixedArity = 3;
G__14118.cljs$lang$applyTo = (function (arglist__14125){
var p1 = cljs.core.first(arglist__14125);
arglist__14125 = cljs.core.next(arglist__14125);
var p2 = cljs.core.first(arglist__14125);
arglist__14125 = cljs.core.next(arglist__14125);
var p3 = cljs.core.first(arglist__14125);
var ps = cljs.core.rest(arglist__14125);
return G__14118__delegate(p1,p2,p3,ps);
});
G__14118.cljs$core$IFn$_invoke$arity$variadic = G__14118__delegate;
return G__14118;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14126 = null;
if (arguments.length > 3) {
var G__14127__i = 0, G__14127__a = new Array(arguments.length -  3);
while (G__14127__i < G__14127__a.length) {G__14127__a[G__14127__i] = arguments[G__14127__i + 3]; ++G__14127__i;}
G__14126 = new cljs.core.IndexedSeq(G__14127__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14182 = null;
var G__14182__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14182__1 = (function (result){
var G__14168 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14168) : rf.call(null,G__14168));
});
var G__14182__2 = (function (result,input){
var G__14169 = result;
var G__14170 = (function (){var G__14171 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14171) : f.call(null,G__14171));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14169,G__14170) : rf.call(null,G__14169,G__14170));
});
var G__14182__3 = (function() { 
var G__14183__delegate = function (result,input,inputs){
var G__14172 = result;
var G__14173 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14172,G__14173) : rf.call(null,G__14172,G__14173));
};
var G__14183 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14184__i = 0, G__14184__a = new Array(arguments.length -  2);
while (G__14184__i < G__14184__a.length) {G__14184__a[G__14184__i] = arguments[G__14184__i + 2]; ++G__14184__i;}
  inputs = new cljs.core.IndexedSeq(G__14184__a,0);
} 
return G__14183__delegate.call(this,result,input,inputs);};
G__14183.cljs$lang$maxFixedArity = 2;
G__14183.cljs$lang$applyTo = (function (arglist__14185){
var result = cljs.core.first(arglist__14185);
arglist__14185 = cljs.core.next(arglist__14185);
var input = cljs.core.first(arglist__14185);
var inputs = cljs.core.rest(arglist__14185);
return G__14183__delegate(result,input,inputs);
});
G__14183.cljs$core$IFn$_invoke$arity$variadic = G__14183__delegate;
return G__14183;
})()
;
G__14182 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14182__0.call(this);
case 1:
return G__14182__1.call(this,result);
case 2:
return G__14182__2.call(this,result,input);
default:
var G__14186 = null;
if (arguments.length > 2) {
var G__14187__i = 0, G__14187__a = new Array(arguments.length -  2);
while (G__14187__i < G__14187__a.length) {G__14187__a[G__14187__i] = arguments[G__14187__i + 2]; ++G__14187__i;}
G__14186 = new cljs.core.IndexedSeq(G__14187__a,0);
}
return G__14182__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14182.cljs$lang$maxFixedArity = 2;
G__14182.cljs$lang$applyTo = G__14182__3.cljs$lang$applyTo;
G__14182.cljs$core$IFn$_invoke$arity$0 = G__14182__0;
G__14182.cljs$core$IFn$_invoke$arity$1 = G__14182__1;
G__14182.cljs$core$IFn$_invoke$arity$2 = G__14182__2;
G__14182.cljs$core$IFn$_invoke$arity$variadic = G__14182__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14182;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___14188 = size;
var i_14189 = (0);
while(true){
if((i_14189 < n__4698__auto___14188)){
cljs.core.chunk_append(b,(function (){var G__14174 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14189);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14174) : f.call(null,G__14174));
})());

var G__14190 = (i_14189 + (1));
i_14189 = G__14190;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14175 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14175) : f.call(null,G__14175));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14176 = cljs.core.first(s1);
var G__14177 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14176,G__14177) : f.call(null,G__14176,G__14177));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14178 = cljs.core.first(s1);
var G__14179 = cljs.core.first(s2);
var G__14180 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14178,G__14179,G__14180) : f.call(null,G__14178,G__14179,G__14180));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14191__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14128_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14128_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14191 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14192__i = 0, G__14192__a = new Array(arguments.length -  4);
while (G__14192__i < G__14192__a.length) {G__14192__a[G__14192__i] = arguments[G__14192__i + 4]; ++G__14192__i;}
  colls = new cljs.core.IndexedSeq(G__14192__a,0);
} 
return G__14191__delegate.call(this,f,c1,c2,c3,colls);};
G__14191.cljs$lang$maxFixedArity = 4;
G__14191.cljs$lang$applyTo = (function (arglist__14193){
var f = cljs.core.first(arglist__14193);
arglist__14193 = cljs.core.next(arglist__14193);
var c1 = cljs.core.first(arglist__14193);
arglist__14193 = cljs.core.next(arglist__14193);
var c2 = cljs.core.first(arglist__14193);
arglist__14193 = cljs.core.next(arglist__14193);
var c3 = cljs.core.first(arglist__14193);
var colls = cljs.core.rest(arglist__14193);
return G__14191__delegate(f,c1,c2,c3,colls);
});
G__14191.cljs$core$IFn$_invoke$arity$variadic = G__14191__delegate;
return G__14191;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14194 = null;
if (arguments.length > 4) {
var G__14195__i = 0, G__14195__a = new Array(arguments.length -  4);
while (G__14195__i < G__14195__a.length) {G__14195__a[G__14195__i] = arguments[G__14195__i + 4]; ++G__14195__i;}
G__14194 = new cljs.core.IndexedSeq(G__14195__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14204 = null;
var G__14204__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14204__1 = (function (result){
var G__14201 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14201) : rf.call(null,G__14201));
});
var G__14204__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14202 = result;
var G__14203 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14202,G__14203) : rf.call(null,G__14202,G__14203));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14204 = function(result,input){
switch(arguments.length){
case 0:
return G__14204__0.call(this);
case 1:
return G__14204__1.call(this,result);
case 2:
return G__14204__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14204.cljs$core$IFn$_invoke$arity$0 = G__14204__0;
G__14204.cljs$core$IFn$_invoke$arity$1 = G__14204__1;
G__14204.cljs$core$IFn$_invoke$arity$2 = G__14204__2;
return G__14204;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14211 = null;
var G__14211__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14211__1 = (function (result){
var G__14208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14208) : rf.call(null,G__14208));
});
var G__14211__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14209 = result;
var G__14210 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14209,G__14210) : rf.call(null,G__14209,G__14210));
}
});
G__14211 = function(result,input){
switch(arguments.length){
case 0:
return G__14211__0.call(this);
case 1:
return G__14211__1.call(this,result);
case 2:
return G__14211__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14211.cljs$core$IFn$_invoke$arity$0 = G__14211__0;
G__14211.cljs$core$IFn$_invoke$arity$1 = G__14211__1;
G__14211.cljs$core$IFn$_invoke$arity$2 = G__14211__2;
return G__14211;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14212 = (n__$1 - (1));
var G__14213 = cljs.core.rest(s);
n__$1 = G__14212;
coll__$1 = G__14213;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14216 = cljs.core.next(s);
var G__14217 = cljs.core.next(lead);
s = G__14216;
lead = G__14217;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14230 = null;
var G__14230__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14230__1 = (function (result){
var G__14224 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14224) : rf.call(null,G__14224));
});
var G__14230__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3799__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3799__auto__)){
var G__14225 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14225) : pred.call(null,G__14225));
} else {
return and__3799__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14226 = result;
var G__14227 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14226,G__14227) : rf.call(null,G__14226,G__14227));
}
});
G__14230 = function(result,input){
switch(arguments.length){
case 0:
return G__14230__0.call(this);
case 1:
return G__14230__1.call(this,result);
case 2:
return G__14230__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14230.cljs$core$IFn$_invoke$arity$0 = G__14230__0;
G__14230.cljs$core$IFn$_invoke$arity$1 = G__14230__1;
G__14230.cljs$core$IFn$_invoke$arity$2 = G__14230__2;
return G__14230;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3799__auto__ = s;
if(and__3799__auto__){
var G__14229 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14229) : pred__$1.call(null,G__14229));
} else {
return and__3799__auto__;
}
})())){
var G__14231 = pred__$1;
var G__14232 = cljs.core.rest(s);
pred__$1 = G__14231;
coll__$1 = G__14232;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14241 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14241) : f.call(null,G__14241));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14244__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14244 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14245__i = 0, G__14245__a = new Array(arguments.length -  2);
while (G__14245__i < G__14245__a.length) {G__14245__a[G__14245__i] = arguments[G__14245__i + 2]; ++G__14245__i;}
  colls = new cljs.core.IndexedSeq(G__14245__a,0);
} 
return G__14244__delegate.call(this,c1,c2,colls);};
G__14244.cljs$lang$maxFixedArity = 2;
G__14244.cljs$lang$applyTo = (function (arglist__14246){
var c1 = cljs.core.first(arglist__14246);
arglist__14246 = cljs.core.next(arglist__14246);
var c2 = cljs.core.first(arglist__14246);
var colls = cljs.core.rest(arglist__14246);
return G__14244__delegate(c1,c2,colls);
});
G__14244.cljs$core$IFn$_invoke$arity$variadic = G__14244__delegate;
return G__14244;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14247 = null;
if (arguments.length > 2) {
var G__14248__i = 0, G__14248__a = new Array(arguments.length -  2);
while (G__14248__i < G__14248__a.length) {G__14248__a[G__14248__i] = arguments[G__14248__i + 2]; ++G__14248__i;}
G__14247 = new cljs.core.IndexedSeq(G__14248__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__14263 = null;
var G__14263__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14263__1 = (function (result){
var G__14256 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14256) : rf.call(null,G__14256));
});
var G__14263__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__14257 = result;
var G__14258 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14257,G__14258) : rf.call(null,G__14257,G__14258));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__14259 = sepr;
var G__14260 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14259,G__14260) : rf.call(null,G__14259,G__14260));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__14261 = result;
var G__14262 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14261,G__14262) : rf.call(null,G__14261,G__14262));
}
});
G__14263 = function(result,input){
switch(arguments.length){
case 0:
return G__14263__0.call(this);
case 1:
return G__14263__1.call(this,result);
case 2:
return G__14263__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14263.cljs$core$IFn$_invoke$arity$0 = G__14263__0;
G__14263.cljs$core$IFn$_invoke$arity$1 = G__14263__1;
G__14263.cljs$core$IFn$_invoke$arity$2 = G__14263__2;
return G__14263;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14272__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14272 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14273__i = 0, G__14273__a = new Array(arguments.length -  1);
while (G__14273__i < G__14273__a.length) {G__14273__a[G__14273__i] = arguments[G__14273__i + 1]; ++G__14273__i;}
  colls = new cljs.core.IndexedSeq(G__14273__a,0);
} 
return G__14272__delegate.call(this,f,colls);};
G__14272.cljs$lang$maxFixedArity = 1;
G__14272.cljs$lang$applyTo = (function (arglist__14274){
var f = cljs.core.first(arglist__14274);
var colls = cljs.core.rest(arglist__14274);
return G__14272__delegate(f,colls);
});
G__14272.cljs$core$IFn$_invoke$arity$variadic = G__14272__delegate;
return G__14272;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14275 = null;
if (arguments.length > 1) {
var G__14276__i = 0, G__14276__a = new Array(arguments.length -  1);
while (G__14276__i < G__14276__a.length) {G__14276__a[G__14276__i] = arguments[G__14276__i + 1]; ++G__14276__i;}
G__14275 = new cljs.core.IndexedSeq(G__14276__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14295 = null;
var G__14295__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14295__1 = (function (result){
var G__14289 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14289) : rf.call(null,G__14289));
});
var G__14295__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14290 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14290) : pred.call(null,G__14290));
})())){
var G__14291 = result;
var G__14292 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14291,G__14292) : rf.call(null,G__14291,G__14292));
} else {
return result;
}
});
G__14295 = function(result,input){
switch(arguments.length){
case 0:
return G__14295__0.call(this);
case 1:
return G__14295__1.call(this,result);
case 2:
return G__14295__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14295.cljs$core$IFn$_invoke$arity$0 = G__14295__0;
G__14295.cljs$core$IFn$_invoke$arity$1 = G__14295__1;
G__14295.cljs$core$IFn$_invoke$arity$2 = G__14295__2;
return G__14295;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___14296 = size;
var i_14297 = (0);
while(true){
if((i_14297 < n__4698__auto___14296)){
if(cljs.core.truth_((function (){var G__14293 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14297);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14293) : pred.call(null,G__14293));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14297));
} else {
}

var G__14298 = (i_14297 + (1));
i_14297 = G__14298;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14294 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14294) : pred.call(null,G__14294));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14305 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14305) : branch_QMARK_.call(null,G__14305));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14306 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14306) : children.call(null,G__14306));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14307_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14307_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14310 = to;
if(G__14310){
var bit__4485__auto__ = (G__14310.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__14310.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14311 = to;
if(G__14311){
var bit__4485__auto__ = (G__14311.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__14311.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14313 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14313) : f.call(null,G__14313));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14314__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14314 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14315__i = 0, G__14315__a = new Array(arguments.length -  4);
while (G__14315__i < G__14315__a.length) {G__14315__a[G__14315__i] = arguments[G__14315__i + 4]; ++G__14315__i;}
  colls = new cljs.core.IndexedSeq(G__14315__a,0);
} 
return G__14314__delegate.call(this,f,c1,c2,c3,colls);};
G__14314.cljs$lang$maxFixedArity = 4;
G__14314.cljs$lang$applyTo = (function (arglist__14316){
var f = cljs.core.first(arglist__14316);
arglist__14316 = cljs.core.next(arglist__14316);
var c1 = cljs.core.first(arglist__14316);
arglist__14316 = cljs.core.next(arglist__14316);
var c2 = cljs.core.first(arglist__14316);
arglist__14316 = cljs.core.next(arglist__14316);
var c3 = cljs.core.first(arglist__14316);
var colls = cljs.core.rest(arglist__14316);
return G__14314__delegate(f,c1,c2,c3,colls);
});
G__14314.cljs$core$IFn$_invoke$arity$variadic = G__14314__delegate;
return G__14314;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14317 = null;
if (arguments.length > 4) {
var G__14318__i = 0, G__14318__a = new Array(arguments.length -  4);
while (G__14318__i < G__14318__a.length) {G__14318__a[G__14318__i] = arguments[G__14318__i + 4]; ++G__14318__i;}
G__14317 = new cljs.core.IndexedSeq(G__14318__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14320 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14320) : pred.call(null,G__14320));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14335 = m__$1;
if(G__14335){
var bit__4492__auto__ = (G__14335.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4492__auto__) || (G__14335.cljs$core$ILookup$)){
return true;
} else {
if((!G__14335.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14335);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14335);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14336 = sentinel;
var G__14337 = m__$2;
var G__14338 = cljs.core.next(ks__$1);
sentinel = G__14336;
m__$1 = G__14337;
ks__$1 = G__14338;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14339,v){
var vec__14344 = p__14339;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14344,(0),null);
var ks = cljs.core.nthnext(vec__14344,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14345,f){
var vec__14383 = p__14345;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14383,(0),null);
var ks = cljs.core.nthnext(vec__14383,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14384 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14384) : f.call(null,G__14384));
})());
}
});
var update_in__4 = (function (m,p__14346,f,a){
var vec__14385 = p__14346;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14385,(0),null);
var ks = cljs.core.nthnext(vec__14385,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14386 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14387 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14386,G__14387) : f.call(null,G__14386,G__14387));
})());
}
});
var update_in__5 = (function (m,p__14347,f,a,b){
var vec__14388 = p__14347;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14388,(0),null);
var ks = cljs.core.nthnext(vec__14388,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14389 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14390 = a;
var G__14391 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14389,G__14390,G__14391) : f.call(null,G__14389,G__14390,G__14391));
})());
}
});
var update_in__6 = (function (m,p__14348,f,a,b,c){
var vec__14392 = p__14348;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14392,(0),null);
var ks = cljs.core.nthnext(vec__14392,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14393 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14394 = a;
var G__14395 = b;
var G__14396 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14393,G__14394,G__14395,G__14396) : f.call(null,G__14393,G__14394,G__14395,G__14396));
})());
}
});
var update_in__7 = (function() { 
var G__14398__delegate = function (m,p__14349,f,a,b,c,args){
var vec__14397 = p__14349;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14397,(0),null);
var ks = cljs.core.nthnext(vec__14397,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14398 = function (m,p__14349,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14399__i = 0, G__14399__a = new Array(arguments.length -  6);
while (G__14399__i < G__14399__a.length) {G__14399__a[G__14399__i] = arguments[G__14399__i + 6]; ++G__14399__i;}
  args = new cljs.core.IndexedSeq(G__14399__a,0);
} 
return G__14398__delegate.call(this,m,p__14349,f,a,b,c,args);};
G__14398.cljs$lang$maxFixedArity = 6;
G__14398.cljs$lang$applyTo = (function (arglist__14400){
var m = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var p__14349 = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var f = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var a = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var b = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var c = cljs.core.first(arglist__14400);
var args = cljs.core.rest(arglist__14400);
return G__14398__delegate(m,p__14349,f,a,b,c,args);
});
G__14398.cljs$core$IFn$_invoke$arity$variadic = G__14398__delegate;
return G__14398;
})()
;
update_in = function(m,p__14349,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14349,f);
case 4:
return update_in__4.call(this,m,p__14349,f,a);
case 5:
return update_in__5.call(this,m,p__14349,f,a,b);
case 6:
return update_in__6.call(this,m,p__14349,f,a,b,c);
default:
var G__14401 = null;
if (arguments.length > 6) {
var G__14402__i = 0, G__14402__a = new Array(arguments.length -  6);
while (G__14402__i < G__14402__a.length) {G__14402__a[G__14402__i] = arguments[G__14402__i + 6]; ++G__14402__i;}
G__14401 = new cljs.core.IndexedSeq(G__14402__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14349,f,a,b,c, G__14401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14413 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14413) : f.call(null,G__14413));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14414 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14415 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14414,G__14415) : f.call(null,G__14414,G__14415));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14416 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14417 = x;
var G__14418 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14416,G__14417,G__14418) : f.call(null,G__14416,G__14417,G__14418));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14419 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14420 = x;
var G__14421 = y;
var G__14422 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14419,G__14420,G__14421,G__14422) : f.call(null,G__14419,G__14420,G__14421,G__14422));
})());
});
var update__7 = (function() { 
var G__14423__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14423 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14424__i = 0, G__14424__a = new Array(arguments.length -  6);
while (G__14424__i < G__14424__a.length) {G__14424__a[G__14424__i] = arguments[G__14424__i + 6]; ++G__14424__i;}
  more = new cljs.core.IndexedSeq(G__14424__a,0);
} 
return G__14423__delegate.call(this,m,k,f,x,y,z,more);};
G__14423.cljs$lang$maxFixedArity = 6;
G__14423.cljs$lang$applyTo = (function (arglist__14425){
var m = cljs.core.first(arglist__14425);
arglist__14425 = cljs.core.next(arglist__14425);
var k = cljs.core.first(arglist__14425);
arglist__14425 = cljs.core.next(arglist__14425);
var f = cljs.core.first(arglist__14425);
arglist__14425 = cljs.core.next(arglist__14425);
var x = cljs.core.first(arglist__14425);
arglist__14425 = cljs.core.next(arglist__14425);
var y = cljs.core.first(arglist__14425);
arglist__14425 = cljs.core.next(arglist__14425);
var z = cljs.core.first(arglist__14425);
var more = cljs.core.rest(arglist__14425);
return G__14423__delegate(m,k,f,x,y,z,more);
});
G__14423.cljs$core$IFn$_invoke$arity$variadic = G__14423__delegate;
return G__14423;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14426 = null;
if (arguments.length > 6) {
var G__14427__i = 0, G__14427__a = new Array(arguments.length -  6);
while (G__14427__i < G__14427__a.length) {G__14427__a[G__14427__i] = arguments[G__14427__i + 6]; ++G__14427__i;}
G__14426 = new cljs.core.IndexedSeq(G__14427__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14428 = (ll - (5));
var G__14429 = r;
ll = G__14428;
ret = G__14429;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14434 = cljs.core.pv_aget(node,(0));
var G__14435 = (level - (5));
node = G__14434;
level = G__14435;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14436 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14437 = (level - (5));
node = G__14436;
level = G__14437;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14447 = init__$2;
var G__14448 = (j + i);
var G__14449 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14447,G__14448,G__14449) : f.call(null,G__14447,G__14448,G__14449));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14460 = (j + (1));
var G__14461 = init__$3;
j = G__14460;
init__$2 = G__14461;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14450 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14450) : cljs.core.deref.call(null,G__14450));
} else {
var G__14462 = (i + len);
var G__14463 = init__$2;
i = G__14462;
init__$1 = G__14463;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14451 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14451) : cljs.core.tv_editable_root.call(null,G__14451));
})(),(function (){var G__14452 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14452) : cljs.core.tv_editable_tail.call(null,G__14452));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14453 = init__$2;
var G__14454 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14453,G__14454) : f.call(null,G__14453,G__14454));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14464 = (j + (1));
var G__14465 = init__$3;
j = G__14464;
init__$2 = G__14465;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14455 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14455) : cljs.core.deref.call(null,G__14455));
} else {
var G__14466 = (i + len);
var G__14467 = init__$2;
i = G__14466;
init__$1 = G__14467;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14456 = coll__$1;
var G__14457 = cljs.core.first_array_for_longvec(coll__$1);
var G__14458 = (0);
var G__14459 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14456,G__14457,G__14458,G__14459) : cljs.core.chunked_seq.call(null,G__14456,G__14457,G__14458,G__14459));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4698__auto___14468 = len;
var i_14469 = (0);
while(true){
if((i_14469 < n__4698__auto___14468)){
(new_tail[i_14469] = (self__.tail[i_14469]));

var G__14470 = (i_14469 + (1));
i_14469 = G__14470;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14471 = null;
var G__14471__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14471__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14471 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14471__2.call(this,self__,k);
case 3:
return G__14471__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14471.cljs$core$IFn$_invoke$arity$2 = G__14471__2;
G__14471.cljs$core$IFn$_invoke$arity$3 = G__14471__3;
return G__14471;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14446){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14446)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14472 = (i + (1));
var G__14473 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14472;
out = G__14473;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14474__i = 0, G__14474__a = new Array(arguments.length -  0);
while (G__14474__i < G__14474__a.length) {G__14474__a[G__14474__i] = arguments[G__14474__i + 0]; ++G__14474__i;}
  args = new cljs.core.IndexedSeq(G__14474__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14475){
var args = cljs.core.seq(arglist__14475);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14476 = self__.vec;
var G__14477 = self__.node;
var G__14478 = self__.i;
var G__14479 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14476,G__14477,G__14478,G__14479) : cljs.core.chunked_seq.call(null,G__14476,G__14477,G__14478,G__14479));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14480 = self__.vec;
var G__14481 = (self__.i + self__.off);
var G__14482 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14480,G__14481,G__14482) : cljs.core.subvec.call(null,G__14480,G__14481,G__14482));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14483 = self__.vec;
var G__14484 = (self__.i + self__.off);
var G__14485 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14483,G__14484,G__14485) : cljs.core.subvec.call(null,G__14483,G__14484,G__14485));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14486 = self__.vec;
var G__14487 = self__.node;
var G__14488 = self__.i;
var G__14489 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14486,G__14487,G__14488,G__14489) : cljs.core.chunked_seq.call(null,G__14486,G__14487,G__14488,G__14489));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14490 = self__.vec;
var G__14491 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14492 = end;
var G__14493 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14490,G__14491,G__14492,G__14493) : cljs.core.chunked_seq.call(null,G__14490,G__14491,G__14492,G__14493));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14494 = self__.vec;
var G__14495 = self__.node;
var G__14496 = self__.i;
var G__14497 = self__.off;
var G__14498 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14494,G__14495,G__14496,G__14497,G__14498) : cljs.core.chunked_seq.call(null,G__14494,G__14495,G__14496,G__14497,G__14498));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14499 = self__.vec;
var G__14500 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14501 = end;
var G__14502 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14499,G__14500,G__14501,G__14502) : cljs.core.chunked_seq.call(null,G__14499,G__14500,G__14501,G__14502));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14504 = self__.meta;
var G__14505 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14506 = self__.start;
var G__14507 = (function (){var x__4128__auto__ = self__.end;
var y__4129__auto__ = (v_pos + (1));
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})();
var G__14508 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14504,G__14505,G__14506,G__14507,G__14508) : cljs.core.build_subvec.call(null,G__14504,G__14505,G__14506,G__14507,G__14508));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14509 = self__.meta;
var G__14510 = self__.v;
var G__14511 = self__.start;
var G__14512 = (self__.end - (1));
var G__14513 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14509,G__14510,G__14511,G__14512,G__14513) : cljs.core.build_subvec.call(null,G__14509,G__14510,G__14511,G__14512,G__14513));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14515 = meta__$1;
var G__14516 = self__.v;
var G__14517 = self__.start;
var G__14518 = self__.end;
var G__14519 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14515,G__14516,G__14517,G__14518,G__14519) : cljs.core.build_subvec.call(null,G__14515,G__14516,G__14517,G__14518,G__14519));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__14520 = self__.meta;
var G__14521 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__14522 = self__.start;
var G__14523 = (self__.end + (1));
var G__14524 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14520,G__14521,G__14522,G__14523,G__14524) : cljs.core.build_subvec.call(null,G__14520,G__14521,G__14522,G__14523,G__14524));
});

cljs.core.Subvec.prototype.call = (function() {
var G__14525 = null;
var G__14525__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14525__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14525 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14525__2.call(this,self__,k);
case 3:
return G__14525__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14525.cljs$core$IFn$_invoke$arity$2 = G__14525__2;
G__14525.cljs$core$IFn$_invoke$arity$3 = G__14525__3;
return G__14525;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14503){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14503)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__14526 = meta;
var G__14527 = v.v;
var G__14528 = (v.start + start);
var G__14529 = (v.start + end);
var G__14530 = __hash;
meta = G__14526;
v = G__14527;
start = G__14528;
end = G__14529;
__hash = G__14530;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj14537 = {};
return obj14537;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__14545 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__14546 = (level - (5));
node = G__14545;
level = G__14546;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__14550 = null;
var G__14550__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14550__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14550 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14550__2.call(this,self__,k);
case 3:
return G__14550__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14550.cljs$core$IFn$_invoke$arity$2 = G__14550__2;
G__14550.cljs$core$IFn$_invoke$arity$3 = G__14550__3;
return G__14550;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args14547){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14547)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3811__auto__ = self__.front;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = self__.rear;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__14551 = (i + incr);
i = G__14551;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__14552 = (i + (1));
var G__14553 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__14552;
out = G__14553;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj14557 = {};
return obj14557;
})();
var l = ks.length;
var i_14558 = (0);
while(true){
if((i_14558 < l)){
var k_14559 = (ks[i_14558]);
(new_obj[k_14559] = (obj[k_14559]));

var G__14560 = (i_14558 + (1));
i_14558 = G__14560;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__14564 = k;
return goog.isString(G__14564);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__14565 = init__$1;
var G__14566 = k;
var G__14567 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14565,G__14566,G__14567) : f.call(null,G__14565,G__14566,G__14567));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14568 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14568) : cljs.core.deref.call(null,G__14568));
} else {
var G__14574 = cljs.core.rest(keys__$1);
var G__14575 = init__$2;
keys__$1 = G__14574;
init__$1 = G__14575;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__14570 = k;
return goog.isString(G__14570);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__14571 = k;
return goog.isString(G__14571);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__14573 = k;
return goog.isString(G__14573);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__14561_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__14561_SHARP_,(self__.strobj[p1__14561_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__14576 = null;
var G__14576__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14576__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14576 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14576__2.call(this,self__,k);
case 3:
return G__14576__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14576.cljs$core$IFn$_invoke$arity$2 = G__14576__2;
G__14576.cljs$core$IFn$_invoke$arity$3 = G__14576__3;
return G__14576;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args14562){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14562)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj14578 = {};
return obj14578;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__14579 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14579,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14579,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__14580 = (i + (2));
i = G__14580;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__14581 = (i + (2));
i = G__14581;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__14582 = (i + (2));
i = G__14582;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__14583 = (i + (2));
i = G__14583;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__14584 = (i + (2));
i = G__14584;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3811__auto__ = (function (){var G__14588 = k;
return goog.isString(G__14588);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_14589 = (0);
while(true){
if((i_14589 < l)){
(narr[i_14589] = (arr[i_14589]));

var G__14590 = (i_14589 + (1));
i_14589 = G__14590;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14592 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14592) : cljs.core.keys.call(null,G__14592));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14593 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14593) : cljs.core.vals.call(null,G__14593));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14594 = cljs.core.seq(coll);
var chunk__14595 = null;
var count__14596 = (0);
var i__14597 = (0);
while(true){
if((i__14597 < count__14596)){
var vec__14598 = chunk__14595.cljs$core$IIndexed$_nth$arity$2(null,i__14597);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14598,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14598,(1),null);
var G__14599_14612 = v;
var G__14600_14613 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14599_14612,G__14600_14613) : f.call(null,G__14599_14612,G__14600_14613));

var G__14614 = seq__14594;
var G__14615 = chunk__14595;
var G__14616 = count__14596;
var G__14617 = (i__14597 + (1));
seq__14594 = G__14614;
chunk__14595 = G__14615;
count__14596 = G__14616;
i__14597 = G__14617;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14594);
if(temp__4126__auto__){
var seq__14594__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14594__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__14594__$1);
var G__14618 = cljs.core.chunk_rest(seq__14594__$1);
var G__14619 = c__4598__auto__;
var G__14620 = cljs.core.count(c__4598__auto__);
var G__14621 = (0);
seq__14594 = G__14618;
chunk__14595 = G__14619;
count__14596 = G__14620;
i__14597 = G__14621;
continue;
} else {
var vec__14601 = cljs.core.first(seq__14594__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14601,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14601,(1),null);
var G__14602_14622 = v;
var G__14603_14623 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14602_14622,G__14603_14623) : f.call(null,G__14602_14622,G__14603_14623));

var G__14624 = cljs.core.next(seq__14594__$1);
var G__14625 = null;
var G__14626 = (0);
var G__14627 = (0);
seq__14594 = G__14624;
chunk__14595 = G__14625;
count__14596 = G__14626;
i__14597 = G__14627;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__14604 = init__$1;
var G__14605 = (self__.arr[i]);
var G__14606 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14604,G__14605,G__14606) : f.call(null,G__14604,G__14605,G__14606));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14607 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14607) : cljs.core.deref.call(null,G__14607));
} else {
var G__14628 = (i + (2));
var G__14629 = init__$2;
i = G__14628;
init__$1 = G__14629;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__14608 = other;
if(G__14608){
var bit__4485__auto__ = (G__14608.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4485__auto__) || (G__14608.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__14630 = (i + (2));
i = G__14630;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj14610 = {};
return obj14610;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__14631 = (s + (2));
var G__14632 = d;
s = G__14631;
d = G__14632;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__14633 = (s + (2));
var G__14634 = (d + (2));
s = G__14633;
d = G__14634;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__14611 = cljs.core.aclone(self__.arr);
(G__14611[(idx + (1))] = v);

return G__14611;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14635 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14636 = cljs.core.next(es);
ret = G__14635;
es = G__14636;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__14637 = null;
var G__14637__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14637__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14637 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14637__2.call(this,self__,k);
case 3:
return G__14637__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14637.cljs$core$IFn$_invoke$arity$2 = G__14637__2;
G__14637.cljs$core$IFn$_invoke$arity$3 = G__14637__3;
return G__14637;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args14591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14591)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14638 = (i + (2));
var G__14639 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__14638;
ret = G__14639;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__14640_14648 = self__.arr;
G__14640_14648.pop();

G__14640_14648.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__14641 = self__.len;
var G__14642 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__14641,G__14642) : cljs.core.array__GT_transient_hash_map.call(null,G__14641,G__14642));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__14643 = o;
if(G__14643){
var bit__4492__auto__ = (G__14643.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__14643.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14643.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14643);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__14644 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14644) : cljs.core.key.call(null,G__14644));
})(),(function (){var G__14645 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14645) : cljs.core.val.call(null,G__14645));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14649 = cljs.core.next(es);
var G__14650 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__14646 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14646) : cljs.core.key.call(null,G__14646));
})(),(function (){var G__14647 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14647) : cljs.core.val.call(null,G__14647));
})());
es = G__14649;
tcoll__$2 = G__14650;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__14651 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__14652 = (i + (2));
out = G__14651;
i = G__14652;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__14655 = cljs.core.aclone(arr);
(G__14655[i] = a);

return G__14655;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__14656 = cljs.core.aclone(arr);
(G__14656[i] = a);

(G__14656[j] = b);

return G__14656;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__14661 = init__$1;
var G__14662 = k;
var G__14663 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14661,G__14662,G__14663) : f.call(null,G__14661,G__14662,G__14663));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14664 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14664) : cljs.core.deref.call(null,G__14664));
} else {
var G__14665 = (i + (2));
var G__14666 = init__$2;
i = G__14665;
init__$1 = G__14666;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14667 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14667) : cljs.core.create_inode_seq.call(null,G__14667));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14681 = (0);
var j_14682 = (0);
while(true){
if((i_14681 < (32))){
if((((self__.bitmap >>> i_14681) & (1)) === (0))){
var G__14683 = (i_14681 + (1));
var G__14684 = j_14682;
i_14681 = G__14683;
j_14682 = G__14684;
continue;
} else {
(nodes[i_14681] = ((!(((self__.arr[j_14682]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_14682])),(self__.arr[j_14682]),(self__.arr[(j_14682 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14682 + (1))])));

var G__14685 = (i_14681 + (1));
var G__14686 = (j_14682 + (2));
i_14681 = G__14685;
j_14682 = G__14686;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14668 = edit__$1;
var G__14669 = (shift + (5));
var G__14670 = key_or_nil;
var G__14671 = val_or_node;
var G__14672 = hash;
var G__14673 = key;
var G__14674 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__14668,G__14669,G__14670,G__14671,G__14672,G__14673,G__14674) : cljs.core.create_node.call(null,G__14668,G__14669,G__14670,G__14671,G__14672,G__14673,G__14674));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14687 = (0);
var j_14688 = (0);
while(true){
if((i_14687 < (32))){
if((((self__.bitmap >>> i_14687) & (1)) === (0))){
var G__14689 = (i_14687 + (1));
var G__14690 = j_14688;
i_14687 = G__14689;
j_14688 = G__14690;
continue;
} else {
(nodes[i_14687] = ((!(((self__.arr[j_14688]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_14688])),(self__.arr[j_14688]),(self__.arr[(j_14688 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14688 + (1))])));

var G__14691 = (i_14687 + (1));
var G__14692 = (j_14688 + (2));
i_14687 = G__14691;
j_14688 = G__14692;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14675 = (shift + (5));
var G__14676 = key_or_nil;
var G__14677 = val_or_node;
var G__14678 = hash;
var G__14679 = key;
var G__14680 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14675,G__14676,G__14677,G__14678,G__14679,G__14680) : cljs.core.create_node.call(null,G__14675,G__14676,G__14677,G__14678,G__14679,G__14680));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__14693 = (i + (1));
var G__14694 = (j + (2));
var G__14695 = (bitmap | ((1) << i));
i = G__14693;
j = G__14694;
bitmap = G__14695;
continue;
} else {
var G__14696 = (i + (1));
var G__14697 = j;
var G__14698 = bitmap;
i = G__14696;
j = G__14697;
bitmap = G__14698;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14699 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14699) : cljs.core.create_array_node_seq.call(null,G__14699));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14700 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14700) : cljs.core.deref.call(null,G__14700));
} else {
var G__14701 = (i + (1));
var G__14702 = init__$2;
i = G__14701;
init__$1 = G__14702;
continue;
}
} else {
var G__14703 = (i + (1));
var G__14704 = init__$1;
i = G__14703;
init__$1 = G__14704;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__14705 = (i + (2));
i = G__14705;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14706 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14706) : cljs.core.create_inode_seq.call(null,G__14706));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__14707 = self__.nodes;
var G__14708 = (self__.i + (2));
var G__14709 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14707,G__14708,G__14709) : cljs.core.create_inode_seq.call(null,G__14707,G__14708,G__14709));
} else {
var G__14710 = self__.nodes;
var G__14711 = self__.i;
var G__14712 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14710,G__14711,G__14712) : cljs.core.create_inode_seq.call(null,G__14710,G__14711,G__14712));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__14716 = (j + (2));
j = G__14716;
continue;
}
} else {
var G__14717 = (j + (2));
j = G__14717;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__14718 = null;
var G__14719 = self__.nodes;
var G__14720 = self__.i;
var G__14721 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14718,G__14719,G__14720,G__14721) : cljs.core.create_array_node_seq.call(null,G__14718,G__14719,G__14720,G__14721));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__14726 = (j + (1));
j = G__14726;
continue;
}
} else {
var G__14727 = (j + (1));
j = G__14727;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14729 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14729) : cljs.core.keys.call(null,G__14729));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14730 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14730) : cljs.core.vals.call(null,G__14730));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14731 = cljs.core.seq(coll);
var chunk__14732 = null;
var count__14733 = (0);
var i__14734 = (0);
while(true){
if((i__14734 < count__14733)){
var vec__14735 = chunk__14732.cljs$core$IIndexed$_nth$arity$2(null,i__14734);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14735,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14735,(1),null);
var G__14736_14747 = v;
var G__14737_14748 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14736_14747,G__14737_14748) : f.call(null,G__14736_14747,G__14737_14748));

var G__14749 = seq__14731;
var G__14750 = chunk__14732;
var G__14751 = count__14733;
var G__14752 = (i__14734 + (1));
seq__14731 = G__14749;
chunk__14732 = G__14750;
count__14733 = G__14751;
i__14734 = G__14752;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14731);
if(temp__4126__auto__){
var seq__14731__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14731__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__14731__$1);
var G__14753 = cljs.core.chunk_rest(seq__14731__$1);
var G__14754 = c__4598__auto__;
var G__14755 = cljs.core.count(c__4598__auto__);
var G__14756 = (0);
seq__14731 = G__14753;
chunk__14732 = G__14754;
count__14733 = G__14755;
i__14734 = G__14756;
continue;
} else {
var vec__14738 = cljs.core.first(seq__14731__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14738,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14738,(1),null);
var G__14739_14757 = v;
var G__14740_14758 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14739_14757,G__14740_14758) : f.call(null,G__14739_14757,G__14740_14758));

var G__14759 = cljs.core.next(seq__14731__$1);
var G__14760 = null;
var G__14761 = (0);
var G__14762 = (0);
seq__14731 = G__14759;
chunk__14732 = G__14760;
count__14733 = G__14761;
i__14734 = G__14762;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__14741 = init;
var G__14742 = null;
var G__14743 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14741,G__14742,G__14743) : f.call(null,G__14741,G__14742,G__14743));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14744 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14744) : cljs.core.deref.call(null,G__14744));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj14746 = {};
return obj14746;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14763 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14764 = cljs.core.next(es);
ret = G__14763;
es = G__14764;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__14765 = null;
var G__14765__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14765__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14765 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14765__2.call(this,self__,k);
case 3:
return G__14765__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14765.cljs$core$IFn$_invoke$arity$2 = G__14765__2;
G__14765.cljs$core$IFn$_invoke$arity$3 = G__14765__3;
return G__14765;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args14728){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14728)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14766 = (i + (2));
var G__14767 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__14766;
ret = G__14767;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14768 = (i + (1));
var G__14769 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__14768;
out = G__14769;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__14770 = o;
if(G__14770){
var bit__4492__auto__ = (G__14770.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__14770.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14770);
}
})()){
return tcoll.assoc_BANG_((function (){var G__14771 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14771) : cljs.core.key.call(null,G__14771));
})(),(function (){var G__14772 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14772) : cljs.core.val.call(null,G__14772));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14775 = cljs.core.next(es);
var G__14776 = tcoll__$1.assoc_BANG_((function (){var G__14773 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14773) : cljs.core.key.call(null,G__14773));
})(),(function (){var G__14774 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14774) : cljs.core.val.call(null,G__14774));
})());
es = G__14775;
tcoll__$1 = G__14776;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__14777 = ((ascending_QMARK_)?t.left:t.right);
var G__14778 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__14777;
stack__$1 = G__14778;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14791 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14791) : cljs.core.deref.call(null,G__14791));
} else {
var init__$2 = (function (){var G__14792 = init__$1;
var G__14793 = node.key;
var G__14794 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14792,G__14793,G__14794) : f.call(null,G__14792,G__14793,G__14794));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14795 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14795) : cljs.core.deref.call(null,G__14795));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__14796 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14796) : cljs.core.deref.call(null,G__14796));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__14798 = null;
var G__14798__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14798__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14798 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14798__2.call(this,self__,k);
case 3:
return G__14798__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14798.cljs$core$IFn$_invoke$arity$2 = G__14798__2;
G__14798.cljs$core$IFn$_invoke$arity$3 = G__14798__3;
return G__14798;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args14797){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14797)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__14800 = null;
var G__14800__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14800__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14800 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14800__2.call(this,self__,k);
case 3:
return G__14800__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14800.cljs$core$IFn$_invoke$arity$2 = G__14800__2;
G__14800.cljs$core$IFn$_invoke$arity$3 = G__14800__3;
return G__14800;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args14799){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14799)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__14813 = k;
var G__14814 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14813,G__14814) : comp.call(null,G__14813,G__14814));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__14833 = k;
var G__14834 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14833,G__14834) : comp.call(null,G__14833,G__14834));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__14845 = k;
var G__14846 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14845,G__14846) : comp.call(null,G__14845,G__14846));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14848 = cljs.core.seq(coll);
var chunk__14849 = null;
var count__14850 = (0);
var i__14851 = (0);
while(true){
if((i__14851 < count__14850)){
var vec__14852 = chunk__14849.cljs$core$IIndexed$_nth$arity$2(null,i__14851);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14852,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14852,(1),null);
var G__14853_14865 = v;
var G__14854_14866 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14853_14865,G__14854_14866) : f.call(null,G__14853_14865,G__14854_14866));

var G__14867 = seq__14848;
var G__14868 = chunk__14849;
var G__14869 = count__14850;
var G__14870 = (i__14851 + (1));
seq__14848 = G__14867;
chunk__14849 = G__14868;
count__14850 = G__14869;
i__14851 = G__14870;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14848);
if(temp__4126__auto__){
var seq__14848__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14848__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__14848__$1);
var G__14871 = cljs.core.chunk_rest(seq__14848__$1);
var G__14872 = c__4598__auto__;
var G__14873 = cljs.core.count(c__4598__auto__);
var G__14874 = (0);
seq__14848 = G__14871;
chunk__14849 = G__14872;
count__14850 = G__14873;
i__14851 = G__14874;
continue;
} else {
var vec__14855 = cljs.core.first(seq__14848__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14855,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14855,(1),null);
var G__14856_14875 = v;
var G__14857_14876 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14856_14875,G__14857_14876) : f.call(null,G__14856_14875,G__14857_14876));

var G__14877 = cljs.core.next(seq__14848__$1);
var G__14878 = null;
var G__14879 = (0);
var G__14880 = (0);
seq__14848 = G__14877;
chunk__14849 = G__14878;
count__14850 = G__14879;
i__14851 = G__14880;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14858 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14858) : cljs.core.keys.call(null,G__14858));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14859 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14859) : cljs.core.vals.call(null,G__14859));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14860 = k;
var G__14861 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14860,G__14861) : self__.comp.call(null,G__14860,G__14861));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__14881 = t.left;
t = G__14881;
continue;
} else {
var G__14882 = t.right;
t = G__14882;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14883 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14884 = cljs.core.next(es);
ret = G__14883;
es = G__14884;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__14885 = null;
var G__14885__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14885__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14885 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14885__2.call(this,self__,k);
case 3:
return G__14885__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14885.cljs$core$IFn$_invoke$arity$2 = G__14885__2;
G__14885.cljs$core$IFn$_invoke$arity$3 = G__14885__3;
return G__14885;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args14847){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14847)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14862 = k;
var G__14863 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14862,G__14863) : self__.comp.call(null,G__14862,G__14863));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__14886 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14887 = t.left;
stack = G__14886;
t = G__14887;
continue;
} else {
var G__14888 = stack;
var G__14889 = t.right;
stack = G__14888;
t = G__14889;
continue;
}
} else {
if((c > (0))){
var G__14890 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14891 = t.right;
stack = G__14890;
t = G__14891;
continue;
} else {
var G__14892 = stack;
var G__14893 = t.left;
stack = G__14892;
t = G__14893;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__14864 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14864) : cljs.core.key.call(null,G__14864));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__14894 = cljs.core.nnext(in$);
var G__14895 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14894;
out = G__14895;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14896__i = 0, G__14896__a = new Array(arguments.length -  0);
while (G__14896__i < G__14896__a.length) {G__14896__a[G__14896__i] = arguments[G__14896__i + 0]; ++G__14896__i;}
  keyvals = new cljs.core.IndexedSeq(G__14896__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__14897){
var keyvals = cljs.core.seq(arglist__14897);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14898__i = 0, G__14898__a = new Array(arguments.length -  0);
while (G__14898__i < G__14898__a.length) {G__14898__a[G__14898__i] = arguments[G__14898__i + 0]; ++G__14898__i;}
  keyvals = new cljs.core.IndexedSeq(G__14898__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__14899){
var keyvals = cljs.core.seq(arglist__14899);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj14903 = {};
return obj14903;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__14904 = cljs.core.nnext(kvs);
kvs = G__14904;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14905__i = 0, G__14905__a = new Array(arguments.length -  0);
while (G__14905__i < G__14905__a.length) {G__14905__a[G__14905__i] = arguments[G__14905__i + 0]; ++G__14905__i;}
  keyvals = new cljs.core.IndexedSeq(G__14905__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__14906){
var keyvals = cljs.core.seq(arglist__14906);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__14907 = cljs.core.nnext(in$);
var G__14908 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14907;
out = G__14908;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14909__i = 0, G__14909__a = new Array(arguments.length -  0);
while (G__14909__i < G__14909__a.length) {G__14909__a[G__14909__i] = arguments[G__14909__i + 0]; ++G__14909__i;}
  keyvals = new cljs.core.IndexedSeq(G__14909__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__14910){
var keyvals = cljs.core.seq(arglist__14910);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__14911 = cljs.core.nnext(in$);
var G__14912 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14911;
out = G__14912;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__14913__i = 0, G__14913__a = new Array(arguments.length -  1);
while (G__14913__i < G__14913__a.length) {G__14913__a[G__14913__i] = arguments[G__14913__i + 1]; ++G__14913__i;}
  keyvals = new cljs.core.IndexedSeq(G__14913__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__14914){
var comparator = cljs.core.first(arglist__14914);
var keyvals = cljs.core.rest(arglist__14914);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14915 = self__.mseq;
if(G__14915){
var bit__4492__auto__ = (G__14915.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__14915.cljs$core$INext$)){
return true;
} else {
if((!G__14915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14915);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14916 = self__.mseq;
if(G__14916){
var bit__4492__auto__ = (G__14916.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__14916.cljs$core$INext$)){
return true;
} else {
if((!G__14916.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14916);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14916);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14917 = self__.mseq;
if(G__14917){
var bit__4492__auto__ = (G__14917.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__14917.cljs$core$INext$)){
return true;
} else {
if((!G__14917.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14917);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14917);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14918 = self__.mseq;
if(G__14918){
var bit__4492__auto__ = (G__14918.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__14918.cljs$core$INext$)){
return true;
} else {
if((!G__14918.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14918);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14918);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__14919_SHARP_,p2__14920_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = p1__14919_SHARP_;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__14920_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__14921__i = 0, G__14921__a = new Array(arguments.length -  0);
while (G__14921__i < G__14921__a.length) {G__14921__a[G__14921__i] = arguments[G__14921__i + 0]; ++G__14921__i;}
  maps = new cljs.core.IndexedSeq(G__14921__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__14922){
var maps = cljs.core.seq(arglist__14922);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14925 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14926 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14925,G__14926) : f.call(null,G__14925,G__14926));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3811__auto__ = m1;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__14927__i = 0, G__14927__a = new Array(arguments.length -  1);
while (G__14927__i < G__14927__a.length) {G__14927__a[G__14927__i] = arguments[G__14927__i + 1]; ++G__14927__i;}
  maps = new cljs.core.IndexedSeq(G__14927__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__14928){
var f = cljs.core.first(arglist__14928);
var maps = cljs.core.rest(arglist__14928);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__14929 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__14930 = cljs.core.next(keys);
ret = G__14929;
keys = G__14930;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14933 = cljs.core.seq(coll);
var chunk__14934 = null;
var count__14935 = (0);
var i__14936 = (0);
while(true){
if((i__14936 < count__14935)){
var vec__14937 = chunk__14934.cljs$core$IIndexed$_nth$arity$2(null,i__14936);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14937,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14937,(1),null);
var G__14938_14943 = v;
var G__14939_14944 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14938_14943,G__14939_14944) : f.call(null,G__14938_14943,G__14939_14944));

var G__14945 = seq__14933;
var G__14946 = chunk__14934;
var G__14947 = count__14935;
var G__14948 = (i__14936 + (1));
seq__14933 = G__14945;
chunk__14934 = G__14946;
count__14935 = G__14947;
i__14936 = G__14948;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14933);
if(temp__4126__auto__){
var seq__14933__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14933__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__14933__$1);
var G__14949 = cljs.core.chunk_rest(seq__14933__$1);
var G__14950 = c__4598__auto__;
var G__14951 = cljs.core.count(c__4598__auto__);
var G__14952 = (0);
seq__14933 = G__14949;
chunk__14934 = G__14950;
count__14935 = G__14951;
i__14936 = G__14952;
continue;
} else {
var vec__14940 = cljs.core.first(seq__14933__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14940,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14940,(1),null);
var G__14941_14953 = v;
var G__14942_14954 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14941_14953,G__14942_14954) : f.call(null,G__14941_14953,G__14942_14954));

var G__14955 = cljs.core.next(seq__14933__$1);
var G__14956 = null;
var G__14957 = (0);
var G__14958 = (0);
seq__14933 = G__14955;
chunk__14934 = G__14956;
count__14935 = G__14957;
i__14936 = G__14958;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14931_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14931_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__14959 = null;
var G__14959__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14959__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14959 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14959__2.call(this,self__,k);
case 3:
return G__14959__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14959.cljs$core$IFn$_invoke$arity$2 = G__14959__2;
G__14959.cljs$core$IFn$_invoke$arity$3 = G__14959__3;
return G__14959;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args14932){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14932)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14960 = (i + (1));
var G__14961 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__14960;
out = G__14961;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__14962 = (i + (1));
var G__14963 = cljs.core._conj_BANG_(out,(items[i]));
i = G__14962;
out = G__14963;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__14965 = null;
var G__14965__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__14965__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__14965 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14965__2.call(this,self__,k);
case 3:
return G__14965__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14965.cljs$core$IFn$_invoke$arity$2 = G__14965__2;
G__14965.cljs$core$IFn$_invoke$arity$3 = G__14965__3;
return G__14965;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args14964){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14964)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14968 = cljs.core.seq(coll);
var chunk__14969 = null;
var count__14970 = (0);
var i__14971 = (0);
while(true){
if((i__14971 < count__14970)){
var vec__14972 = chunk__14969.cljs$core$IIndexed$_nth$arity$2(null,i__14971);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14972,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14972,(1),null);
var G__14973_14978 = v;
var G__14974_14979 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14973_14978,G__14974_14979) : f.call(null,G__14973_14978,G__14974_14979));

var G__14980 = seq__14968;
var G__14981 = chunk__14969;
var G__14982 = count__14970;
var G__14983 = (i__14971 + (1));
seq__14968 = G__14980;
chunk__14969 = G__14981;
count__14970 = G__14982;
i__14971 = G__14983;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14968);
if(temp__4126__auto__){
var seq__14968__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14968__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__14968__$1);
var G__14984 = cljs.core.chunk_rest(seq__14968__$1);
var G__14985 = c__4598__auto__;
var G__14986 = cljs.core.count(c__4598__auto__);
var G__14987 = (0);
seq__14968 = G__14984;
chunk__14969 = G__14985;
count__14970 = G__14986;
i__14971 = G__14987;
continue;
} else {
var vec__14975 = cljs.core.first(seq__14968__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14975,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14975,(1),null);
var G__14976_14988 = v;
var G__14977_14989 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14976_14988,G__14977_14989) : f.call(null,G__14976_14988,G__14977_14989));

var G__14990 = cljs.core.next(seq__14968__$1);
var G__14991 = null;
var G__14992 = (0);
var G__14993 = (0);
seq__14968 = G__14990;
chunk__14969 = G__14991;
count__14970 = G__14992;
i__14971 = G__14993;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14966_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14966_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__14994 = null;
var G__14994__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14994__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14994 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14994__2.call(this,self__,k);
case 3:
return G__14994__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14994.cljs$core$IFn$_invoke$arity$2 = G__14994__2;
G__14994.cljs$core$IFn$_invoke$arity$3 = G__14994__3;
return G__14994;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args14967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14967)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4692__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4692__auto__.length)){
var G__14995 = (i + (1));
var G__14996 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__14995;
res = G__14996;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__14997 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__14998 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__14997;
out = G__14998;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__14999__delegate = function (keys){
return cljs.core.set(keys);
};
var G__14999 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15000__i = 0, G__15000__a = new Array(arguments.length -  0);
while (G__15000__i < G__15000__a.length) {G__15000__a[G__15000__i] = arguments[G__15000__i + 0]; ++G__15000__i;}
  keys = new cljs.core.IndexedSeq(G__15000__a,0);
} 
return G__14999__delegate.call(this,keys);};
G__14999.cljs$lang$maxFixedArity = 0;
G__14999.cljs$lang$applyTo = (function (arglist__15001){
var keys = cljs.core.seq(arglist__15001);
return G__14999__delegate(keys);
});
G__14999.cljs$core$IFn$_invoke$arity$variadic = G__14999__delegate;
return G__14999;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15002 = null;
if (arguments.length > 0) {
var G__15003__i = 0, G__15003__a = new Array(arguments.length -  0);
while (G__15003__i < G__15003__a.length) {G__15003__a[G__15003__i] = arguments[G__15003__i + 0]; ++G__15003__i;}
G__15002 = new cljs.core.IndexedSeq(G__15003__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15004__i = 0, G__15004__a = new Array(arguments.length -  0);
while (G__15004__i < G__15004__a.length) {G__15004__a[G__15004__i] = arguments[G__15004__i + 0]; ++G__15004__i;}
  keys = new cljs.core.IndexedSeq(G__15004__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15005){
var keys = cljs.core.seq(arglist__15005);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15006__i = 0, G__15006__a = new Array(arguments.length -  1);
while (G__15006__i < G__15006__a.length) {G__15006__a[G__15006__i] = arguments[G__15006__i + 1]; ++G__15006__i;}
  keys = new cljs.core.IndexedSeq(G__15006__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15007){
var comparator = cljs.core.first(arglist__15007);
var keys = cljs.core.rest(arglist__15007);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15008_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15008_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15008_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15009_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15009_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15009_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15030 = null;
var G__15030__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15030__1 = (function (result){
var G__15020 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15020) : rf.call(null,G__15020));
});
var G__15030__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15021 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15021) : cljs.core.deref.call(null,G__15021));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15022 = result;
var G__15023 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15022,G__15023) : rf.call(null,G__15022,G__15023));
}
});
G__15030 = function(result,input){
switch(arguments.length){
case 0:
return G__15030__0.call(this);
case 1:
return G__15030__1.call(this,result);
case 2:
return G__15030__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15030.cljs$core$IFn$_invoke$arity$0 = G__15030__0;
G__15030.cljs$core$IFn$_invoke$arity$1 = G__15030__1;
G__15030.cljs$core$IFn$_invoke$arity$2 = G__15030__2;
return G__15030;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15028,seen__$1){
while(true){
var vec__15029 = p__15028;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15029,(0),null);
var xs__$1 = vec__15029;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15031 = cljs.core.rest(s);
var G__15032 = seen__$1;
p__15028 = G__15031;
seen__$1 = G__15032;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15033 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15034 = cljs.core.next(s__$1);
ret = G__15033;
s__$1 = G__15034;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15036 = x;
if(G__15036){
var bit__4485__auto__ = (G__15036.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__15036.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15037 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15038 = cljs.core.next(ks);
var G__15039 = cljs.core.next(vs);
map = G__15037;
ks = G__15038;
vs = G__15039;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15050 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15050) : k.call(null,G__15050));
})() > (function (){var G__15051 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15051) : k.call(null,G__15051));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15052__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15040_SHARP_,p2__15041_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15040_SHARP_,p2__15041_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15052 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15053__i = 0, G__15053__a = new Array(arguments.length -  3);
while (G__15053__i < G__15053__a.length) {G__15053__a[G__15053__i] = arguments[G__15053__i + 3]; ++G__15053__i;}
  more = new cljs.core.IndexedSeq(G__15053__a,0);
} 
return G__15052__delegate.call(this,k,x,y,more);};
G__15052.cljs$lang$maxFixedArity = 3;
G__15052.cljs$lang$applyTo = (function (arglist__15054){
var k = cljs.core.first(arglist__15054);
arglist__15054 = cljs.core.next(arglist__15054);
var x = cljs.core.first(arglist__15054);
arglist__15054 = cljs.core.next(arglist__15054);
var y = cljs.core.first(arglist__15054);
var more = cljs.core.rest(arglist__15054);
return G__15052__delegate(k,x,y,more);
});
G__15052.cljs$core$IFn$_invoke$arity$variadic = G__15052__delegate;
return G__15052;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15055 = null;
if (arguments.length > 3) {
var G__15056__i = 0, G__15056__a = new Array(arguments.length -  3);
while (G__15056__i < G__15056__a.length) {G__15056__a[G__15056__i] = arguments[G__15056__i + 3]; ++G__15056__i;}
G__15055 = new cljs.core.IndexedSeq(G__15056__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15067 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15067) : k.call(null,G__15067));
})() < (function (){var G__15068 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15068) : k.call(null,G__15068));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15069__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15057_SHARP_,p2__15058_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15057_SHARP_,p2__15058_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15069 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15070__i = 0, G__15070__a = new Array(arguments.length -  3);
while (G__15070__i < G__15070__a.length) {G__15070__a[G__15070__i] = arguments[G__15070__i + 3]; ++G__15070__i;}
  more = new cljs.core.IndexedSeq(G__15070__a,0);
} 
return G__15069__delegate.call(this,k,x,y,more);};
G__15069.cljs$lang$maxFixedArity = 3;
G__15069.cljs$lang$applyTo = (function (arglist__15071){
var k = cljs.core.first(arglist__15071);
arglist__15071 = cljs.core.next(arglist__15071);
var x = cljs.core.first(arglist__15071);
arglist__15071 = cljs.core.next(arglist__15071);
var y = cljs.core.first(arglist__15071);
var more = cljs.core.rest(arglist__15071);
return G__15069__delegate(k,x,y,more);
});
G__15069.cljs$core$IFn$_invoke$arity$variadic = G__15069__delegate;
return G__15069;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15072 = null;
if (arguments.length > 3) {
var G__15073__i = 0, G__15073__a = new Array(arguments.length -  3);
while (G__15073__i < G__15073__a.length) {G__15073__a[G__15073__i] = arguments[G__15073__i + 3]; ++G__15073__i;}
G__15072 = new cljs.core.IndexedSeq(G__15073__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15090 = null;
var G__15090__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15090__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15085 = result;
var G__15086 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15085,G__15086) : rf.call(null,G__15085,G__15086));
})());
})());
var G__15087 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15087) : rf.call(null,G__15087));
});
var G__15090__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15088 = result;
var G__15089 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15088,G__15089) : rf.call(null,G__15088,G__15089));
} else {
return result;
}
});
G__15090 = function(result,input){
switch(arguments.length){
case 0:
return G__15090__0.call(this);
case 1:
return G__15090__1.call(this,result);
case 2:
return G__15090__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15090.cljs$core$IFn$_invoke$arity$0 = G__15090__0;
G__15090.cljs$core$IFn$_invoke$arity$1 = G__15090__1;
G__15090.cljs$core$IFn$_invoke$arity$2 = G__15090__2;
return G__15090;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15103 = null;
var G__15103__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15103__1 = (function (result){
var G__15098 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15098) : rf.call(null,G__15098));
});
var G__15103__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15099 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15099) : pred.call(null,G__15099));
})())){
var G__15100 = result;
var G__15101 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15100,G__15101) : rf.call(null,G__15100,G__15101));
} else {
return cljs.core.reduced(result);
}
});
G__15103 = function(result,input){
switch(arguments.length){
case 0:
return G__15103__0.call(this);
case 1:
return G__15103__1.call(this,result);
case 2:
return G__15103__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15103.cljs$core$IFn$_invoke$arity$0 = G__15103__0;
G__15103.cljs$core$IFn$_invoke$arity$1 = G__15103__1;
G__15103.cljs$core$IFn$_invoke$arity$2 = G__15103__2;
return G__15103;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15102 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15102) : pred.call(null,G__15102));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15108 = (function (){var G__15110 = cljs.core._entry_key(sc,e);
var G__15111 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15110,G__15111) : comp.call(null,G__15110,G__15111));
})();
var G__15109 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15108,G__15109) : test.call(null,G__15108,G__15109));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15115 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15115,(0),null);
var s = vec__15115;
if(cljs.core.truth_((function (){var G__15116 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15116) : include.call(null,G__15116));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15117 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15117,(0),null);
var s = vec__15117;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15121 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15121,(0),null);
var s = vec__15121;
if(cljs.core.truth_((function (){var G__15122 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15122) : include.call(null,G__15122));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15123 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15123,(0),null);
var s = vec__15123;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15124 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15124) : Math.ceil.call(null,G__15124));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15125 = ret;
var G__15126 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15125,G__15126) : f.call(null,G__15125,G__15126));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15127 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15127) : cljs.core.deref.call(null,G__15127));
} else {
var G__15128 = (i + self__.step);
var G__15129 = ret__$1;
i = G__15128;
ret = G__15129;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15147 = null;
var G__15147__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15147__1 = (function (result){
var G__15144 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15144) : rf.call(null,G__15144));
});
var G__15147__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15145 = result;
var G__15146 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15145,G__15146) : rf.call(null,G__15145,G__15146));
} else {
return result;
}
});
G__15147 = function(result,input){
switch(arguments.length){
case 0:
return G__15147__0.call(this);
case 1:
return G__15147__1.call(this,result);
case 2:
return G__15147__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15147.cljs$core$IFn$_invoke$arity$0 = G__15147__0;
G__15147.cljs$core$IFn$_invoke$arity$1 = G__15147__1;
G__15147.cljs$core$IFn$_invoke$arity$2 = G__15147__2;
return G__15147;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__15169 = null;
var G__15169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15169__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15160 = result;
var G__15161 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15160,G__15161) : rf.call(null,G__15160,G__15161));
})());
})());
var G__15162 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15162) : rf.call(null,G__15162));
});
var G__15169__2 = (function (result,input){
var pval = (function (){var G__15163 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15163) : cljs.core.deref.call(null,G__15163));
})();
var val = (function (){var G__15164 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15164) : f.call(null,G__15164));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15165 = result;
var G__15166 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15165,G__15166) : rf.call(null,G__15165,G__15166));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15169 = function(result,input){
switch(arguments.length){
case 0:
return G__15169__0.call(this);
case 1:
return G__15169__1.call(this,result);
case 2:
return G__15169__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15169.cljs$core$IFn$_invoke$arity$0 = G__15169__0;
G__15169.cljs$core$IFn$_invoke$arity$1 = G__15169__1;
G__15169.cljs$core$IFn$_invoke$arity$2 = G__15169__2;
return G__15169;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15167 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15167) : f.call(null,G__15167));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15148_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15168 = p1__15148_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15168) : f.call(null,G__15168));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15178 = init;
var G__15179 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15178,G__15179) : f.call(null,G__15178,G__15179));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15274 = null;
var G__15274__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15274__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15232 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15232) : f.call(null,G__15232));
})()],null));
});
var G__15274__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15233 = x;
var G__15234 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15233,G__15234) : f.call(null,G__15233,G__15234));
})()],null));
});
var G__15274__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15235 = x;
var G__15236 = y;
var G__15237 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15235,G__15236,G__15237) : f.call(null,G__15235,G__15236,G__15237));
})()],null));
});
var G__15274__4 = (function() { 
var G__15275__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15275 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15276__i = 0, G__15276__a = new Array(arguments.length -  3);
while (G__15276__i < G__15276__a.length) {G__15276__a[G__15276__i] = arguments[G__15276__i + 3]; ++G__15276__i;}
  args = new cljs.core.IndexedSeq(G__15276__a,0);
} 
return G__15275__delegate.call(this,x,y,z,args);};
G__15275.cljs$lang$maxFixedArity = 3;
G__15275.cljs$lang$applyTo = (function (arglist__15277){
var x = cljs.core.first(arglist__15277);
arglist__15277 = cljs.core.next(arglist__15277);
var y = cljs.core.first(arglist__15277);
arglist__15277 = cljs.core.next(arglist__15277);
var z = cljs.core.first(arglist__15277);
var args = cljs.core.rest(arglist__15277);
return G__15275__delegate(x,y,z,args);
});
G__15275.cljs$core$IFn$_invoke$arity$variadic = G__15275__delegate;
return G__15275;
})()
;
G__15274 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15274__0.call(this);
case 1:
return G__15274__1.call(this,x);
case 2:
return G__15274__2.call(this,x,y);
case 3:
return G__15274__3.call(this,x,y,z);
default:
var G__15278 = null;
if (arguments.length > 3) {
var G__15279__i = 0, G__15279__a = new Array(arguments.length -  3);
while (G__15279__i < G__15279__a.length) {G__15279__a[G__15279__i] = arguments[G__15279__i + 3]; ++G__15279__i;}
G__15278 = new cljs.core.IndexedSeq(G__15279__a,0);
}
return G__15274__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15274.cljs$lang$maxFixedArity = 3;
G__15274.cljs$lang$applyTo = G__15274__4.cljs$lang$applyTo;
G__15274.cljs$core$IFn$_invoke$arity$0 = G__15274__0;
G__15274.cljs$core$IFn$_invoke$arity$1 = G__15274__1;
G__15274.cljs$core$IFn$_invoke$arity$2 = G__15274__2;
G__15274.cljs$core$IFn$_invoke$arity$3 = G__15274__3;
G__15274.cljs$core$IFn$_invoke$arity$variadic = G__15274__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15274;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15280 = null;
var G__15280__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15280__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15238 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15238) : f.call(null,G__15238));
})(),(function (){var G__15239 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15239) : g.call(null,G__15239));
})()],null));
});
var G__15280__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15240 = x;
var G__15241 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15240,G__15241) : f.call(null,G__15240,G__15241));
})(),(function (){var G__15242 = x;
var G__15243 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15242,G__15243) : g.call(null,G__15242,G__15243));
})()],null));
});
var G__15280__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15244 = x;
var G__15245 = y;
var G__15246 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15244,G__15245,G__15246) : f.call(null,G__15244,G__15245,G__15246));
})(),(function (){var G__15247 = x;
var G__15248 = y;
var G__15249 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15247,G__15248,G__15249) : g.call(null,G__15247,G__15248,G__15249));
})()],null));
});
var G__15280__4 = (function() { 
var G__15281__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15282__i = 0, G__15282__a = new Array(arguments.length -  3);
while (G__15282__i < G__15282__a.length) {G__15282__a[G__15282__i] = arguments[G__15282__i + 3]; ++G__15282__i;}
  args = new cljs.core.IndexedSeq(G__15282__a,0);
} 
return G__15281__delegate.call(this,x,y,z,args);};
G__15281.cljs$lang$maxFixedArity = 3;
G__15281.cljs$lang$applyTo = (function (arglist__15283){
var x = cljs.core.first(arglist__15283);
arglist__15283 = cljs.core.next(arglist__15283);
var y = cljs.core.first(arglist__15283);
arglist__15283 = cljs.core.next(arglist__15283);
var z = cljs.core.first(arglist__15283);
var args = cljs.core.rest(arglist__15283);
return G__15281__delegate(x,y,z,args);
});
G__15281.cljs$core$IFn$_invoke$arity$variadic = G__15281__delegate;
return G__15281;
})()
;
G__15280 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15280__0.call(this);
case 1:
return G__15280__1.call(this,x);
case 2:
return G__15280__2.call(this,x,y);
case 3:
return G__15280__3.call(this,x,y,z);
default:
var G__15284 = null;
if (arguments.length > 3) {
var G__15285__i = 0, G__15285__a = new Array(arguments.length -  3);
while (G__15285__i < G__15285__a.length) {G__15285__a[G__15285__i] = arguments[G__15285__i + 3]; ++G__15285__i;}
G__15284 = new cljs.core.IndexedSeq(G__15285__a,0);
}
return G__15280__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15280.cljs$lang$maxFixedArity = 3;
G__15280.cljs$lang$applyTo = G__15280__4.cljs$lang$applyTo;
G__15280.cljs$core$IFn$_invoke$arity$0 = G__15280__0;
G__15280.cljs$core$IFn$_invoke$arity$1 = G__15280__1;
G__15280.cljs$core$IFn$_invoke$arity$2 = G__15280__2;
G__15280.cljs$core$IFn$_invoke$arity$3 = G__15280__3;
G__15280.cljs$core$IFn$_invoke$arity$variadic = G__15280__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15280;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15286 = null;
var G__15286__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15286__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15250 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15250) : f.call(null,G__15250));
})(),(function (){var G__15251 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15251) : g.call(null,G__15251));
})(),(function (){var G__15252 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15252) : h.call(null,G__15252));
})()],null));
});
var G__15286__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15253 = x;
var G__15254 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15253,G__15254) : f.call(null,G__15253,G__15254));
})(),(function (){var G__15255 = x;
var G__15256 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15255,G__15256) : g.call(null,G__15255,G__15256));
})(),(function (){var G__15257 = x;
var G__15258 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15257,G__15258) : h.call(null,G__15257,G__15258));
})()],null));
});
var G__15286__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15259 = x;
var G__15260 = y;
var G__15261 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15259,G__15260,G__15261) : f.call(null,G__15259,G__15260,G__15261));
})(),(function (){var G__15262 = x;
var G__15263 = y;
var G__15264 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15262,G__15263,G__15264) : g.call(null,G__15262,G__15263,G__15264));
})(),(function (){var G__15265 = x;
var G__15266 = y;
var G__15267 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15265,G__15266,G__15267) : h.call(null,G__15265,G__15266,G__15267));
})()],null));
});
var G__15286__4 = (function() { 
var G__15287__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15287 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15288__i = 0, G__15288__a = new Array(arguments.length -  3);
while (G__15288__i < G__15288__a.length) {G__15288__a[G__15288__i] = arguments[G__15288__i + 3]; ++G__15288__i;}
  args = new cljs.core.IndexedSeq(G__15288__a,0);
} 
return G__15287__delegate.call(this,x,y,z,args);};
G__15287.cljs$lang$maxFixedArity = 3;
G__15287.cljs$lang$applyTo = (function (arglist__15289){
var x = cljs.core.first(arglist__15289);
arglist__15289 = cljs.core.next(arglist__15289);
var y = cljs.core.first(arglist__15289);
arglist__15289 = cljs.core.next(arglist__15289);
var z = cljs.core.first(arglist__15289);
var args = cljs.core.rest(arglist__15289);
return G__15287__delegate(x,y,z,args);
});
G__15287.cljs$core$IFn$_invoke$arity$variadic = G__15287__delegate;
return G__15287;
})()
;
G__15286 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15286__0.call(this);
case 1:
return G__15286__1.call(this,x);
case 2:
return G__15286__2.call(this,x,y);
case 3:
return G__15286__3.call(this,x,y,z);
default:
var G__15290 = null;
if (arguments.length > 3) {
var G__15291__i = 0, G__15291__a = new Array(arguments.length -  3);
while (G__15291__i < G__15291__a.length) {G__15291__a[G__15291__i] = arguments[G__15291__i + 3]; ++G__15291__i;}
G__15290 = new cljs.core.IndexedSeq(G__15291__a,0);
}
return G__15286__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15286.cljs$lang$maxFixedArity = 3;
G__15286.cljs$lang$applyTo = G__15286__4.cljs$lang$applyTo;
G__15286.cljs$core$IFn$_invoke$arity$0 = G__15286__0;
G__15286.cljs$core$IFn$_invoke$arity$1 = G__15286__1;
G__15286.cljs$core$IFn$_invoke$arity$2 = G__15286__2;
G__15286.cljs$core$IFn$_invoke$arity$3 = G__15286__3;
G__15286.cljs$core$IFn$_invoke$arity$variadic = G__15286__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15286;
})()
});
var juxt__4 = (function() { 
var G__15292__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15293 = null;
var G__15293__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15180_SHARP_,p2__15181_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15180_SHARP_,(function (){return (p2__15181_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15181_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15181_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15293__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15182_SHARP_,p2__15183_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15182_SHARP_,(function (){var G__15268 = x;
return (p2__15183_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15183_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15268) : p2__15183_SHARP_.call(null,G__15268));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15293__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15184_SHARP_,p2__15185_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15184_SHARP_,(function (){var G__15269 = x;
var G__15270 = y;
return (p2__15185_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15185_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15269,G__15270) : p2__15185_SHARP_.call(null,G__15269,G__15270));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15293__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15186_SHARP_,p2__15187_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15186_SHARP_,(function (){var G__15271 = x;
var G__15272 = y;
var G__15273 = z;
return (p2__15187_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15187_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15271,G__15272,G__15273) : p2__15187_SHARP_.call(null,G__15271,G__15272,G__15273));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15293__4 = (function() { 
var G__15294__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15188_SHARP_,p2__15189_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15188_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15189_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15294 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15295__i = 0, G__15295__a = new Array(arguments.length -  3);
while (G__15295__i < G__15295__a.length) {G__15295__a[G__15295__i] = arguments[G__15295__i + 3]; ++G__15295__i;}
  args = new cljs.core.IndexedSeq(G__15295__a,0);
} 
return G__15294__delegate.call(this,x,y,z,args);};
G__15294.cljs$lang$maxFixedArity = 3;
G__15294.cljs$lang$applyTo = (function (arglist__15296){
var x = cljs.core.first(arglist__15296);
arglist__15296 = cljs.core.next(arglist__15296);
var y = cljs.core.first(arglist__15296);
arglist__15296 = cljs.core.next(arglist__15296);
var z = cljs.core.first(arglist__15296);
var args = cljs.core.rest(arglist__15296);
return G__15294__delegate(x,y,z,args);
});
G__15294.cljs$core$IFn$_invoke$arity$variadic = G__15294__delegate;
return G__15294;
})()
;
G__15293 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15293__0.call(this);
case 1:
return G__15293__1.call(this,x);
case 2:
return G__15293__2.call(this,x,y);
case 3:
return G__15293__3.call(this,x,y,z);
default:
var G__15297 = null;
if (arguments.length > 3) {
var G__15298__i = 0, G__15298__a = new Array(arguments.length -  3);
while (G__15298__i < G__15298__a.length) {G__15298__a[G__15298__i] = arguments[G__15298__i + 3]; ++G__15298__i;}
G__15297 = new cljs.core.IndexedSeq(G__15298__a,0);
}
return G__15293__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15293.cljs$lang$maxFixedArity = 3;
G__15293.cljs$lang$applyTo = G__15293__4.cljs$lang$applyTo;
G__15293.cljs$core$IFn$_invoke$arity$0 = G__15293__0;
G__15293.cljs$core$IFn$_invoke$arity$1 = G__15293__1;
G__15293.cljs$core$IFn$_invoke$arity$2 = G__15293__2;
G__15293.cljs$core$IFn$_invoke$arity$3 = G__15293__3;
G__15293.cljs$core$IFn$_invoke$arity$variadic = G__15293__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15293;
})()
;})(fs__$1))
};
var G__15292 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15299__i = 0, G__15299__a = new Array(arguments.length -  3);
while (G__15299__i < G__15299__a.length) {G__15299__a[G__15299__i] = arguments[G__15299__i + 3]; ++G__15299__i;}
  fs = new cljs.core.IndexedSeq(G__15299__a,0);
} 
return G__15292__delegate.call(this,f,g,h,fs);};
G__15292.cljs$lang$maxFixedArity = 3;
G__15292.cljs$lang$applyTo = (function (arglist__15300){
var f = cljs.core.first(arglist__15300);
arglist__15300 = cljs.core.next(arglist__15300);
var g = cljs.core.first(arglist__15300);
arglist__15300 = cljs.core.next(arglist__15300);
var h = cljs.core.first(arglist__15300);
var fs = cljs.core.rest(arglist__15300);
return G__15292__delegate(f,g,h,fs);
});
G__15292.cljs$core$IFn$_invoke$arity$variadic = G__15292__delegate;
return G__15292;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15301 = null;
if (arguments.length > 3) {
var G__15302__i = 0, G__15302__a = new Array(arguments.length -  3);
while (G__15302__i < G__15302__a.length) {G__15302__a[G__15302__i] = arguments[G__15302__i + 3]; ++G__15302__i;}
G__15301 = new cljs.core.IndexedSeq(G__15302__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15303 = cljs.core.next(coll);
coll = G__15303;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15304 = (n - (1));
var G__15305 = cljs.core.next(coll);
n = G__15304;
coll = G__15305;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15309 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15317 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__15318_15324 = cljs.core.first(coll);
var G__15319_15325 = writer;
var G__15320_15326 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15318_15324,G__15319_15325,G__15320_15326) : print_one.call(null,G__15318_15324,G__15319_15325,G__15320_15326));
} else {
}

var coll_15327__$1 = cljs.core.next(coll);
var n_15328 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15327__$1) && (((n_15328 == null)) || (!((n_15328 === (0)))))){
cljs.core._write(writer,sep);

var G__15321_15329 = cljs.core.first(coll_15327__$1);
var G__15322_15330 = writer;
var G__15323_15331 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15321_15329,G__15322_15330,G__15323_15331) : print_one.call(null,G__15321_15329,G__15322_15330,G__15323_15331));

var G__15332 = cljs.core.next(coll_15327__$1);
var G__15333 = (n_15328 - (1));
coll_15327__$1 = G__15332;
n_15328 = G__15333;
continue;
} else {
if((cljs.core.seq(coll_15327__$1)) && ((n_15328 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15317;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15338 = cljs.core.seq(ss);
var chunk__15339 = null;
var count__15340 = (0);
var i__15341 = (0);
while(true){
if((i__15341 < count__15340)){
var s = chunk__15339.cljs$core$IIndexed$_nth$arity$2(null,i__15341);
cljs.core._write(writer,s);

var G__15342 = seq__15338;
var G__15343 = chunk__15339;
var G__15344 = count__15340;
var G__15345 = (i__15341 + (1));
seq__15338 = G__15342;
chunk__15339 = G__15343;
count__15340 = G__15344;
i__15341 = G__15345;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15338);
if(temp__4126__auto__){
var seq__15338__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15338__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15338__$1);
var G__15346 = cljs.core.chunk_rest(seq__15338__$1);
var G__15347 = c__4598__auto__;
var G__15348 = cljs.core.count(c__4598__auto__);
var G__15349 = (0);
seq__15338 = G__15346;
chunk__15339 = G__15347;
count__15340 = G__15348;
i__15341 = G__15349;
continue;
} else {
var s = cljs.core.first(seq__15338__$1);
cljs.core._write(writer,s);

var G__15350 = cljs.core.next(seq__15338__$1);
var G__15351 = null;
var G__15352 = (0);
var G__15353 = (0);
seq__15338 = G__15350;
chunk__15339 = G__15351;
count__15340 = G__15352;
i__15341 = G__15353;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15354__i = 0, G__15354__a = new Array(arguments.length -  1);
while (G__15354__i < G__15354__a.length) {G__15354__a[G__15354__i] = arguments[G__15354__i + 1]; ++G__15354__i;}
  ss = new cljs.core.IndexedSeq(G__15354__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15355){
var writer = cljs.core.first(arglist__15355);
var ss = cljs.core.rest(arglist__15355);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15357 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15357;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15360 = "[\\\\\"\b\f\n\r\t]";
var G__15361 = "g";
return RegExp(G__15360,G__15361);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__15375 = obj;
if(G__15375){
var bit__4492__auto__ = (G__15375.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__15375.cljs$core$IMeta$)){
return true;
} else {
if((!G__15375.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15375);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15375);
}
})();
if(and__3799__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15376 = obj;
if(G__15376){
var bit__4485__auto__ = (G__15376.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4485__auto__) || (G__15376.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15377 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15378 = pr_writer;
var G__15379 = writer;
var G__15380 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15377,G__15378,G__15379,G__15380) : cljs.core.print_map.call(null,G__15377,G__15378,G__15379,G__15380));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15381 = obj;
return goog.isString(G__15381);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15383 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15383;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15382 = obj;
if(G__15382){
var bit__4492__auto__ = (G__15382.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4492__auto__) || (G__15382.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15382);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15388 = cljs.core.seq(cljs.core.next(objs));
var chunk__15389 = null;
var count__15390 = (0);
var i__15391 = (0);
while(true){
if((i__15391 < count__15390)){
var obj = chunk__15389.cljs$core$IIndexed$_nth$arity$2(null,i__15391);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15392 = seq__15388;
var G__15393 = chunk__15389;
var G__15394 = count__15390;
var G__15395 = (i__15391 + (1));
seq__15388 = G__15392;
chunk__15389 = G__15393;
count__15390 = G__15394;
i__15391 = G__15395;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15388);
if(temp__4126__auto__){
var seq__15388__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15388__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15388__$1);
var G__15396 = cljs.core.chunk_rest(seq__15388__$1);
var G__15397 = c__4598__auto__;
var G__15398 = cljs.core.count(c__4598__auto__);
var G__15399 = (0);
seq__15388 = G__15396;
chunk__15389 = G__15397;
count__15390 = G__15398;
i__15391 = G__15399;
continue;
} else {
var obj = cljs.core.first(seq__15388__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15400 = cljs.core.next(seq__15388__$1);
var G__15401 = null;
var G__15402 = (0);
var G__15403 = (0);
seq__15388 = G__15400;
chunk__15389 = G__15401;
count__15390 = G__15402;
i__15391 = G__15403;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15404__i = 0, G__15404__a = new Array(arguments.length -  0);
while (G__15404__i < G__15404__a.length) {G__15404__a[G__15404__i] = arguments[G__15404__i + 0]; ++G__15404__i;}
  objs = new cljs.core.IndexedSeq(G__15404__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15405){
var objs = cljs.core.seq(arglist__15405);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15406__i = 0, G__15406__a = new Array(arguments.length -  0);
while (G__15406__i < G__15406__a.length) {G__15406__a[G__15406__i] = arguments[G__15406__i + 0]; ++G__15406__i;}
  objs = new cljs.core.IndexedSeq(G__15406__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15407){
var objs = cljs.core.seq(arglist__15407);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15408__i = 0, G__15408__a = new Array(arguments.length -  0);
while (G__15408__i < G__15408__a.length) {G__15408__a[G__15408__i] = arguments[G__15408__i + 0]; ++G__15408__i;}
  objs = new cljs.core.IndexedSeq(G__15408__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15409){
var objs = cljs.core.seq(arglist__15409);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15410__i = 0, G__15410__a = new Array(arguments.length -  0);
while (G__15410__i < G__15410__a.length) {G__15410__a[G__15410__i] = arguments[G__15410__i + 0]; ++G__15410__i;}
  objs = new cljs.core.IndexedSeq(G__15410__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15411){
var objs = cljs.core.seq(arglist__15411);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15412__i = 0, G__15412__a = new Array(arguments.length -  0);
while (G__15412__i < G__15412__a.length) {G__15412__a[G__15412__i] = arguments[G__15412__i + 0]; ++G__15412__i;}
  objs = new cljs.core.IndexedSeq(G__15412__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15413){
var objs = cljs.core.seq(arglist__15413);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15414__i = 0, G__15414__a = new Array(arguments.length -  0);
while (G__15414__i < G__15414__a.length) {G__15414__a[G__15414__i] = arguments[G__15414__i + 0]; ++G__15414__i;}
  objs = new cljs.core.IndexedSeq(G__15414__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15415){
var objs = cljs.core.seq(arglist__15415);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15416__i = 0, G__15416__a = new Array(arguments.length -  0);
while (G__15416__i < G__15416__a.length) {G__15416__a[G__15416__i] = arguments[G__15416__i + 0]; ++G__15416__i;}
  objs = new cljs.core.IndexedSeq(G__15416__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15417){
var objs = cljs.core.seq(arglist__15417);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15418__i = 0, G__15418__a = new Array(arguments.length -  0);
while (G__15418__i < G__15418__a.length) {G__15418__a[G__15418__i] = arguments[G__15418__i + 0]; ++G__15418__i;}
  objs = new cljs.core.IndexedSeq(G__15418__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15419){
var objs = cljs.core.seq(arglist__15419);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15426_15432 = cljs.core.key(e);
var G__15427_15433 = w;
var G__15428_15434 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15426_15432,G__15427_15433,G__15428_15434) : print_one.call(null,G__15426_15432,G__15427_15433,G__15428_15434));

cljs.core._write(w," ");

var G__15429 = cljs.core.val(e);
var G__15430 = w;
var G__15431 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15429,G__15430,G__15431) : print_one.call(null,G__15429,G__15430,G__15431));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15435__i = 0, G__15435__a = new Array(arguments.length -  2);
while (G__15435__i < G__15435__a.length) {G__15435__a[G__15435__i] = arguments[G__15435__i + 2]; ++G__15435__i;}
  args = new cljs.core.IndexedSeq(G__15435__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15436){
var iref = cljs.core.first(arglist__15436);
arglist__15436 = cljs.core.next(arglist__15436);
var f = cljs.core.first(arglist__15436);
var args = cljs.core.rest(arglist__15436);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15439 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15439) : cljs.core.atom.call(null,G__15439));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15441 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15441) : cljs.core.deref.call(null,G__15441));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15442_SHARP_,p2__15443_SHARP_){
var ret = (function (){var G__15446 = p1__15442_SHARP_;
var G__15447 = p2__15443_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15446,G__15447) : rf.call(null,G__15446,G__15447));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15450 = null;
var G__15450__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15450__1 = (function (result){
var G__15449 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15449) : rf.call(null,G__15449));
});
var G__15450__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15450 = function(result,input){
switch(arguments.length){
case 0:
return G__15450__0.call(this);
case 1:
return G__15450__1.call(this,result);
case 2:
return G__15450__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15450.cljs$core$IFn$_invoke$arity$0 = G__15450__0;
G__15450.cljs$core$IFn$_invoke$arity$1 = G__15450__1;
G__15450.cljs$core$IFn$_invoke$arity$2 = G__15450__2;
return G__15450;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__15459 = null;
var G__15459__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15459__1 = (function (result){
var G__15455 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15455) : rf.call(null,G__15455));
});
var G__15459__2 = (function (result,input){
var prior = (function (){var G__15456 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15456) : cljs.core.deref.call(null,G__15456));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15457 = result;
var G__15458 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15457,G__15458) : rf.call(null,G__15457,G__15458));
}
});
G__15459 = function(result,input){
switch(arguments.length){
case 0:
return G__15459__0.call(this);
case 1:
return G__15459__1.call(this,result);
case 2:
return G__15459__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15459.cljs$core$IFn$_invoke$arity$0 = G__15459__0;
G__15459.cljs$core$IFn$_invoke$arity$1 = G__15459__1;
G__15459.cljs$core$IFn$_invoke$arity$2 = G__15459__2;
return G__15459;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15461_SHARP_,p2__15460_SHARP_){
var G__15463 = p2__15460_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15463) : proc.call(null,G__15463));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15465 = {};
return obj15465;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._clj__GT_js[(function (){var G__15469 = x__4455__auto__;
return goog.typeOf(G__15469);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._key__GT_js[(function (){var G__15473 = x__4455__auto__;
return goog.typeOf(G__15473);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15476 = k;
if(G__15476){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__15476.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15476.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15476);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15476);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15477 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15477) : cljs.core.clj__GT_js.call(null,G__15477));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15493 = x;
if(G__15493){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__15493.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15493.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15493);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15493);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15495 = {};
return obj15495;
})();
var seq__15496_15506 = cljs.core.seq(x);
var chunk__15497_15507 = null;
var count__15498_15508 = (0);
var i__15499_15509 = (0);
while(true){
if((i__15499_15509 < count__15498_15508)){
var vec__15500_15510 = chunk__15497_15507.cljs$core$IIndexed$_nth$arity$2(null,i__15499_15509);
var k_15511 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15500_15510,(0),null);
var v_15512 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15500_15510,(1),null);
(m[cljs.core.key__GT_js(k_15511)] = clj__GT_js(v_15512));

var G__15513 = seq__15496_15506;
var G__15514 = chunk__15497_15507;
var G__15515 = count__15498_15508;
var G__15516 = (i__15499_15509 + (1));
seq__15496_15506 = G__15513;
chunk__15497_15507 = G__15514;
count__15498_15508 = G__15515;
i__15499_15509 = G__15516;
continue;
} else {
var temp__4126__auto___15517 = cljs.core.seq(seq__15496_15506);
if(temp__4126__auto___15517){
var seq__15496_15518__$1 = temp__4126__auto___15517;
if(cljs.core.chunked_seq_QMARK_(seq__15496_15518__$1)){
var c__4598__auto___15519 = cljs.core.chunk_first(seq__15496_15518__$1);
var G__15520 = cljs.core.chunk_rest(seq__15496_15518__$1);
var G__15521 = c__4598__auto___15519;
var G__15522 = cljs.core.count(c__4598__auto___15519);
var G__15523 = (0);
seq__15496_15506 = G__15520;
chunk__15497_15507 = G__15521;
count__15498_15508 = G__15522;
i__15499_15509 = G__15523;
continue;
} else {
var vec__15501_15524 = cljs.core.first(seq__15496_15518__$1);
var k_15525 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15501_15524,(0),null);
var v_15526 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15501_15524,(1),null);
(m[cljs.core.key__GT_js(k_15525)] = clj__GT_js(v_15526));

var G__15527 = cljs.core.next(seq__15496_15518__$1);
var G__15528 = null;
var G__15529 = (0);
var G__15530 = (0);
seq__15496_15506 = G__15527;
chunk__15497_15507 = G__15528;
count__15498_15508 = G__15529;
i__15499_15509 = G__15530;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15502_15531 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15503_15532 = null;
var count__15504_15533 = (0);
var i__15505_15534 = (0);
while(true){
if((i__15505_15534 < count__15504_15533)){
var x_15535__$1 = chunk__15503_15532.cljs$core$IIndexed$_nth$arity$2(null,i__15505_15534);
arr.push(x_15535__$1);

var G__15536 = seq__15502_15531;
var G__15537 = chunk__15503_15532;
var G__15538 = count__15504_15533;
var G__15539 = (i__15505_15534 + (1));
seq__15502_15531 = G__15536;
chunk__15503_15532 = G__15537;
count__15504_15533 = G__15538;
i__15505_15534 = G__15539;
continue;
} else {
var temp__4126__auto___15540 = cljs.core.seq(seq__15502_15531);
if(temp__4126__auto___15540){
var seq__15502_15541__$1 = temp__4126__auto___15540;
if(cljs.core.chunked_seq_QMARK_(seq__15502_15541__$1)){
var c__4598__auto___15542 = cljs.core.chunk_first(seq__15502_15541__$1);
var G__15543 = cljs.core.chunk_rest(seq__15502_15541__$1);
var G__15544 = c__4598__auto___15542;
var G__15545 = cljs.core.count(c__4598__auto___15542);
var G__15546 = (0);
seq__15502_15531 = G__15543;
chunk__15503_15532 = G__15544;
count__15504_15533 = G__15545;
i__15505_15534 = G__15546;
continue;
} else {
var x_15547__$1 = cljs.core.first(seq__15502_15541__$1);
arr.push(x_15547__$1);

var G__15548 = cljs.core.next(seq__15502_15541__$1);
var G__15549 = null;
var G__15550 = (0);
var G__15551 = (0);
seq__15502_15531 = G__15548;
chunk__15503_15532 = G__15549;
count__15504_15533 = G__15550;
i__15505_15534 = G__15551;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj15553 = {};
return obj15553;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._js__GT_clj[(function (){var G__15557 = x__4455__auto__;
return goog.typeOf(G__15557);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__15614__delegate = function (x,opts){
var map__15587 = opts;
var map__15587__$1 = ((cljs.core.seq_QMARK_(map__15587))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15587):map__15587);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15587__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__15587,map__15587__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__15603 = x__$1;
if(G__15603){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__15603.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__15603.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15603);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15603);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4567__auto__ = ((function (map__15587,map__15587__$1,keywordize_keys,keyfn){
return (function iter__15604(s__15605){
return (new cljs.core.LazySeq(null,((function (map__15587,map__15587__$1,keywordize_keys,keyfn){
return (function (){
var s__15605__$1 = s__15605;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__15605__$1);
if(temp__4126__auto__){
var s__15605__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__15605__$2)){
var c__4565__auto__ = cljs.core.chunk_first(s__15605__$2);
var size__4566__auto__ = cljs.core.count(c__4565__auto__);
var b__15607 = cljs.core.chunk_buffer(size__4566__auto__);
if((function (){var i__15606 = (0);
while(true){
if((i__15606 < size__4566__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4565__auto__,i__15606);
cljs.core.chunk_append(b__15607,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15612 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15612) : keyfn.call(null,G__15612));
})(),thisfn((x__$1[k]))], null));

var G__15615 = (i__15606 + (1));
i__15606 = G__15615;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__15607),iter__15604(cljs.core.chunk_rest(s__15605__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__15607),null);
}
} else {
var k = cljs.core.first(s__15605__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15613 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15613) : keyfn.call(null,G__15613));
})(),thisfn((x__$1[k]))], null),iter__15604(cljs.core.rest(s__15605__$2)));
}
} else {
return null;
}
break;
}
});})(map__15587,map__15587__$1,keywordize_keys,keyfn))
,null,null));
});})(map__15587,map__15587__$1,keywordize_keys,keyfn))
;
return iter__4567__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__15587,map__15587__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__15614 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__15616__i = 0, G__15616__a = new Array(arguments.length -  1);
while (G__15616__i < G__15616__a.length) {G__15616__a[G__15616__i] = arguments[G__15616__i + 1]; ++G__15616__i;}
  opts = new cljs.core.IndexedSeq(G__15616__a,0);
} 
return G__15614__delegate.call(this,x,opts);};
G__15614.cljs$lang$maxFixedArity = 1;
G__15614.cljs$lang$applyTo = (function (arglist__15617){
var x = cljs.core.first(arglist__15617);
var opts = cljs.core.rest(arglist__15617);
return G__15614__delegate(x,opts);
});
G__15614.cljs$core$IFn$_invoke$arity$variadic = G__15614__delegate;
return G__15614;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__15618 = null;
if (arguments.length > 1) {
var G__15619__i = 0, G__15619__a = new Array(arguments.length -  1);
while (G__15619__i < G__15619__a.length) {G__15619__a[G__15619__i] = arguments[G__15619__i + 1]; ++G__15619__i;}
G__15618 = new cljs.core.IndexedSeq(G__15619__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__15622 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15622) : cljs.core.atom.call(null,G__15622));
})();
return ((function (mem){
return (function() { 
var G__15624__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__15623 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15623) : cljs.core.deref.call(null,G__15623));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__15624 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15625__i = 0, G__15625__a = new Array(arguments.length -  0);
while (G__15625__i < G__15625__a.length) {G__15625__a[G__15625__i] = arguments[G__15625__i + 0]; ++G__15625__i;}
  args = new cljs.core.IndexedSeq(G__15625__a,0);
} 
return G__15624__delegate.call(this,args);};
G__15624.cljs$lang$maxFixedArity = 0;
G__15624.cljs$lang$applyTo = (function (arglist__15626){
var args = cljs.core.seq(arglist__15626);
return G__15624__delegate(args);
});
G__15624.cljs$core$IFn$_invoke$arity$variadic = G__15624__delegate;
return G__15624;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__15628 = ret;
f = G__15628;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__15629__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__15629 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15630__i = 0, G__15630__a = new Array(arguments.length -  1);
while (G__15630__i < G__15630__a.length) {G__15630__a[G__15630__i] = arguments[G__15630__i + 1]; ++G__15630__i;}
  args = new cljs.core.IndexedSeq(G__15630__a,0);
} 
return G__15629__delegate.call(this,f,args);};
G__15629.cljs$lang$maxFixedArity = 1;
G__15629.cljs$lang$applyTo = (function (arglist__15631){
var f = cljs.core.first(arglist__15631);
var args = cljs.core.rest(arglist__15631);
return G__15629__delegate(f,args);
});
G__15629.cljs$core$IFn$_invoke$arity$variadic = G__15629__delegate;
return G__15629;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__15632 = null;
if (arguments.length > 1) {
var G__15633__i = 0, G__15633__a = new Array(arguments.length -  1);
while (G__15633__i < G__15633__a.length) {G__15633__a[G__15633__i] = arguments[G__15633__i + 1]; ++G__15633__i;}
G__15632 = new cljs.core.IndexedSeq(G__15633__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__15636 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15636) : Math.floor.call(null,G__15636));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__15638 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15638) : f.call(null,G__15638));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__15640 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15640) : cljs.core.atom.call(null,G__15640));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15641__i = 0, G__15641__a = new Array(arguments.length -  1);
while (G__15641__i < G__15641__a.length) {G__15641__a[G__15641__i] = arguments[G__15641__i + 1]; ++G__15641__i;}
  args = new cljs.core.IndexedSeq(G__15641__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__15642){
var f = cljs.core.first(arglist__15642);
var args = cljs.core.rest(arglist__15642);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15707 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15707) : cljs.core.deref.call(null,G__15707));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3811__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
var and__3799__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3799__auto__){
var and__3799__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3799__auto____$1){
var and__3799__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3799__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__15732 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__15730 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15730) : child.call(null,G__15730));
})(),(function (){var G__15731 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__15731) : parent.call(null,G__15731));
})());
var G__15733 = (i + (1));
ret = G__15732;
i = G__15733;
continue;
}
break;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__15737 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15737) : cljs.core.deref.call(null,G__15737));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__15741 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15741) : cljs.core.deref.call(null,G__15741));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__15745 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15745) : cljs.core.deref.call(null,G__15745));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__15754 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__15754) : targets.call(null,G__15754));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__15755 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__15755) : sources.call(null,G__15755));
})()));
});})(tp,td,ta))
;
var or__3811__auto__ = ((cljs.core.contains_QMARK_((function (){var G__15759 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15759) : tp.call(null,G__15759));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__15760 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15760) : ta.call(null,G__15760));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__15761 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15761) : ta.call(null,G__15761));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__15768 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15768) : parentMap.call(null,G__15768));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__15769 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15769) : parentMap.call(null,G__15769));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__15762_SHARP_){
return cljs.core.cons(cljs.core.first(p1__15762_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15762_SHARP_),cljs.core.second(p1__15762_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__15770 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15770) : parentMap.call(null,G__15770));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__15763_SHARP_,p2__15764_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__15763_SHARP_,p2__15764_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__15773 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15773) : cljs.core.deref.call(null,G__15773));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__15774 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15774) : cljs.core.deref.call(null,G__15774));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__15790 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15790) : cljs.core.deref.call(null,G__15790));
})().call(null,x);
var or__3811__auto__ = (cljs.core.truth_((function (){var and__3799__auto__ = xprefs;
if(cljs.core.truth_(and__3799__auto__)){
var G__15792 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15792) : xprefs.call(null,G__15792));
} else {
return and__3799__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__15793 = cljs.core.rest(ps);
ps = G__15793;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__15794 = cljs.core.rest(ps);
ps = G__15794;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3811__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__15808){
var vec__15809 = p__15808;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15809,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15809,(1),null);
var e = vec__15809;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15810 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15810) : cljs.core.deref.call(null,G__15810));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3811__auto__ = (be == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__15811 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15811) : cljs.core.deref.call(null,G__15811));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15812 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15812) : cljs.core.deref.call(null,G__15812));
})(),(function (){var G__15813 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15813) : cljs.core.deref.call(null,G__15813));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj15815 = {};
return obj15815;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._reset[(function (){var G__15819 = x__4455__auto__;
return goog.typeOf(G__15819);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._add_method[(function (){var G__15823 = x__4455__auto__;
return goog.typeOf(G__15823);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._remove_method[(function (){var G__15827 = x__4455__auto__;
return goog.typeOf(G__15827);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefer_method[(function (){var G__15831 = x__4455__auto__;
return goog.typeOf(G__15831);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._get_method[(function (){var G__15835 = x__4455__auto__;
return goog.typeOf(G__15835);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._get_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._methods[(function (){var G__15839 = x__4455__auto__;
return goog.typeOf(G__15839);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._methods["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefers[(function (){var G__15843 = x__4455__auto__;
return goog.typeOf(G__15843);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefers["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15845 = this$__$1;
return goog.getUid(G__15845);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15846 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15846) : cljs.core.deref.call(null,G__15846));
})(),(function (){var G__15847 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15847) : cljs.core.deref.call(null,G__15847));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__15848 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15848) : cljs.core.deref.call(null,G__15848));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__15849 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15849) : cljs.core.deref.call(null,G__15849));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15850 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15850) : cljs.core.deref.call(null,G__15850));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15851 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15851) : cljs.core.deref.call(null,G__15851));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__16692 = null;
var G__16692__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__16692__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15852 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15852) : self__.dispatch_fn.call(null,G__15852));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15853 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15853) : target_fn.call(null,G__15853));
});
var G__16692__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15854 = a;
var G__15855 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15854,G__15855) : self__.dispatch_fn.call(null,G__15854,G__15855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15856 = a;
var G__15857 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15856,G__15857) : target_fn.call(null,G__15856,G__15857));
});
var G__16692__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15858 = a;
var G__15859 = b;
var G__15860 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15858,G__15859,G__15860) : self__.dispatch_fn.call(null,G__15858,G__15859,G__15860));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15861 = a;
var G__15862 = b;
var G__15863 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15861,G__15862,G__15863) : target_fn.call(null,G__15861,G__15862,G__15863));
});
var G__16692__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15864 = a;
var G__15865 = b;
var G__15866 = c;
var G__15867 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15864,G__15865,G__15866,G__15867) : self__.dispatch_fn.call(null,G__15864,G__15865,G__15866,G__15867));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15868 = a;
var G__15869 = b;
var G__15870 = c;
var G__15871 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15868,G__15869,G__15870,G__15871) : target_fn.call(null,G__15868,G__15869,G__15870,G__15871));
});
var G__16692__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15872 = a;
var G__15873 = b;
var G__15874 = c;
var G__15875 = d;
var G__15876 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15872,G__15873,G__15874,G__15875,G__15876) : self__.dispatch_fn.call(null,G__15872,G__15873,G__15874,G__15875,G__15876));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15877 = a;
var G__15878 = b;
var G__15879 = c;
var G__15880 = d;
var G__15881 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15877,G__15878,G__15879,G__15880,G__15881) : target_fn.call(null,G__15877,G__15878,G__15879,G__15880,G__15881));
});
var G__16692__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15882 = a;
var G__15883 = b;
var G__15884 = c;
var G__15885 = d;
var G__15886 = e;
var G__15887 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15882,G__15883,G__15884,G__15885,G__15886,G__15887) : self__.dispatch_fn.call(null,G__15882,G__15883,G__15884,G__15885,G__15886,G__15887));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15888 = a;
var G__15889 = b;
var G__15890 = c;
var G__15891 = d;
var G__15892 = e;
var G__15893 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15888,G__15889,G__15890,G__15891,G__15892,G__15893) : target_fn.call(null,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893));
});
var G__16692__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15894 = a;
var G__15895 = b;
var G__15896 = c;
var G__15897 = d;
var G__15898 = e;
var G__15899 = f;
var G__15900 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15894,G__15895,G__15896,G__15897,G__15898,G__15899,G__15900) : self__.dispatch_fn.call(null,G__15894,G__15895,G__15896,G__15897,G__15898,G__15899,G__15900));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15901 = a;
var G__15902 = b;
var G__15903 = c;
var G__15904 = d;
var G__15905 = e;
var G__15906 = f;
var G__15907 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907) : target_fn.call(null,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907));
});
var G__16692__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15908 = a;
var G__15909 = b;
var G__15910 = c;
var G__15911 = d;
var G__15912 = e;
var G__15913 = f;
var G__15914 = g;
var G__15915 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914,G__15915) : self__.dispatch_fn.call(null,G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914,G__15915));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15916 = a;
var G__15917 = b;
var G__15918 = c;
var G__15919 = d;
var G__15920 = e;
var G__15921 = f;
var G__15922 = g;
var G__15923 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923) : target_fn.call(null,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923));
});
var G__16692__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15924 = a;
var G__15925 = b;
var G__15926 = c;
var G__15927 = d;
var G__15928 = e;
var G__15929 = f;
var G__15930 = g;
var G__15931 = h;
var G__15932 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15924,G__15925,G__15926,G__15927,G__15928,G__15929,G__15930,G__15931,G__15932) : self__.dispatch_fn.call(null,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929,G__15930,G__15931,G__15932));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15933 = a;
var G__15934 = b;
var G__15935 = c;
var G__15936 = d;
var G__15937 = e;
var G__15938 = f;
var G__15939 = g;
var G__15940 = h;
var G__15941 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941) : target_fn.call(null,G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941));
});
var G__16692__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15942 = a;
var G__15943 = b;
var G__15944 = c;
var G__15945 = d;
var G__15946 = e;
var G__15947 = f;
var G__15948 = g;
var G__15949 = h;
var G__15950 = i;
var G__15951 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15942,G__15943,G__15944,G__15945,G__15946,G__15947,G__15948,G__15949,G__15950,G__15951) : self__.dispatch_fn.call(null,G__15942,G__15943,G__15944,G__15945,G__15946,G__15947,G__15948,G__15949,G__15950,G__15951));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15952 = a;
var G__15953 = b;
var G__15954 = c;
var G__15955 = d;
var G__15956 = e;
var G__15957 = f;
var G__15958 = g;
var G__15959 = h;
var G__15960 = i;
var G__15961 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961) : target_fn.call(null,G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961));
});
var G__16692__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15962 = a;
var G__15963 = b;
var G__15964 = c;
var G__15965 = d;
var G__15966 = e;
var G__15967 = f;
var G__15968 = g;
var G__15969 = h;
var G__15970 = i;
var G__15971 = j;
var G__15972 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15962,G__15963,G__15964,G__15965,G__15966,G__15967,G__15968,G__15969,G__15970,G__15971,G__15972) : self__.dispatch_fn.call(null,G__15962,G__15963,G__15964,G__15965,G__15966,G__15967,G__15968,G__15969,G__15970,G__15971,G__15972));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15973 = a;
var G__15974 = b;
var G__15975 = c;
var G__15976 = d;
var G__15977 = e;
var G__15978 = f;
var G__15979 = g;
var G__15980 = h;
var G__15981 = i;
var G__15982 = j;
var G__15983 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15973,G__15974,G__15975,G__15976,G__15977,G__15978,G__15979,G__15980,G__15981,G__15982,G__15983) : target_fn.call(null,G__15973,G__15974,G__15975,G__15976,G__15977,G__15978,G__15979,G__15980,G__15981,G__15982,G__15983));
});
var G__16692__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15984 = a;
var G__15985 = b;
var G__15986 = c;
var G__15987 = d;
var G__15988 = e;
var G__15989 = f;
var G__15990 = g;
var G__15991 = h;
var G__15992 = i;
var G__15993 = j;
var G__15994 = k;
var G__15995 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15984,G__15985,G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995) : self__.dispatch_fn.call(null,G__15984,G__15985,G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15996 = a;
var G__15997 = b;
var G__15998 = c;
var G__15999 = d;
var G__16000 = e;
var G__16001 = f;
var G__16002 = g;
var G__16003 = h;
var G__16004 = i;
var G__16005 = j;
var G__16006 = k;
var G__16007 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006,G__16007) : target_fn.call(null,G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006,G__16007));
});
var G__16692__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16008 = a;
var G__16009 = b;
var G__16010 = c;
var G__16011 = d;
var G__16012 = e;
var G__16013 = f;
var G__16014 = g;
var G__16015 = h;
var G__16016 = i;
var G__16017 = j;
var G__16018 = k;
var G__16019 = l;
var G__16020 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020) : self__.dispatch_fn.call(null,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16021 = a;
var G__16022 = b;
var G__16023 = c;
var G__16024 = d;
var G__16025 = e;
var G__16026 = f;
var G__16027 = g;
var G__16028 = h;
var G__16029 = i;
var G__16030 = j;
var G__16031 = k;
var G__16032 = l;
var G__16033 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16021,G__16022,G__16023,G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031,G__16032,G__16033) : target_fn.call(null,G__16021,G__16022,G__16023,G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031,G__16032,G__16033));
});
var G__16692__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16034 = a;
var G__16035 = b;
var G__16036 = c;
var G__16037 = d;
var G__16038 = e;
var G__16039 = f;
var G__16040 = g;
var G__16041 = h;
var G__16042 = i;
var G__16043 = j;
var G__16044 = k;
var G__16045 = l;
var G__16046 = m;
var G__16047 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044,G__16045,G__16046,G__16047) : self__.dispatch_fn.call(null,G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044,G__16045,G__16046,G__16047));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16048 = a;
var G__16049 = b;
var G__16050 = c;
var G__16051 = d;
var G__16052 = e;
var G__16053 = f;
var G__16054 = g;
var G__16055 = h;
var G__16056 = i;
var G__16057 = j;
var G__16058 = k;
var G__16059 = l;
var G__16060 = m;
var G__16061 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16048,G__16049,G__16050,G__16051,G__16052,G__16053,G__16054,G__16055,G__16056,G__16057,G__16058,G__16059,G__16060,G__16061) : target_fn.call(null,G__16048,G__16049,G__16050,G__16051,G__16052,G__16053,G__16054,G__16055,G__16056,G__16057,G__16058,G__16059,G__16060,G__16061));
});
var G__16692__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16062 = a;
var G__16063 = b;
var G__16064 = c;
var G__16065 = d;
var G__16066 = e;
var G__16067 = f;
var G__16068 = g;
var G__16069 = h;
var G__16070 = i;
var G__16071 = j;
var G__16072 = k;
var G__16073 = l;
var G__16074 = m;
var G__16075 = n;
var G__16076 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069,G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076) : self__.dispatch_fn.call(null,G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069,G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16077 = a;
var G__16078 = b;
var G__16079 = c;
var G__16080 = d;
var G__16081 = e;
var G__16082 = f;
var G__16083 = g;
var G__16084 = h;
var G__16085 = i;
var G__16086 = j;
var G__16087 = k;
var G__16088 = l;
var G__16089 = m;
var G__16090 = n;
var G__16091 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083,G__16084,G__16085,G__16086,G__16087,G__16088,G__16089,G__16090,G__16091) : target_fn.call(null,G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083,G__16084,G__16085,G__16086,G__16087,G__16088,G__16089,G__16090,G__16091));
});
var G__16692__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16092 = a;
var G__16093 = b;
var G__16094 = c;
var G__16095 = d;
var G__16096 = e;
var G__16097 = f;
var G__16098 = g;
var G__16099 = h;
var G__16100 = i;
var G__16101 = j;
var G__16102 = k;
var G__16103 = l;
var G__16104 = m;
var G__16105 = n;
var G__16106 = o;
var G__16107 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098,G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107) : self__.dispatch_fn.call(null,G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098,G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16108 = a;
var G__16109 = b;
var G__16110 = c;
var G__16111 = d;
var G__16112 = e;
var G__16113 = f;
var G__16114 = g;
var G__16115 = h;
var G__16116 = i;
var G__16117 = j;
var G__16118 = k;
var G__16119 = l;
var G__16120 = m;
var G__16121 = n;
var G__16122 = o;
var G__16123 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16108,G__16109,G__16110,G__16111,G__16112,G__16113,G__16114,G__16115,G__16116,G__16117,G__16118,G__16119,G__16120,G__16121,G__16122,G__16123) : target_fn.call(null,G__16108,G__16109,G__16110,G__16111,G__16112,G__16113,G__16114,G__16115,G__16116,G__16117,G__16118,G__16119,G__16120,G__16121,G__16122,G__16123));
});
var G__16692__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16124 = a;
var G__16125 = b;
var G__16126 = c;
var G__16127 = d;
var G__16128 = e;
var G__16129 = f;
var G__16130 = g;
var G__16131 = h;
var G__16132 = i;
var G__16133 = j;
var G__16134 = k;
var G__16135 = l;
var G__16136 = m;
var G__16137 = n;
var G__16138 = o;
var G__16139 = p;
var G__16140 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16124,G__16125,G__16126,G__16127,G__16128,G__16129,G__16130,G__16131,G__16132,G__16133,G__16134,G__16135,G__16136,G__16137,G__16138,G__16139,G__16140) : self__.dispatch_fn.call(null,G__16124,G__16125,G__16126,G__16127,G__16128,G__16129,G__16130,G__16131,G__16132,G__16133,G__16134,G__16135,G__16136,G__16137,G__16138,G__16139,G__16140));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16141 = a;
var G__16142 = b;
var G__16143 = c;
var G__16144 = d;
var G__16145 = e;
var G__16146 = f;
var G__16147 = g;
var G__16148 = h;
var G__16149 = i;
var G__16150 = j;
var G__16151 = k;
var G__16152 = l;
var G__16153 = m;
var G__16154 = n;
var G__16155 = o;
var G__16156 = p;
var G__16157 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16141,G__16142,G__16143,G__16144,G__16145,G__16146,G__16147,G__16148,G__16149,G__16150,G__16151,G__16152,G__16153,G__16154,G__16155,G__16156,G__16157) : target_fn.call(null,G__16141,G__16142,G__16143,G__16144,G__16145,G__16146,G__16147,G__16148,G__16149,G__16150,G__16151,G__16152,G__16153,G__16154,G__16155,G__16156,G__16157));
});
var G__16692__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16158 = a;
var G__16159 = b;
var G__16160 = c;
var G__16161 = d;
var G__16162 = e;
var G__16163 = f;
var G__16164 = g;
var G__16165 = h;
var G__16166 = i;
var G__16167 = j;
var G__16168 = k;
var G__16169 = l;
var G__16170 = m;
var G__16171 = n;
var G__16172 = o;
var G__16173 = p;
var G__16174 = q;
var G__16175 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16158,G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165,G__16166,G__16167,G__16168,G__16169,G__16170,G__16171,G__16172,G__16173,G__16174,G__16175) : self__.dispatch_fn.call(null,G__16158,G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165,G__16166,G__16167,G__16168,G__16169,G__16170,G__16171,G__16172,G__16173,G__16174,G__16175));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16176 = a;
var G__16177 = b;
var G__16178 = c;
var G__16179 = d;
var G__16180 = e;
var G__16181 = f;
var G__16182 = g;
var G__16183 = h;
var G__16184 = i;
var G__16185 = j;
var G__16186 = k;
var G__16187 = l;
var G__16188 = m;
var G__16189 = n;
var G__16190 = o;
var G__16191 = p;
var G__16192 = q;
var G__16193 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16176,G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188,G__16189,G__16190,G__16191,G__16192,G__16193) : target_fn.call(null,G__16176,G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188,G__16189,G__16190,G__16191,G__16192,G__16193));
});
var G__16692__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16194 = a;
var G__16195 = b;
var G__16196 = c;
var G__16197 = d;
var G__16198 = e;
var G__16199 = f;
var G__16200 = g;
var G__16201 = h;
var G__16202 = i;
var G__16203 = j;
var G__16204 = k;
var G__16205 = l;
var G__16206 = m;
var G__16207 = n;
var G__16208 = o;
var G__16209 = p;
var G__16210 = q;
var G__16211 = r;
var G__16212 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210,G__16211,G__16212) : self__.dispatch_fn.call(null,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210,G__16211,G__16212));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16213 = a;
var G__16214 = b;
var G__16215 = c;
var G__16216 = d;
var G__16217 = e;
var G__16218 = f;
var G__16219 = g;
var G__16220 = h;
var G__16221 = i;
var G__16222 = j;
var G__16223 = k;
var G__16224 = l;
var G__16225 = m;
var G__16226 = n;
var G__16227 = o;
var G__16228 = p;
var G__16229 = q;
var G__16230 = r;
var G__16231 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219,G__16220,G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230,G__16231) : target_fn.call(null,G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219,G__16220,G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230,G__16231));
});
var G__16692__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16232 = a;
var G__16233 = b;
var G__16234 = c;
var G__16235 = d;
var G__16236 = e;
var G__16237 = f;
var G__16238 = g;
var G__16239 = h;
var G__16240 = i;
var G__16241 = j;
var G__16242 = k;
var G__16243 = l;
var G__16244 = m;
var G__16245 = n;
var G__16246 = o;
var G__16247 = p;
var G__16248 = q;
var G__16249 = r;
var G__16250 = s;
var G__16251 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241,G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251) : self__.dispatch_fn.call(null,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241,G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16252 = a;
var G__16253 = b;
var G__16254 = c;
var G__16255 = d;
var G__16256 = e;
var G__16257 = f;
var G__16258 = g;
var G__16259 = h;
var G__16260 = i;
var G__16261 = j;
var G__16262 = k;
var G__16263 = l;
var G__16264 = m;
var G__16265 = n;
var G__16266 = o;
var G__16267 = p;
var G__16268 = q;
var G__16269 = r;
var G__16270 = s;
var G__16271 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16252,G__16253,G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271) : target_fn.call(null,G__16252,G__16253,G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271));
});
var G__16692__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__16692 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__16692__1.call(this,self__);
case 2:
return G__16692__2.call(this,self__,a);
case 3:
return G__16692__3.call(this,self__,a,b);
case 4:
return G__16692__4.call(this,self__,a,b,c);
case 5:
return G__16692__5.call(this,self__,a,b,c,d);
case 6:
return G__16692__6.call(this,self__,a,b,c,d,e);
case 7:
return G__16692__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__16692__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__16692__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__16692__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__16692__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__16692__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__16692__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__16692__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__16692__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__16692__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__16692__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__16692__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__16692__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__16692__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__16692__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__16692__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16692.cljs$core$IFn$_invoke$arity$1 = G__16692__1;
G__16692.cljs$core$IFn$_invoke$arity$2 = G__16692__2;
G__16692.cljs$core$IFn$_invoke$arity$3 = G__16692__3;
G__16692.cljs$core$IFn$_invoke$arity$4 = G__16692__4;
G__16692.cljs$core$IFn$_invoke$arity$5 = G__16692__5;
G__16692.cljs$core$IFn$_invoke$arity$6 = G__16692__6;
G__16692.cljs$core$IFn$_invoke$arity$7 = G__16692__7;
G__16692.cljs$core$IFn$_invoke$arity$8 = G__16692__8;
G__16692.cljs$core$IFn$_invoke$arity$9 = G__16692__9;
G__16692.cljs$core$IFn$_invoke$arity$10 = G__16692__10;
G__16692.cljs$core$IFn$_invoke$arity$11 = G__16692__11;
G__16692.cljs$core$IFn$_invoke$arity$12 = G__16692__12;
G__16692.cljs$core$IFn$_invoke$arity$13 = G__16692__13;
G__16692.cljs$core$IFn$_invoke$arity$14 = G__16692__14;
G__16692.cljs$core$IFn$_invoke$arity$15 = G__16692__15;
G__16692.cljs$core$IFn$_invoke$arity$16 = G__16692__16;
G__16692.cljs$core$IFn$_invoke$arity$17 = G__16692__17;
G__16692.cljs$core$IFn$_invoke$arity$18 = G__16692__18;
G__16692.cljs$core$IFn$_invoke$arity$19 = G__16692__19;
G__16692.cljs$core$IFn$_invoke$arity$20 = G__16692__20;
G__16692.cljs$core$IFn$_invoke$arity$21 = G__16692__21;
G__16692.cljs$core$IFn$_invoke$arity$22 = G__16692__22;
return G__16692;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args15844){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15844)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16272 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16272) : self__.dispatch_fn.call(null,G__16272));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16273 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16273) : target_fn.call(null,G__16273));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16274 = a;
var G__16275 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16274,G__16275) : self__.dispatch_fn.call(null,G__16274,G__16275));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16276 = a;
var G__16277 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16276,G__16277) : target_fn.call(null,G__16276,G__16277));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16278 = a;
var G__16279 = b;
var G__16280 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16278,G__16279,G__16280) : self__.dispatch_fn.call(null,G__16278,G__16279,G__16280));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16281 = a;
var G__16282 = b;
var G__16283 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16281,G__16282,G__16283) : target_fn.call(null,G__16281,G__16282,G__16283));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16284 = a;
var G__16285 = b;
var G__16286 = c;
var G__16287 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16284,G__16285,G__16286,G__16287) : self__.dispatch_fn.call(null,G__16284,G__16285,G__16286,G__16287));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16288 = a;
var G__16289 = b;
var G__16290 = c;
var G__16291 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16288,G__16289,G__16290,G__16291) : target_fn.call(null,G__16288,G__16289,G__16290,G__16291));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16292 = a;
var G__16293 = b;
var G__16294 = c;
var G__16295 = d;
var G__16296 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16292,G__16293,G__16294,G__16295,G__16296) : self__.dispatch_fn.call(null,G__16292,G__16293,G__16294,G__16295,G__16296));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16297 = a;
var G__16298 = b;
var G__16299 = c;
var G__16300 = d;
var G__16301 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16297,G__16298,G__16299,G__16300,G__16301) : target_fn.call(null,G__16297,G__16298,G__16299,G__16300,G__16301));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16302 = a;
var G__16303 = b;
var G__16304 = c;
var G__16305 = d;
var G__16306 = e;
var G__16307 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16302,G__16303,G__16304,G__16305,G__16306,G__16307) : self__.dispatch_fn.call(null,G__16302,G__16303,G__16304,G__16305,G__16306,G__16307));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16308 = a;
var G__16309 = b;
var G__16310 = c;
var G__16311 = d;
var G__16312 = e;
var G__16313 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16308,G__16309,G__16310,G__16311,G__16312,G__16313) : target_fn.call(null,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16314 = a;
var G__16315 = b;
var G__16316 = c;
var G__16317 = d;
var G__16318 = e;
var G__16319 = f;
var G__16320 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16314,G__16315,G__16316,G__16317,G__16318,G__16319,G__16320) : self__.dispatch_fn.call(null,G__16314,G__16315,G__16316,G__16317,G__16318,G__16319,G__16320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16321 = a;
var G__16322 = b;
var G__16323 = c;
var G__16324 = d;
var G__16325 = e;
var G__16326 = f;
var G__16327 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327) : target_fn.call(null,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16328 = a;
var G__16329 = b;
var G__16330 = c;
var G__16331 = d;
var G__16332 = e;
var G__16333 = f;
var G__16334 = g;
var G__16335 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16328,G__16329,G__16330,G__16331,G__16332,G__16333,G__16334,G__16335) : self__.dispatch_fn.call(null,G__16328,G__16329,G__16330,G__16331,G__16332,G__16333,G__16334,G__16335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16336 = a;
var G__16337 = b;
var G__16338 = c;
var G__16339 = d;
var G__16340 = e;
var G__16341 = f;
var G__16342 = g;
var G__16343 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343) : target_fn.call(null,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16344 = a;
var G__16345 = b;
var G__16346 = c;
var G__16347 = d;
var G__16348 = e;
var G__16349 = f;
var G__16350 = g;
var G__16351 = h;
var G__16352 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16344,G__16345,G__16346,G__16347,G__16348,G__16349,G__16350,G__16351,G__16352) : self__.dispatch_fn.call(null,G__16344,G__16345,G__16346,G__16347,G__16348,G__16349,G__16350,G__16351,G__16352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16353 = a;
var G__16354 = b;
var G__16355 = c;
var G__16356 = d;
var G__16357 = e;
var G__16358 = f;
var G__16359 = g;
var G__16360 = h;
var G__16361 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361) : target_fn.call(null,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16362 = a;
var G__16363 = b;
var G__16364 = c;
var G__16365 = d;
var G__16366 = e;
var G__16367 = f;
var G__16368 = g;
var G__16369 = h;
var G__16370 = i;
var G__16371 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16362,G__16363,G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371) : self__.dispatch_fn.call(null,G__16362,G__16363,G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16372 = a;
var G__16373 = b;
var G__16374 = c;
var G__16375 = d;
var G__16376 = e;
var G__16377 = f;
var G__16378 = g;
var G__16379 = h;
var G__16380 = i;
var G__16381 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381) : target_fn.call(null,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16382 = a;
var G__16383 = b;
var G__16384 = c;
var G__16385 = d;
var G__16386 = e;
var G__16387 = f;
var G__16388 = g;
var G__16389 = h;
var G__16390 = i;
var G__16391 = j;
var G__16392 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392) : self__.dispatch_fn.call(null,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16393 = a;
var G__16394 = b;
var G__16395 = c;
var G__16396 = d;
var G__16397 = e;
var G__16398 = f;
var G__16399 = g;
var G__16400 = h;
var G__16401 = i;
var G__16402 = j;
var G__16403 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403) : target_fn.call(null,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16404 = a;
var G__16405 = b;
var G__16406 = c;
var G__16407 = d;
var G__16408 = e;
var G__16409 = f;
var G__16410 = g;
var G__16411 = h;
var G__16412 = i;
var G__16413 = j;
var G__16414 = k;
var G__16415 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415) : self__.dispatch_fn.call(null,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16416 = a;
var G__16417 = b;
var G__16418 = c;
var G__16419 = d;
var G__16420 = e;
var G__16421 = f;
var G__16422 = g;
var G__16423 = h;
var G__16424 = i;
var G__16425 = j;
var G__16426 = k;
var G__16427 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427) : target_fn.call(null,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16428 = a;
var G__16429 = b;
var G__16430 = c;
var G__16431 = d;
var G__16432 = e;
var G__16433 = f;
var G__16434 = g;
var G__16435 = h;
var G__16436 = i;
var G__16437 = j;
var G__16438 = k;
var G__16439 = l;
var G__16440 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440) : self__.dispatch_fn.call(null,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16441 = a;
var G__16442 = b;
var G__16443 = c;
var G__16444 = d;
var G__16445 = e;
var G__16446 = f;
var G__16447 = g;
var G__16448 = h;
var G__16449 = i;
var G__16450 = j;
var G__16451 = k;
var G__16452 = l;
var G__16453 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453) : target_fn.call(null,G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16454 = a;
var G__16455 = b;
var G__16456 = c;
var G__16457 = d;
var G__16458 = e;
var G__16459 = f;
var G__16460 = g;
var G__16461 = h;
var G__16462 = i;
var G__16463 = j;
var G__16464 = k;
var G__16465 = l;
var G__16466 = m;
var G__16467 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467) : self__.dispatch_fn.call(null,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16468 = a;
var G__16469 = b;
var G__16470 = c;
var G__16471 = d;
var G__16472 = e;
var G__16473 = f;
var G__16474 = g;
var G__16475 = h;
var G__16476 = i;
var G__16477 = j;
var G__16478 = k;
var G__16479 = l;
var G__16480 = m;
var G__16481 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481) : target_fn.call(null,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16482 = a;
var G__16483 = b;
var G__16484 = c;
var G__16485 = d;
var G__16486 = e;
var G__16487 = f;
var G__16488 = g;
var G__16489 = h;
var G__16490 = i;
var G__16491 = j;
var G__16492 = k;
var G__16493 = l;
var G__16494 = m;
var G__16495 = n;
var G__16496 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496) : self__.dispatch_fn.call(null,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16497 = a;
var G__16498 = b;
var G__16499 = c;
var G__16500 = d;
var G__16501 = e;
var G__16502 = f;
var G__16503 = g;
var G__16504 = h;
var G__16505 = i;
var G__16506 = j;
var G__16507 = k;
var G__16508 = l;
var G__16509 = m;
var G__16510 = n;
var G__16511 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16497,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511) : target_fn.call(null,G__16497,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16512 = a;
var G__16513 = b;
var G__16514 = c;
var G__16515 = d;
var G__16516 = e;
var G__16517 = f;
var G__16518 = g;
var G__16519 = h;
var G__16520 = i;
var G__16521 = j;
var G__16522 = k;
var G__16523 = l;
var G__16524 = m;
var G__16525 = n;
var G__16526 = o;
var G__16527 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527) : self__.dispatch_fn.call(null,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16528 = a;
var G__16529 = b;
var G__16530 = c;
var G__16531 = d;
var G__16532 = e;
var G__16533 = f;
var G__16534 = g;
var G__16535 = h;
var G__16536 = i;
var G__16537 = j;
var G__16538 = k;
var G__16539 = l;
var G__16540 = m;
var G__16541 = n;
var G__16542 = o;
var G__16543 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542,G__16543) : target_fn.call(null,G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542,G__16543));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16544 = a;
var G__16545 = b;
var G__16546 = c;
var G__16547 = d;
var G__16548 = e;
var G__16549 = f;
var G__16550 = g;
var G__16551 = h;
var G__16552 = i;
var G__16553 = j;
var G__16554 = k;
var G__16555 = l;
var G__16556 = m;
var G__16557 = n;
var G__16558 = o;
var G__16559 = p;
var G__16560 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560) : self__.dispatch_fn.call(null,G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16561 = a;
var G__16562 = b;
var G__16563 = c;
var G__16564 = d;
var G__16565 = e;
var G__16566 = f;
var G__16567 = g;
var G__16568 = h;
var G__16569 = i;
var G__16570 = j;
var G__16571 = k;
var G__16572 = l;
var G__16573 = m;
var G__16574 = n;
var G__16575 = o;
var G__16576 = p;
var G__16577 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16561,G__16562,G__16563,G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577) : target_fn.call(null,G__16561,G__16562,G__16563,G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16578 = a;
var G__16579 = b;
var G__16580 = c;
var G__16581 = d;
var G__16582 = e;
var G__16583 = f;
var G__16584 = g;
var G__16585 = h;
var G__16586 = i;
var G__16587 = j;
var G__16588 = k;
var G__16589 = l;
var G__16590 = m;
var G__16591 = n;
var G__16592 = o;
var G__16593 = p;
var G__16594 = q;
var G__16595 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595) : self__.dispatch_fn.call(null,G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16596 = a;
var G__16597 = b;
var G__16598 = c;
var G__16599 = d;
var G__16600 = e;
var G__16601 = f;
var G__16602 = g;
var G__16603 = h;
var G__16604 = i;
var G__16605 = j;
var G__16606 = k;
var G__16607 = l;
var G__16608 = m;
var G__16609 = n;
var G__16610 = o;
var G__16611 = p;
var G__16612 = q;
var G__16613 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613) : target_fn.call(null,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16614 = a;
var G__16615 = b;
var G__16616 = c;
var G__16617 = d;
var G__16618 = e;
var G__16619 = f;
var G__16620 = g;
var G__16621 = h;
var G__16622 = i;
var G__16623 = j;
var G__16624 = k;
var G__16625 = l;
var G__16626 = m;
var G__16627 = n;
var G__16628 = o;
var G__16629 = p;
var G__16630 = q;
var G__16631 = r;
var G__16632 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632) : self__.dispatch_fn.call(null,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16633 = a;
var G__16634 = b;
var G__16635 = c;
var G__16636 = d;
var G__16637 = e;
var G__16638 = f;
var G__16639 = g;
var G__16640 = h;
var G__16641 = i;
var G__16642 = j;
var G__16643 = k;
var G__16644 = l;
var G__16645 = m;
var G__16646 = n;
var G__16647 = o;
var G__16648 = p;
var G__16649 = q;
var G__16650 = r;
var G__16651 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651) : target_fn.call(null,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16652 = a;
var G__16653 = b;
var G__16654 = c;
var G__16655 = d;
var G__16656 = e;
var G__16657 = f;
var G__16658 = g;
var G__16659 = h;
var G__16660 = i;
var G__16661 = j;
var G__16662 = k;
var G__16663 = l;
var G__16664 = m;
var G__16665 = n;
var G__16666 = o;
var G__16667 = p;
var G__16668 = q;
var G__16669 = r;
var G__16670 = s;
var G__16671 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671) : self__.dispatch_fn.call(null,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16672 = a;
var G__16673 = b;
var G__16674 = c;
var G__16675 = d;
var G__16676 = e;
var G__16677 = f;
var G__16678 = g;
var G__16679 = h;
var G__16680 = i;
var G__16681 = j;
var G__16682 = k;
var G__16683 = l;
var G__16684 = m;
var G__16685 = n;
var G__16686 = o;
var G__16687 = p;
var G__16688 = q;
var G__16689 = r;
var G__16690 = s;
var G__16691 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691) : target_fn.call(null,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16693 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__16693);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__16698 = msg;
return Error(G__16698);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__16703 = x;
var G__16704 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16703,G__16704) : pred.call(null,G__16703,G__16704));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__16705 = y;
var G__16706 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16705,G__16706) : pred.call(null,G__16705,G__16706));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map